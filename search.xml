<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>较大分组的位置</title>
      <link href="2021/01/05/largegroup/"/>
      <url>2021/01/05/largegroup/</url>
      
        <content type="html"><![CDATA[<h1 id="较大分组的位置"><a class="markdownIt-Anchor" href="#较大分组的位置"></a> 较大分组的位置</h1><p>在一个由小写字母构成的字符串 s 中，包含由一些连续的相同字符所构成的分组。</p><p>例如，在字符串 s = “abbxxxxzyy” 中，就含有 “a”, “bb”, “xxxx”, “z” 和 “yy” 这样的一些分组。</p><p>分组可以用区间 [start, end] 表示，其中 start 和 end 分别表示该分组的起始和终止位置的下标。上例中的 “xxxx” 分组用区间表示为 [3,6] 。</p><p>我们称所有包含大于或等于三个连续字符的分组为 较大分组 。</p><p>找到每一个 较大分组 的区间，按起始位置下标递增顺序排序后，返回结果。</p><p>示例 1：</p><blockquote><p>输入：s = “abbxxxxzzy”<br />输出：[[3,6]]<br />解释：“xxxx” 是一个起始于 3 且终止于 6 的较大分组。</p></blockquote><p>示例 2：</p><blockquote><p>输入：s = “abc”<br />输出：[]<br />解释：“a”,“b” 和 “c” 均不是符合要求的较大分组。</p></blockquote><p>示例 3：</p><blockquote><p>输入：s = “abcdddeeeeaabbbcd”<br />输出：[[3,5],[6,9],[12,14]]<br />解释：较大分组为 “ddd”, “eeee” 和 “bbb”</p></blockquote><p>示例 4：</p><blockquote><p>输入：s = “aba”<br />输出：[]</p></blockquote><p>提示：</p><blockquote><p>1 &lt;= s.length &lt;= 1000<br />s 仅含小写英文字母</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.jsledd;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.Collections;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> 1.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span> : LargeGroup</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span> : 较大分组的位置</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> : JSLEDD</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span>: 2021-01-05 10:55</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LargeGroup</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> s 字符串</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@description</span> 本人使用方法</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> JSLEDD</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@date</span> 2021/1/5 12:11</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> java.util.List&lt;java.util.List &lt; java.lang.Integer&gt;&gt;</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;List&lt;Integer&gt;&gt; largeGroupPositions(String s) &#123;</span><br><span class="line">        List&lt;List&lt;Integer&gt;&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">char</span> flagchar = <span class="string">&#x27;A&#x27;</span>;</span><br><span class="line">        <span class="keyword">int</span> flaglength = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> flagstart = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; s.length(); i++) &#123;</span><br><span class="line">            <span class="keyword">char</span> c = s.charAt(i);</span><br><span class="line">            <span class="keyword">if</span> (c != flagchar) &#123;</span><br><span class="line">                <span class="keyword">if</span> (flaglength &gt;= <span class="number">3</span>) &#123;</span><br><span class="line">                    list.add(Arrays.asList(flagstart, i-<span class="number">1</span>));</span><br><span class="line">                &#125;</span><br><span class="line">                flaglength = <span class="number">1</span>;</span><br><span class="line">                flagstart = i;</span><br><span class="line">                flagchar = c;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                flaglength++;</span><br><span class="line">                <span class="keyword">if</span> (i == s.length() - <span class="number">1</span>) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (flaglength &gt;= <span class="number">3</span>) &#123;</span><br><span class="line">                        flaglength = <span class="number">1</span>;</span><br><span class="line">                        list.add(Arrays.asList(flagstart, i));</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> list;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> s 官方方法</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@description</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> JSLEDD</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@date</span> 2021/1/5 12:11</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> java.util.List&lt;java.util.List &lt; java.lang.Integer&gt;&gt;</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;List&lt;Integer&gt;&gt; largeGroupPositions_1(String s) &#123;</span><br><span class="line">        List&lt;List&lt;Integer&gt;&gt; ret = <span class="keyword">new</span> ArrayList&lt;List&lt;Integer&gt;&gt;();</span><br><span class="line">        <span class="keyword">int</span> n = s.length();</span><br><span class="line">        <span class="keyword">int</span> num = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (i == n - <span class="number">1</span> || s.charAt(i) != s.charAt(i + <span class="number">1</span>)) &#123;</span><br><span class="line">                <span class="keyword">if</span> (num &gt;= <span class="number">3</span>) &#123;</span><br><span class="line">                    ret.add(Arrays.asList(i - num + <span class="number">1</span>, i));</span><br><span class="line">                &#125;</span><br><span class="line">                num = <span class="number">1</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                num++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ret;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> s 字符串</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@description</span> 其他方法推荐</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> JSLEDD</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@date</span> 2021/1/5 12:15</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> java.util.List&lt;java.util.List &lt; java.lang.Integer&gt;&gt;</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> </span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;List&lt;Integer&gt;&gt; largeGroupPositions_2(String s) &#123;</span><br><span class="line">        List&lt;List&lt;Integer&gt;&gt; res = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">int</span> left = <span class="number">0</span>;<span class="comment">//相同字符串左边边界</span></span><br><span class="line">        <span class="keyword">int</span> length = s.length();</span><br><span class="line">        <span class="keyword">while</span> (left &lt; length) &#123;</span><br><span class="line">            <span class="keyword">int</span> count = <span class="number">0</span>;<span class="comment">//相同字符串的长度</span></span><br><span class="line">            <span class="comment">//统计相同字符串的长度</span></span><br><span class="line">            <span class="keyword">while</span> (left + count &lt; length &amp;&amp; s.charAt(left) == s.charAt(left + count))</span><br><span class="line">                count++;</span><br><span class="line">            <span class="comment">//如果长度大于等于3，就把他加入到res中</span></span><br><span class="line">            <span class="keyword">if</span> (count &gt;= <span class="number">3</span>)</span><br><span class="line">                res.add(Arrays.asList(left, left + count - <span class="number">1</span>));</span><br><span class="line">            <span class="comment">//更新下一个字符串的左边边界</span></span><br><span class="line">            left = left + count;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        LargeGroup largeGroup = <span class="keyword">new</span> LargeGroup();</span><br><span class="line">        List&lt;List&lt;Integer&gt;&gt; abccccdeeef = largeGroup.largeGroupPositions(<span class="string">&quot;aaa&quot;</span>);</span><br><span class="line">        System.out.println(abccccdeeef);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>题目链接：<a href="https://leetcode-cn.com/problems/positions-of-large-groups">https://leetcode-cn.com/problems/positions-of-large-groups</a><br />GITHUB:<a href="https://github.com/shadowagnoy/leetcode">https://github.com/shadowagnoy/leetcode</a></p>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
            <tag> 数组 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mongodb4.2.0 副本集 + 分片 + 自动运维脚本</title>
      <link href="2019/09/29/mongodb42-shard/"/>
      <url>2019/09/29/mongodb42-shard/</url>
      
        <content type="html"><![CDATA[<p>MongoDB4.2.0分片+副本集集群搭建</p><p>现根据需求在平台搭建一个有16台主机的MongoDB集群，主要以下关键点：</p><ul><li>根据最新版本MongoDB推荐，配置文件采用yaml方式来配置</li><li>一共16台服务器，即16个节点。对数据集进行分片，共分8个shard,3个config节点,5个路由节点</li></ul><h3 id="环境准备"><a class="markdownIt-Anchor" href="#环境准备"></a> 环境准备</h3><p>服务器规划：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">CentOS Linux release 7.6.1810</span><br><span class="line">MongoDB 4.2.0</span><br><span class="line">mongodb-linux-x86_64-4.2.0.tgz 二进制包</span><br><span class="line">shard分片主机：</span><br><span class="line">    shard1: </span><br><span class="line">    IP:cache05:27001(主)</span><br><span class="line">    IP:cache06:27001(备)</span><br><span class="line">    IP:cache08:27001(仲)</span><br><span class="line">    shard2: </span><br><span class="line">    IP:cache07:27002(主)</span><br><span class="line">    IP:cache08:27002(备)</span><br><span class="line">    IP:cache06:27002(仲)</span><br><span class="line">    shard3: </span><br><span class="line">       IP:cache09:27003(主)</span><br><span class="line">     IP:cache10:27003(备)</span><br><span class="line">    IP:cache11:27003(仲)</span><br><span class="line">    shard4: </span><br><span class="line">       IP:cache11:27004(主)</span><br><span class="line">     IP:cache12:27004(备)</span><br><span class="line">    IP:cache10:27004(仲)</span><br><span class="line">    shard5: </span><br><span class="line">    IP:cache13:27005(主)</span><br><span class="line">    IP:cache14:27005(备)</span><br><span class="line">    IP:cache16:27005(仲)</span><br><span class="line">    shard6: </span><br><span class="line">    IP:cache15:27006(主)</span><br><span class="line">    IP:cache16:27006(备)</span><br><span class="line">    IP:cache14:27007(仲)</span><br><span class="line">    shard7: </span><br><span class="line">       IP:cache17:27007(主)</span><br><span class="line">     IP:cache18:27007(备)</span><br><span class="line">    IP:cache20:27008(仲)</span><br><span class="line">    shard8: </span><br><span class="line">       IP:cache19:27008(主)</span><br><span class="line">     IP:cache20:27008(备)</span><br><span class="line">    IP:cache18:27008(仲)</span><br><span class="line">configsrv主机：</span><br><span class="line">    IP:cache06:28000</span><br><span class="line">    IP:cache08:28000</span><br><span class="line">    IP:cache10:28000</span><br><span class="line">    </span><br><span class="line">Route(mongods)主机：</span><br><span class="line">        IP:cache12:29000</span><br><span class="line">        IP:cache14:29000</span><br><span class="line">        IP:cache16:29000</span><br><span class="line">        IP:cache18:29000</span><br><span class="line">        IP:cache20:29000</span><br></pre></td></tr></table></figure><h3 id="创建用户"><a class="markdownIt-Anchor" href="#创建用户"></a> 创建用户</h3><p>创建用户mongod，用于安装使用MongoDB 数据库。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">在任意主机 上执行命令,创建用户</span><br><span class="line">ssh root@cache05 &quot;useradd -d /mongod mongod &amp;&amp; passwd mongod&quot;</span><br><span class="line">ssh root@cache06 &quot;useradd -d /mongod mongod &amp;&amp; passwd mongod&quot;</span><br><span class="line">ssh root@cache07 &quot;useradd -d /mongod mongod &amp;&amp; passwd mongod&quot;</span><br><span class="line">ssh root@cache08 &quot;useradd -d /mongod mongod &amp;&amp; passwd mongod&quot;</span><br><span class="line">ssh root@cache09 &quot;useradd -d /mongod mongod &amp;&amp; passwd mongod&quot;</span><br><span class="line">ssh root@cache10 &quot;useradd -d /mongod mongod &amp;&amp; passwd mongod&quot;</span><br><span class="line">ssh root@cache11 &quot;useradd -d /mongod mongod &amp;&amp; passwd mongod&quot;</span><br><span class="line">ssh root@cache12 &quot;useradd -d /mongod mongod &amp;&amp; passwd mongod&quot;</span><br><span class="line">ssh root@cache13 &quot;useradd -d /mongod mongod &amp;&amp; passwd mongod&quot;</span><br><span class="line">ssh root@cache14 &quot;useradd -d /mongod mongod &amp;&amp; passwd mongod&quot;</span><br><span class="line">ssh root@cache15 &quot;useradd -d /mongod mongod &amp;&amp; passwd mongod&quot;</span><br><span class="line">ssh root@cache16 &quot;useradd -d /mongod mongod &amp;&amp; passwd mongod&quot;</span><br><span class="line">ssh root@cache17 &quot;useradd -d /mongod mongod &amp;&amp; passwd mongod&quot;</span><br><span class="line">ssh root@cache18 &quot;useradd -d /mongod mongod &amp;&amp; passwd mongod&quot;</span><br><span class="line">ssh root@cache19 &quot;useradd -d /mongod mongod &amp;&amp; passwd mongod&quot;</span><br><span class="line">ssh root@cache20 &quot;useradd -d /mongod mongod &amp;&amp; passwd mongod&quot;</span><br></pre></td></tr></table></figure><h3 id="免密登陆"><a class="markdownIt-Anchor" href="#免密登陆"></a> 免密登陆</h3><p>我们选取 cache20 作为集群的管理机器，做免密的目的是管理其他节点时，不需要再输入密码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">#cache20  上执行</span><br><span class="line">ssh-keygen -t rsa</span><br><span class="line">ssh-copy-id -i ~&#x2F;.ssh&#x2F;id_rsa.pub cache20</span><br><span class="line">ssh-copy-id -i ~&#x2F;.ssh&#x2F;id_rsa.pub cache19</span><br><span class="line">ssh-copy-id -i ~&#x2F;.ssh&#x2F;id_rsa.pub cache18</span><br><span class="line">ssh-copy-id -i ~&#x2F;.ssh&#x2F;id_rsa.pub cache17</span><br><span class="line">ssh-copy-id -i ~&#x2F;.ssh&#x2F;id_rsa.pub cache16</span><br><span class="line">ssh-copy-id -i ~&#x2F;.ssh&#x2F;id_rsa.pub cache15</span><br><span class="line">ssh-copy-id -i ~&#x2F;.ssh&#x2F;id_rsa.pub cache14</span><br><span class="line">ssh-copy-id -i ~&#x2F;.ssh&#x2F;id_rsa.pub cache13</span><br><span class="line">ssh-copy-id -i ~&#x2F;.ssh&#x2F;id_rsa.pub cache12</span><br><span class="line">ssh-copy-id -i ~&#x2F;.ssh&#x2F;id_rsa.pub cache11</span><br><span class="line">ssh-copy-id -i ~&#x2F;.ssh&#x2F;id_rsa.pub cache10</span><br><span class="line">ssh-copy-id -i ~&#x2F;.ssh&#x2F;id_rsa.pub cache09</span><br><span class="line">ssh-copy-id -i ~&#x2F;.ssh&#x2F;id_rsa.pub cache08</span><br><span class="line">ssh-copy-id -i ~&#x2F;.ssh&#x2F;id_rsa.pub cache07</span><br><span class="line">ssh-copy-id -i ~&#x2F;.ssh&#x2F;id_rsa.pub cache06</span><br><span class="line">ssh-copy-id -i ~&#x2F;.ssh&#x2F;id_rsa.pub cache05</span><br></pre></td></tr></table></figure><h3 id="mongodb安装"><a class="markdownIt-Anchor" href="#mongodb安装"></a> MongoDB安装</h3><p>安装并配置环境变量</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">将安装包mongodb-linux-x86_64-4.2.0.tgz 拷贝到每台机器的家目录</span></span><br><span class="line"><span class="meta">#</span><span class="bash">在主机 cache20 上执行命令</span></span><br><span class="line">ssh mongod@cache05 &quot;mkdir -p /mongod/Tools/ &amp;&amp; tar -zvxf mongodb-linux-x86_64-4.2.0.tgz -C /mongod/Tools/ &amp;&amp; mv /mongod/Tools/mongodb-linux-x86_64-4.2.0 /mongod/Tools/mongodb&quot;</span><br><span class="line">ssh mongod@cache06 &quot;mkdir -p /mongod/Tools/ &amp;&amp; tar -zvxf mongodb-linux-x86_64-4.2.0.tgz -C /mongod/Tools/ &amp;&amp; mv /mongod/Tools/mongodb-linux-x86_64-4.2.0 /mongod/Tools/mongodb&quot;</span><br><span class="line">ssh mongod@cache07 &quot;mkdir -p /mongod/Tools/ &amp;&amp; tar -zvxf mongodb-linux-x86_64-4.2.0.tgz -C /mongod/Tools/ &amp;&amp; mv /mongod/Tools/mongodb-linux-x86_64-4.2.0 /mongod/Tools/mongodb&quot;</span><br><span class="line">ssh mongod@cache08 &quot;mkdir -p /mongod/Tools/ &amp;&amp; tar -zvxf mongodb-linux-x86_64-4.2.0.tgz -C /mongod/Tools/ &amp;&amp; mv /mongod/Tools/mongodb-linux-x86_64-4.2.0 /mongod/Tools/mongodb&quot;</span><br><span class="line">ssh mongod@cache09 &quot;mkdir -p /mongod/Tools/ &amp;&amp; tar -zvxf mongodb-linux-x86_64-4.2.0.tgz -C /mongod/Tools/ &amp;&amp; mv /mongod/Tools/mongodb-linux-x86_64-4.2.0 /mongod/Tools/mongodb&quot;</span><br><span class="line">ssh mongod@cache10 &quot;mkdir -p /mongod/Tools/ &amp;&amp; tar -zvxf mongodb-linux-x86_64-4.2.0.tgz -C /mongod/Tools/ &amp;&amp; mv /mongod/Tools/mongodb-linux-x86_64-4.2.0 /mongod/Tools/mongodb&quot;</span><br><span class="line">ssh mongod@cache11 &quot;mkdir -p /mongod/Tools/ &amp;&amp; tar -zvxf mongodb-linux-x86_64-4.2.0.tgz -C /mongod/Tools/ &amp;&amp; mv /mongod/Tools/mongodb-linux-x86_64-4.2.0 /mongod/Tools/mongodb&quot;</span><br><span class="line">ssh mongod@cache12 &quot;mkdir -p /mongod/Tools/ &amp;&amp; tar -zvxf mongodb-linux-x86_64-4.2.0.tgz -C /mongod/Tools/ &amp;&amp; mv /mongod/Tools/mongodb-linux-x86_64-4.2.0 /mongod/Tools/mongodb&quot;</span><br><span class="line">ssh mongod@cache13 &quot;mkdir -p /mongod/Tools/ &amp;&amp; tar -zvxf mongodb-linux-x86_64-4.2.0.tgz -C /mongod/Tools/ &amp;&amp; mv /mongod/Tools/mongodb-linux-x86_64-4.2.0 /mongod/Tools/mongodb&quot;</span><br><span class="line">ssh mongod@cache14 &quot;mkdir -p /mongod/Tools/ &amp;&amp; tar -zvxf mongodb-linux-x86_64-4.2.0.tgz -C /mongod/Tools/ &amp;&amp; mv /mongod/Tools/mongodb-linux-x86_64-4.2.0 /mongod/Tools/mongodb&quot;</span><br><span class="line">ssh mongod@cache15 &quot;mkdir -p /mongod/Tools/ &amp;&amp; tar -zvxf mongodb-linux-x86_64-4.2.0.tgz -C /mongod/Tools/ &amp;&amp; mv /mongod/Tools/mongodb-linux-x86_64-4.2.0 /mongod/Tools/mongodb&quot;</span><br><span class="line">ssh mongod@cache16 &quot;mkdir -p /mongod/Tools/ &amp;&amp; tar -zvxf mongodb-linux-x86_64-4.2.0.tgz -C /mongod/Tools/ &amp;&amp; mv /mongod/Tools/mongodb-linux-x86_64-4.2.0 /mongod/Tools/mongodb&quot;</span><br><span class="line">ssh mongod@cache17 &quot;mkdir -p /mongod/Tools/ &amp;&amp; tar -zvxf mongodb-linux-x86_64-4.2.0.tgz -C /mongod/Tools/ &amp;&amp; mv /mongod/Tools/mongodb-linux-x86_64-4.2.0 /mongod/Tools/mongodb&quot;</span><br><span class="line">ssh mongod@cache18 &quot;mkdir -p /mongod/Tools/ &amp;&amp; tar -zvxf mongodb-linux-x86_64-4.2.0.tgz -C /mongod/Tools/ &amp;&amp; mv /mongod/Tools/mongodb-linux-x86_64-4.2.0 /mongod/Tools/mongodb&quot;</span><br><span class="line">ssh mongod@cache19 &quot;mkdir -p /mongod/Tools/ &amp;&amp; tar -zvxf mongodb-linux-x86_64-4.2.0.tgz -C /mongod/Tools/ &amp;&amp; mv /mongod/Tools/mongodb-linux-x86_64-4.2.0 /mongod/Tools/mongodb&quot;</span><br><span class="line">ssh mongod@cache20 &quot;mkdir -p /mongod/Tools/ &amp;&amp; tar -zvxf mongodb-linux-x86_64-4.2.0.tgz -C /mongod/Tools/ &amp;&amp; mv /mongod/Tools/mongodb-linux-x86_64-4.2.0 /mongod/Tools/mongodb&quot;</span><br><span class="line">配置环境变量</span><br><span class="line">vim ~/.bash_profile</span><br><span class="line"><span class="meta">#</span><span class="bash">加入以下内容</span></span><br><span class="line">export PATH=/mongod/Tools/mongodb/bin:$PATH</span><br><span class="line">立即生效</span><br><span class="line">source ~/.bash_profile</span><br><span class="line"><span class="meta">#</span><span class="bash">根据要求 数据文件 放在 /data 下面</span></span><br><span class="line">ssh root@cache20 &quot;mkdir /data/mongodata &amp;&amp; chown mongod:mongod /data/mongodata&quot;</span><br><span class="line">ssh root@cache19 &quot;mkdir /data/mongodata &amp;&amp; chown mongod:mongod /data/mongodata&quot;</span><br><span class="line">ssh root@cache18 &quot;mkdir /data/mongodata &amp;&amp; chown mongod:mongod /data/mongodata&quot;</span><br><span class="line">ssh root@cache17 &quot;mkdir /data/mongodata &amp;&amp; chown mongod:mongod /data/mongodata&quot;</span><br><span class="line">ssh root@cache16 &quot;mkdir /data/mongodata &amp;&amp; chown mongod:mongod /data/mongodata&quot;</span><br><span class="line">ssh root@cache15 &quot;mkdir /data/mongodata &amp;&amp; chown mongod:mongod /data/mongodata&quot;</span><br><span class="line">ssh root@cache14 &quot;mkdir /data/mongodata &amp;&amp; chown mongod:mongod /data/mongodata&quot;</span><br><span class="line">ssh root@cache13 &quot;mkdir /data/mongodata &amp;&amp; chown mongod:mongod /data/mongodata&quot;</span><br><span class="line">ssh root@cache12 &quot;mkdir /data/mongodata &amp;&amp; chown mongod:mongod /data/mongodata&quot;</span><br><span class="line">ssh root@cache11 &quot;mkdir /data/mongodata &amp;&amp; chown mongod:mongod /data/mongodata&quot;</span><br><span class="line">ssh root@cache10 &quot;mkdir /data/mongodata &amp;&amp; chown mongod:mongod /data/mongodata&quot;</span><br><span class="line">ssh root@cache09 &quot;mkdir /data/mongodata &amp;&amp; chown mongod:mongod /data/mongodata&quot;</span><br><span class="line">ssh root@cache08 &quot;mkdir /data/mongodata &amp;&amp; chown mongod:mongod /data/mongodata&quot;</span><br><span class="line">ssh root@cache07 &quot;mkdir /data/mongodata &amp;&amp; chown mongod:mongod /data/mongodata&quot;</span><br><span class="line">ssh root@cache06 &quot;mkdir /data/mongodata &amp;&amp; chown mongod:mongod /data/mongodata&quot;</span><br><span class="line">ssh root@cache05 &quot;mkdir /data/mongodata &amp;&amp; chown mongod:mongod /data/mongodata&quot;</span><br></pre></td></tr></table></figure><h3 id="规划目录结构"><a class="markdownIt-Anchor" href="#规划目录结构"></a> 规划目录结构</h3><p>规划相关的目录结构，并且新建文件夹</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">mongo服务通过配置文件启动,存放配置文件目录/mongod/Tools/mongodb/conf/</span></span><br><span class="line"><span class="meta">#</span><span class="bash">存放日志、进程管理信息的目录/mongod/Tools/mongodb/<span class="built_in">log</span>/</span></span><br><span class="line"><span class="meta">#</span><span class="bash">数据存放目录/data/mongodata</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">在 cache20 上执行命令,创建文件夹</span></span><br><span class="line">ssh mongod@cache05 &quot;cd /mongod/Tools/mongodb/ &amp;&amp; mkdir conf log /data/mongodata/shard1&quot;</span><br><span class="line">ssh mongod@cache06 &quot;cd /mongod/Tools/mongodb/ &amp;&amp; mkdir conf log /data/mongodata/configsrv /data/mongodata/shard1 /data/mongodata/shard2&quot;</span><br><span class="line">ssh mongod@cache07 &quot;cd /mongod/Tools/mongodb/ &amp;&amp; mkdir conf log /data/mongodata/shard2&quot;</span><br><span class="line">ssh mongod@cache08 &quot;cd /mongod/Tools/mongodb/ &amp;&amp; mkdir conf log /data/mongodata/configsrv /data/mongodata/shard2 /data/mongodata/shard1&quot;</span><br><span class="line">ssh mongod@cache09 &quot;cd /mongod/Tools/mongodb/ &amp;&amp; mkdir conf log /data/mongodata/shard3&quot;</span><br><span class="line">ssh mongod@cache10 &quot;cd /mongod/Tools/mongodb/ &amp;&amp; mkdir conf log /data/mongodata/configsrv /data/mongodata/shard3 /data/mongodata/shard4&quot;</span><br><span class="line">ssh mongod@cache11 &quot;cd /mongod/Tools/mongodb/ &amp;&amp; mkdir conf log /data/mongodata/shard4&quot;</span><br><span class="line">ssh mongod@cache12 &quot;cd /mongod/Tools/mongodb/ &amp;&amp; mkdir conf log /data/mongodata/shard4 /data/mongodata/shard3&quot;</span><br><span class="line">ssh mongod@cache13 &quot;cd /mongod/Tools/mongodb/ &amp;&amp; mkdir conf log /data/mongodata/shard5&quot;</span><br><span class="line">ssh mongod@cache14 &quot;cd /mongod/Tools/mongodb/ &amp;&amp; mkdir conf log /data/mongodata/shard5 /data/mongodata/shard6&quot;</span><br><span class="line">ssh mongod@cache15 &quot;cd /mongod/Tools/mongodb/ &amp;&amp; mkdir conf log /data/mongodata/shard6&quot;</span><br><span class="line">ssh mongod@cache16 &quot;cd /mongod/Tools/mongodb/ &amp;&amp; mkdir conf log /data/mongodata/shard6 /data/mongodata/shard5&quot;</span><br><span class="line">ssh mongod@cache17 &quot;cd /mongod/Tools/mongodb/ &amp;&amp; mkdir conf log /data/mongodata/shard7&quot;</span><br><span class="line">ssh mongod@cache18 &quot;cd /mongod/Tools/mongodb/ &amp;&amp; mkdir conf log /data/mongodata/shard7 /data/mongodata/shard8&quot;</span><br><span class="line">ssh mongod@cache19 &quot;cd /mongod/Tools/mongodb/ &amp;&amp; mkdir conf log /data/mongodata/shard8&quot;</span><br><span class="line">ssh mongod@cache20 &quot;cd /mongod/Tools/mongodb/ &amp;&amp; mkdir conf log /data/mongodata/shard8 /data/mongodata/shard7&quot;</span><br></pre></td></tr></table></figure><h3 id="集群配置"><a class="markdownIt-Anchor" href="#集群配置"></a> 集群配置</h3><h4 id="config-server配置服务器副本集"><a class="markdownIt-Anchor" href="#config-server配置服务器副本集"></a> config server配置服务器（副本集）</h4><p>根据服务器规划，在cache06、cache08、cache10上部署三台config server副本集，在该三台服务器上分别添加以下配置文件：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">vim</span> <span class="string">/mongod/Tools/mongodb/conf/configsvr.conf</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># where to write logging data.</span></span><br><span class="line"><span class="attr">systemLog:</span></span><br><span class="line">  <span class="attr">destination:</span> <span class="string">file</span></span><br><span class="line">  <span class="attr">logAppend:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">/mongod/Tools/mongodb/log/configsvr.log</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># Where and how to store data.</span></span><br><span class="line"><span class="attr">storage:</span></span><br><span class="line">  <span class="attr">dbPath:</span> <span class="string">/data/mongodata/configsrv</span></span><br><span class="line">  <span class="attr">journal:</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># how the process runs</span></span><br><span class="line"><span class="attr">processManagement:</span></span><br><span class="line">  <span class="attr">fork:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">pidFilePath:</span> <span class="string">/mongod/Tools/mongodb/log/configsrv.pid</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># network interfaces</span></span><br><span class="line"><span class="attr">net:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">28000</span></span><br><span class="line">  <span class="attr">bindIp:</span> <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">#operationProfiling:</span></span><br><span class="line"><span class="attr">replication:</span></span><br><span class="line">    <span class="attr">replSetName:</span> <span class="string">configs</span>       </span><br><span class="line"></span><br><span class="line"><span class="attr">sharding:</span></span><br><span class="line">    <span class="attr">clusterRole:</span> <span class="string">configsvr</span></span><br></pre></td></tr></table></figure><p>启动这三台服务器的config server</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mongod -f /mongod/Tools/mongodb/conf/configsvr.conf</span><br></pre></td></tr></table></figure><p>登陆任意一台服务器，初始化副本集</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">mongo --port 28000 --host cache06</span><br><span class="line"><span class="meta">#</span><span class="bash">定义副本集配置（键“_id”对应的值必须与配置文件中的replicaction.replSetName一致）</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> config = &#123;_id : <span class="string">&quot;configs&quot;</span>,members : [&#123;_id : 0, host : <span class="string">&quot;cache06:28000&quot;</span> &#125;,&#123;_id : 1, host : <span class="string">&quot;cache08:28000&quot;</span> &#125;,&#123;_id : 2, host : <span class="string">&quot;cache10:28000&quot;</span> &#125;]&#125;</span></span><br><span class="line"><span class="meta">#</span><span class="bash">初始化副本集</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">   rs.initiate(config)</span></span><br><span class="line">......</span><br><span class="line"><span class="meta">#</span><span class="bash">查看分区状态</span></span><br><span class="line">configs:SECONDARY&gt; rs.status()</span><br><span class="line">......</span><br><span class="line">configs:PRIMARY&gt; </span><br></pre></td></tr></table></figure><h4 id="shard-server分片服务器副本集"><a class="markdownIt-Anchor" href="#shard-server分片服务器副本集"></a> shard server分片服务器（副本集）</h4><h5 id="配置shard1副本集"><a class="markdownIt-Anchor" href="#配置shard1副本集"></a> 配置shard1副本集</h5><p>在cache05、cache06、cache08服务器上做以下配置：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">vim</span> <span class="string">/mongod/Tools/mongodb/conf/shard1.conf</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># where to write logging data.</span></span><br><span class="line"><span class="attr">systemLog:</span></span><br><span class="line">  <span class="attr">destination:</span> <span class="string">file</span></span><br><span class="line">  <span class="attr">logAppend:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">/mongod/Tools/mongodb/log/shard1.log</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># Where and how to store data.</span></span><br><span class="line"><span class="attr">storage:</span></span><br><span class="line">  <span class="attr">dbPath:</span> <span class="string">/data/mongodata/shard1</span></span><br><span class="line">  <span class="attr">journal:</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># how the process runs</span></span><br><span class="line"><span class="attr">processManagement:</span></span><br><span class="line">  <span class="attr">fork:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">pidFilePath:</span> <span class="string">/mongod/Tools/mongodb/log/shard1.pid</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># network interfaces</span></span><br><span class="line"><span class="attr">net:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">27001</span></span><br><span class="line">  <span class="attr">bindIp:</span> <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">#operationProfiling:</span></span><br><span class="line"><span class="attr">replication:</span></span><br><span class="line">    <span class="attr">replSetName:</span> <span class="string">shard1</span></span><br><span class="line"></span><br><span class="line"><span class="attr">sharding:</span></span><br><span class="line">    <span class="attr">clusterRole:</span> <span class="string">shardsvr</span></span><br></pre></td></tr></table></figure><p>启动这三台服务器的shard1 server</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mongod -f /mongod/Tools/mongodb/conf/shard1.conf</span><br></pre></td></tr></table></figure><p>登陆任意一台服务器，初始化副本集</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mongo --port 27001 --host cache05</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">定义副本集配置（键“_id”对应的值必须与配置文件中的replicaction.replSetName一致,priority代表权重[1,100]，大的被分配为主服务器，0永久不会变为主服务器）</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">   config = &#123;_id : <span class="string">&quot;shard1&quot;</span>,members : [&#123;_id : 0, host : <span class="string">&quot;cache05:27001&quot;</span>, priority : 2 &#125;,&#123;_id : 1, host : <span class="string">&quot;cache06:27001&quot;</span>, priority : 1 &#125;,&#123;_id : 2, host : <span class="string">&quot;cache08:27001&quot;</span>, arbiterOnly :<span class="literal">true</span>&#125;]&#125;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> rs.initiate(config)</span></span><br><span class="line">shard1:SECONDARY&gt; rs.status();</span><br><span class="line">......</span><br><span class="line">shard1:PRIMARY&gt;  </span><br><span class="line">......</span><br></pre></td></tr></table></figure><h5 id="配置shard2副本集"><a class="markdownIt-Anchor" href="#配置shard2副本集"></a> 配置shard2副本集</h5><p>在cache07、cache08、cache06服务器上做以下配置：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">vim</span> <span class="string">/mongod/Tools/mongodb/conf/shard2.conf</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># where to write logging data.</span></span><br><span class="line"><span class="attr">systemLog:</span></span><br><span class="line">  <span class="attr">destination:</span> <span class="string">file</span></span><br><span class="line">  <span class="attr">logAppend:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">/mongod/Tools/mongodb/log/shard2.log</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># Where and how to store data.</span></span><br><span class="line"><span class="attr">storage:</span></span><br><span class="line">  <span class="attr">dbPath:</span> <span class="string">/data/mongodata/shard2</span></span><br><span class="line">  <span class="attr">journal:</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># how the process runs</span></span><br><span class="line"><span class="attr">processManagement:</span></span><br><span class="line">  <span class="attr">fork:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">pidFilePath:</span> <span class="string">/mongod/Tools/mongodb/log/shard2.pid</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># network interfaces</span></span><br><span class="line"><span class="attr">net:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">27002</span></span><br><span class="line">  <span class="attr">bindIp:</span> <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">#operationProfiling:</span></span><br><span class="line"><span class="attr">replication:</span></span><br><span class="line">    <span class="attr">replSetName:</span> <span class="string">shard2</span></span><br><span class="line"></span><br><span class="line"><span class="attr">sharding:</span></span><br><span class="line">    <span class="attr">clusterRole:</span> <span class="string">shardsvr</span></span><br></pre></td></tr></table></figure><p>启动这三台服务器的shard2 server</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mongod -f /mongod/Tools/mongodb/conf/shard2.conf</span><br></pre></td></tr></table></figure><p>登陆任意一台服务器，初始化副本集</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mongo --port 27002 --host cache07</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">定义副本集配置（键“_id”对应的值必须与配置文件中的replicaction.replSetName一致,priority代表权重[1,100]，大的被分配为主服务器，0永久不会变为主服务器）</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> config = &#123;_id : <span class="string">&quot;shard2&quot;</span>,members : [&#123;_id : 0, host : <span class="string">&quot;cache07:27002&quot;</span>, priority : 2 &#125;,&#123;_id : 1, host : <span class="string">&quot;cache08:27002&quot;</span>, priority : 1 &#125;,&#123;_id : 2, host : <span class="string">&quot;cache06:27002&quot;</span>, arbiterOnly :<span class="literal">true</span>&#125;]&#125;</span></span><br><span class="line">......</span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> rs.initiate(config)</span></span><br><span class="line">......</span><br><span class="line">shard2:SECONDARY&gt; rs.status();</span><br><span class="line">......</span><br><span class="line">shard2:PRIMARY&gt;  </span><br></pre></td></tr></table></figure><h5 id="配置shard3副本集"><a class="markdownIt-Anchor" href="#配置shard3副本集"></a> 配置shard3副本集</h5><p>在cache09、cache10、cache12服务器上做以下配置：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">vim</span> <span class="string">/mongod/Tools/mongodb/conf/shard3.conf</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># where to write logging data.</span></span><br><span class="line"><span class="attr">systemLog:</span></span><br><span class="line">  <span class="attr">destination:</span> <span class="string">file</span></span><br><span class="line">  <span class="attr">logAppend:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">/mongod/Tools/mongodb/log/shard3.log</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># Where and how to store data.</span></span><br><span class="line"><span class="attr">storage:</span></span><br><span class="line">  <span class="attr">dbPath:</span> <span class="string">/data/mongodata/shard3</span></span><br><span class="line">  <span class="attr">journal:</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># how the process runs</span></span><br><span class="line"><span class="attr">processManagement:</span></span><br><span class="line">  <span class="attr">fork:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">pidFilePath:</span> <span class="string">/mongod/Tools/mongodb/log/shard3.pid</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># network interfaces</span></span><br><span class="line"><span class="attr">net:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">27003</span></span><br><span class="line">  <span class="attr">bindIp:</span> <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">#operationProfiling:</span></span><br><span class="line"><span class="attr">replication:</span></span><br><span class="line">    <span class="attr">replSetName:</span> <span class="string">shard3</span></span><br><span class="line"></span><br><span class="line"><span class="attr">sharding:</span></span><br><span class="line">    <span class="attr">clusterRole:</span> <span class="string">shardsvr</span></span><br></pre></td></tr></table></figure><p>启动这三台服务器的shard3 server</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mongod -f /mongod/Tools/mongodb/conf/shard3.conf</span><br></pre></td></tr></table></figure><p>登陆任意一台服务器，初始化副本集</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mongo --port 27003 --host cache09</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">定义副本集配置（键“_id”对应的值必须与配置文件中的replicaction.replSetName一致,priority代表权重[1,100]，大的被分配为主服务器，0永久不会变为主服务器）</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">    config = &#123;_id : <span class="string">&quot;shard3&quot;</span>,members : [&#123;_id : 0, host : <span class="string">&quot;cache09:27003&quot;</span>, priority : 2 &#125;,&#123;_id : 1, host : <span class="string">&quot;cache10:27003&quot;</span>, priority : 1 &#125;,&#123;_id : 2, host : <span class="string">&quot;cache12:27003&quot;</span>, arbiterOnly :<span class="literal">true</span>&#125;]&#125;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> rs.initiate(config)</span></span><br><span class="line">shard3:SECONDARY&gt; rs.status();</span><br><span class="line">shard3:PRIMARY&gt; </span><br></pre></td></tr></table></figure><h5 id="配置shard4副本集"><a class="markdownIt-Anchor" href="#配置shard4副本集"></a> 配置shard4副本集</h5><p>在cache11、cache12、cache10服务器上做以下配置：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">vim</span> <span class="string">/mongod/Tools/mongodb/conf/shard4.conf</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># where to write logging data.</span></span><br><span class="line"><span class="attr">systemLog:</span></span><br><span class="line">  <span class="attr">destination:</span> <span class="string">file</span></span><br><span class="line">  <span class="attr">logAppend:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">/mongod/Tools/mongodb/log/shard4.log</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># Where and how to store data.</span></span><br><span class="line"><span class="attr">storage:</span></span><br><span class="line">  <span class="attr">dbPath:</span> <span class="string">/data/mongodata/shard4</span></span><br><span class="line">  <span class="attr">journal:</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># how the process runs</span></span><br><span class="line"><span class="attr">processManagement:</span></span><br><span class="line">  <span class="attr">fork:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">pidFilePath:</span> <span class="string">/mongod/Tools/mongodb/log/shard4.pid</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># network interfaces</span></span><br><span class="line"><span class="attr">net:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">27004</span></span><br><span class="line">  <span class="attr">bindIp:</span> <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">#operationProfiling:</span></span><br><span class="line"><span class="attr">replication:</span></span><br><span class="line">    <span class="attr">replSetName:</span> <span class="string">shard4</span></span><br><span class="line"></span><br><span class="line"><span class="attr">sharding:</span></span><br><span class="line">    <span class="attr">clusterRole:</span> <span class="string">shardsvr</span></span><br></pre></td></tr></table></figure><p>启动这三台服务器的shard4 server</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mongod -f /mongod/Tools/mongodb/conf/shard4.conf</span><br></pre></td></tr></table></figure><p>登陆任意一台服务器，初始化副本集</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mongo --port 27004 --host cache11</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">定义副本集配置（键“_id”对应的值必须与配置文件中的replicaction.replSetName一致,priority代表权重[1,100]，大的被分配为主服务器，0永久不会变为主服务器）</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">    config = &#123;_id : <span class="string">&quot;shard4&quot;</span>,members : [&#123;_id : 0, host : <span class="string">&quot;cache11:27004&quot;</span>, priority : 2 &#125;,&#123;_id : 1, host : <span class="string">&quot;cache12:27004&quot;</span>, priority : 1 &#125;,&#123;_id : 2, host : <span class="string">&quot;cache10:27004&quot;</span>, arbiterOnly :<span class="literal">true</span>&#125;]&#125;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> rs.initiate(config)</span></span><br><span class="line">shard3:SECONDARY&gt; rs.status();</span><br><span class="line">shard3:PRIMARY&gt; </span><br></pre></td></tr></table></figure><h5 id="配置shard5副本集"><a class="markdownIt-Anchor" href="#配置shard5副本集"></a> 配置shard5副本集</h5><p>在cache13、cache14、cache16服务器上做以下配置：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">vim</span> <span class="string">/mongod/Tools/mongodb/conf/shard5.conf</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># where to write logging data.</span></span><br><span class="line"><span class="attr">systemLog:</span></span><br><span class="line">  <span class="attr">destination:</span> <span class="string">file</span></span><br><span class="line">  <span class="attr">logAppend:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">/mongod/Tools/mongodb/log/shard5.log</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># Where and how to store data.</span></span><br><span class="line"><span class="attr">storage:</span></span><br><span class="line">  <span class="attr">dbPath:</span> <span class="string">/data/mongodata/shard5</span></span><br><span class="line">  <span class="attr">journal:</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># how the process runs</span></span><br><span class="line"><span class="attr">processManagement:</span></span><br><span class="line">  <span class="attr">fork:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">pidFilePath:</span> <span class="string">/mongod/Tools/mongodb/log/shard5.pid</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># network interfaces</span></span><br><span class="line"><span class="attr">net:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">27005</span></span><br><span class="line">  <span class="attr">bindIp:</span> <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">#operationProfiling:</span></span><br><span class="line"><span class="attr">replication:</span></span><br><span class="line">    <span class="attr">replSetName:</span> <span class="string">shard5</span></span><br><span class="line"></span><br><span class="line"><span class="attr">sharding:</span></span><br><span class="line">    <span class="attr">clusterRole:</span> <span class="string">shardsvr</span></span><br></pre></td></tr></table></figure><p>启动这三台服务器的shard5 server</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mongod -f /mongod/Tools/mongodb/conf/shard5.conf</span><br></pre></td></tr></table></figure><p>登陆任意一台服务器，初始化副本集</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mongo --port 27005 --host cache13</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">定义副本集配置（键“_id”对应的值必须与配置文件中的replicaction.replSetName一致,priority代表权重[1,100]，大的被分配为主服务器，0永久不会变为主服务器）</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">    config = &#123;_id : <span class="string">&quot;shard5&quot;</span>,members : [&#123;_id : 0, host : <span class="string">&quot;cache13:27005&quot;</span>, priority : 2 &#125;,&#123;_id : 1, host : <span class="string">&quot;cache14:27005&quot;</span>, priority : 1 &#125;,&#123;_id : 2, host : <span class="string">&quot;cache16:27005&quot;</span>, arbiterOnly :<span class="literal">true</span>&#125;]&#125;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> rs.initiate(config)</span></span><br><span class="line">shard3:SECONDARY&gt; rs.status();</span><br><span class="line">shard3:PRIMARY&gt; </span><br></pre></td></tr></table></figure><h5 id="配置shard6副本集"><a class="markdownIt-Anchor" href="#配置shard6副本集"></a> 配置shard6副本集</h5><p>在cache15、cache16、cache14服务器上做以下配置：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">vim</span> <span class="string">/mongod/Tools/mongodb/conf/shard6.conf</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># where to write logging data.</span></span><br><span class="line"><span class="attr">systemLog:</span></span><br><span class="line">  <span class="attr">destination:</span> <span class="string">file</span></span><br><span class="line">  <span class="attr">logAppend:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">/mongod/Tools/mongodb/log/shard6.log</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># Where and how to store data.</span></span><br><span class="line"><span class="attr">storage:</span></span><br><span class="line">  <span class="attr">dbPath:</span> <span class="string">/data/mongodata/shard6</span></span><br><span class="line">  <span class="attr">journal:</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># how the process runs</span></span><br><span class="line"><span class="attr">processManagement:</span></span><br><span class="line">  <span class="attr">fork:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">pidFilePath:</span> <span class="string">/mongod/Tools/mongodb/log/shard6.pid</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># network interfaces</span></span><br><span class="line"><span class="attr">net:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">27006</span></span><br><span class="line">  <span class="attr">bindIp:</span> <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">#operationProfiling:</span></span><br><span class="line"><span class="attr">replication:</span></span><br><span class="line">    <span class="attr">replSetName:</span> <span class="string">shard6</span></span><br><span class="line"></span><br><span class="line"><span class="attr">sharding:</span></span><br><span class="line">    <span class="attr">clusterRole:</span> <span class="string">shardsvr</span></span><br></pre></td></tr></table></figure><p>启动这三台服务器的shard6 server</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mongod -f /mongod/Tools/mongodb/conf/shard6.conf</span><br></pre></td></tr></table></figure><p>登陆任意一台服务器，初始化副本集</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mongo --port 27006 --host cache15</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">定义副本集配置（键“_id”对应的值必须与配置文件中的replicaction.replSetName一致,priority代表权重[1,100]，大的被分配为主服务器，0永久不会变为主服务器）</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">    config = &#123;_id : <span class="string">&quot;shard6&quot;</span>,members : [&#123;_id : 0, host : <span class="string">&quot;cache15:27006&quot;</span>, priority : 2 &#125;,&#123;_id : 1, host : <span class="string">&quot;cache16:27006&quot;</span>, priority : 1 &#125;,&#123;_id : 2, host : <span class="string">&quot;cache14:27006&quot;</span>, arbiterOnly :<span class="literal">true</span>&#125;]&#125;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> rs.initiate(config)</span></span><br><span class="line">shard3:SECONDARY&gt; rs.status();</span><br><span class="line">shard3:PRIMARY&gt; </span><br></pre></td></tr></table></figure><h5 id="配置shard7副本集"><a class="markdownIt-Anchor" href="#配置shard7副本集"></a> 配置shard7副本集</h5><p>在cache17、cache18、cache20服务器上做以下配置：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">vim</span> <span class="string">/mongod/Tools/mongodb/conf/shard7.conf</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># where to write logging data.</span></span><br><span class="line"><span class="attr">systemLog:</span></span><br><span class="line">  <span class="attr">destination:</span> <span class="string">file</span></span><br><span class="line">  <span class="attr">logAppend:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">/mongod/Tools/mongodb/log/shard7.log</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># Where and how to store data.</span></span><br><span class="line"><span class="attr">storage:</span></span><br><span class="line">  <span class="attr">dbPath:</span> <span class="string">/data/mongodata/shard7</span></span><br><span class="line">  <span class="attr">journal:</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># how the process runs</span></span><br><span class="line"><span class="attr">processManagement:</span></span><br><span class="line">  <span class="attr">fork:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">pidFilePath:</span> <span class="string">/mongod/Tools/mongodb/log/shard7.pid</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># network interfaces</span></span><br><span class="line"><span class="attr">net:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">27007</span></span><br><span class="line">  <span class="attr">bindIp:</span> <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">#operationProfiling:</span></span><br><span class="line"><span class="attr">replication:</span></span><br><span class="line">    <span class="attr">replSetName:</span> <span class="string">shard7</span></span><br><span class="line"></span><br><span class="line"><span class="attr">sharding:</span></span><br><span class="line">    <span class="attr">clusterRole:</span> <span class="string">shardsvr</span></span><br></pre></td></tr></table></figure><p>启动这三台服务器的shard3 server</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mongod -f /mongod/Tools/mongodb/conf/shard7.conf</span><br></pre></td></tr></table></figure><p>登陆任意一台服务器，初始化副本集</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mongo --port 27007 --host cache17</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">定义副本集配置（键“_id”对应的值必须与配置文件中的replicaction.replSetName一致,priority代表权重[1,100]，大的被分配为主服务器，0永久不会变为主服务器）</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">    config = &#123;_id : <span class="string">&quot;shard7&quot;</span>,members : [&#123;_id : 0, host : <span class="string">&quot;cache17:27007&quot;</span>, priority : 2 &#125;,&#123;_id : 1, host : <span class="string">&quot;cache18:27007&quot;</span>, priority : 1 &#125;,&#123;_id : 2, host : <span class="string">&quot;cache20:27007&quot;</span>, arbiterOnly :<span class="literal">true</span>&#125;]&#125;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> rs.initiate(config)</span></span><br><span class="line">shard3:SECONDARY&gt; rs.status();</span><br><span class="line">shard3:PRIMARY&gt; </span><br></pre></td></tr></table></figure><h5 id="配置shard8副本集"><a class="markdownIt-Anchor" href="#配置shard8副本集"></a> 配置shard8副本集</h5><p>在cache19、cache20、cache18服务器上做以下配置：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">vim</span> <span class="string">/mongod/Tools/mongodb/conf/shard8.conf</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># where to write logging data.</span></span><br><span class="line"><span class="attr">systemLog:</span></span><br><span class="line">  <span class="attr">destination:</span> <span class="string">file</span></span><br><span class="line">  <span class="attr">logAppend:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">/mongod/Tools/mongodb/log/shard8.log</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># Where and how to store data.</span></span><br><span class="line"><span class="attr">storage:</span></span><br><span class="line">  <span class="attr">dbPath:</span> <span class="string">/data/mongodata/shard8</span></span><br><span class="line">  <span class="attr">journal:</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># how the process runs</span></span><br><span class="line"><span class="attr">processManagement:</span></span><br><span class="line">  <span class="attr">fork:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">pidFilePath:</span> <span class="string">/mongod/Tools/mongodb/log/shard8.pid</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># network interfaces</span></span><br><span class="line"><span class="attr">net:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">27008</span></span><br><span class="line">  <span class="attr">bindIp:</span> <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">#operationProfiling:</span></span><br><span class="line"><span class="attr">replication:</span></span><br><span class="line">    <span class="attr">replSetName:</span> <span class="string">shard8</span></span><br><span class="line"></span><br><span class="line"><span class="attr">sharding:</span></span><br><span class="line">    <span class="attr">clusterRole:</span> <span class="string">shardsvr</span></span><br></pre></td></tr></table></figure><p>启动这三台服务器的shard8 server</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mongod -f /mongod/Tools/mongodb/conf/shard8.conf</span><br></pre></td></tr></table></figure><p>登陆任意一台服务器，初始化副本集</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mongo --port 27008 --host cache19</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">定义副本集配置（键“_id”对应的值必须与配置文件中的replicaction.replSetName一致,priority代表权重[1,100]，大的被分配为主服务器，0永久不会变为主服务器）</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">    config = &#123;_id : <span class="string">&quot;shard8&quot;</span>,members : [&#123;_id : 0, host : <span class="string">&quot;cache19:27008&quot;</span>, priority : 2 &#125;,&#123;_id : 1, host : <span class="string">&quot;cache20:27008&quot;</span>, priority : 1 &#125;,&#123;_id : 2, host : <span class="string">&quot;cache18:27008&quot;</span>, arbiterOnly :<span class="literal">true</span>&#125;]&#125;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> rs.initiate(config)</span></span><br><span class="line">shard3:SECONDARY&gt; rs.status();</span><br><span class="line">shard3:PRIMARY&gt; </span><br></pre></td></tr></table></figure><h4 id="mongos-server路由服务器"><a class="markdownIt-Anchor" href="#mongos-server路由服务器"></a> mongos server路由服务器</h4><p>根据服务器规划，在cache12、cache14、cache16、cache18、cache20上部署路由服务器，在该5台服务器上分别添加以下配置文件：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">vim</span> <span class="string">/mongod/Tools/mongodb/conf/mongos.conf</span></span><br><span class="line"></span><br><span class="line"><span class="attr">systemLog:</span></span><br><span class="line">  <span class="attr">destination:</span> <span class="string">file</span></span><br><span class="line">  <span class="attr">logAppend:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">/mongod/Tools/mongodb/log/mongos.log</span></span><br><span class="line"><span class="attr">processManagement:</span></span><br><span class="line">  <span class="attr">fork:</span> <span class="literal">true</span></span><br><span class="line"><span class="comment">#  pidFilePath: /mongod/Tools/mongodb/log/mongos.pid</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># network interfaces</span></span><br><span class="line"><span class="attr">net:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">29000</span></span><br><span class="line">  <span class="attr">bindIp:</span> <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span></span><br><span class="line"><span class="comment">#监听的配置服务器,只能有1个或者3个 configs为配置服务器的副本集名字</span></span><br><span class="line"><span class="attr">sharding:</span></span><br><span class="line">   <span class="attr">configDB:</span> <span class="string">configs/cache07:28000,cache08:28000,cache10:28000</span></span><br></pre></td></tr></table></figure><p>启动这三台服务器的mongos server</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mongos -f /mongod/Tools/mongodb/conf/mongos.conf</span><br></pre></td></tr></table></figure><h4 id="启用分片"><a class="markdownIt-Anchor" href="#启用分片"></a> 启用分片</h4><blockquote><p>目前已经搭建好配置服务器、数据分片服务器、路由服务器，下面进行分片启用，使得app连接到路由服务器时可以使用分片机制</p></blockquote><p>登录任意一台mongos</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">mongo --port 29000 --host cache12</span><br><span class="line"><span class="meta">mongos&gt;</span><span class="bash"> use admin</span></span><br><span class="line">switched to db admin</span><br><span class="line"><span class="meta">mongos&gt;</span><span class="bash"> sh.addShard(<span class="string">&quot;shard1/cache05:27001,cache06:27001,cache08:27001&quot;</span>)</span></span><br><span class="line"><span class="meta">mongos&gt;</span><span class="bash"> sh.addShard(<span class="string">&quot;shard2/cache07:27002,cache08:27002,cache06:27002&quot;</span>)</span></span><br><span class="line"><span class="meta">mongos&gt;</span><span class="bash"> sh.addShard(<span class="string">&quot;shard3/cache09:27003,cache10:27003,cache12:27003&quot;</span>)</span></span><br><span class="line"><span class="meta">mongos&gt;</span><span class="bash"> sh.addShard(<span class="string">&quot;shard4/cache11:27004,cache12:27004,cache10:27004&quot;</span>)</span></span><br><span class="line"><span class="meta">mongos&gt;</span><span class="bash"> sh.addShard(<span class="string">&quot;shard5/cache13:27005,cache14:27005,cache16:27005&quot;</span>)</span></span><br><span class="line"><span class="meta">mongos&gt;</span><span class="bash"> sh.addShard(<span class="string">&quot;shard6/cache15:27006,cache16:27006,cache14:27006&quot;</span>)</span></span><br><span class="line"><span class="meta">mongos&gt;</span><span class="bash"> sh.addShard(<span class="string">&quot;shard7/cache17:27007,cache18:27007,cache20:27007&quot;</span>)</span></span><br><span class="line"><span class="meta">mongos&gt;</span><span class="bash"> sh.addShard(<span class="string">&quot;shard8/cache19:27008,cache20:27008,cache18:27008&quot;</span>)</span></span><br><span class="line"><span class="meta">mongos&gt;</span><span class="bash"> sh.status()</span></span><br><span class="line">--- Sharding Status --- </span><br><span class="line">  sharding version: &#123;</span><br><span class="line">        &quot;_id&quot; : 1,</span><br><span class="line">        &quot;minCompatibleVersion&quot; : 5,</span><br><span class="line">        &quot;currentVersion&quot; : 6,</span><br><span class="line">        &quot;clusterId&quot; : ObjectId(&quot;5d8048f71f14b07fb9b707e5&quot;)</span><br><span class="line">  &#125;</span><br><span class="line">  shards:</span><br><span class="line">        &#123;  &quot;_id&quot; : &quot;shard1&quot;,  &quot;host&quot; : &quot;shard1/cache05:27001,cache06:27001&quot;,  &quot;state&quot; : 1 &#125;</span><br><span class="line">        &#123;  &quot;_id&quot; : &quot;shard2&quot;,  &quot;host&quot; : &quot;shard2/cache07:27002,cache08:27002&quot;,  &quot;state&quot; : 1 &#125;</span><br><span class="line">        &#123;  &quot;_id&quot; : &quot;shard3&quot;,  &quot;host&quot; : &quot;shard3/cache09:27003,cache10:27003&quot;,  &quot;state&quot; : 1 &#125;</span><br><span class="line">        &#123;  &quot;_id&quot; : &quot;shard4&quot;,  &quot;host&quot; : &quot;shard4/cache11:27004,cache12:27004&quot;,  &quot;state&quot; : 1 &#125;</span><br><span class="line">        &#123;  &quot;_id&quot; : &quot;shard5&quot;,  &quot;host&quot; : &quot;shard5/cache13:27005,cache14:27005&quot;,  &quot;state&quot; : 1 &#125;</span><br><span class="line">        &#123;  &quot;_id&quot; : &quot;shard6&quot;,  &quot;host&quot; : &quot;shard6/cache15:27006,cache16:27006&quot;,  &quot;state&quot; : 1 &#125;</span><br><span class="line">        &#123;  &quot;_id&quot; : &quot;shard7&quot;,  &quot;host&quot; : &quot;shard7/cache17:27007,cache18:27007&quot;,  &quot;state&quot; : 1 &#125;</span><br><span class="line">        &#123;  &quot;_id&quot; : &quot;shard8&quot;,  &quot;host&quot; : &quot;shard8/cache19:27008,cache20:27008&quot;,  &quot;state&quot; : 1 &#125;</span><br><span class="line">  active mongoses:</span><br><span class="line">        &quot;4.2.0&quot; : 5</span><br><span class="line">  autosplit:</span><br><span class="line">        Currently enabled: yes</span><br><span class="line">  balancer:</span><br><span class="line">        Currently enabled:  yes</span><br><span class="line">        Currently running:  no</span><br><span class="line">        Failed balancer rounds in last 5 attempts:  0</span><br><span class="line">        Migration Results for the last 24 hours: </span><br><span class="line">                No recent migrations</span><br><span class="line">  databases:</span><br><span class="line">        &#123;  &quot;_id&quot; : &quot;config&quot;,  &quot;primary&quot; : &quot;config&quot;,  &quot;partitioned&quot; : true &#125;</span><br><span class="line">                config.system.sessions</span><br><span class="line">                        shard key: &#123; &quot;_id&quot; : 1 &#125;</span><br><span class="line">                        unique: false</span><br><span class="line">                        balancing: true</span><br><span class="line">                        chunks:</span><br><span class="line">                                shard1  1</span><br><span class="line">                        &#123; &quot;_id&quot; : &#123; &quot;$minKey&quot; : 1 &#125; &#125; --&gt;&gt; &#123; &quot;_id&quot; : &#123; &quot;$maxKey&quot; : 1 &#125; &#125; on : shard1 Timestamp(1, 0)</span><br><span class="line"><span class="meta">mongos&gt;</span><span class="bash"> </span> </span><br></pre></td></tr></table></figure><h4 id="测试分片"><a class="markdownIt-Anchor" href="#测试分片"></a> 测试分片</h4><p><strong>连接mongodb</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line">mongo --port 29000 --host cache20</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">###为了展示出效果，修改一下默认的chunksize大小,这里修改为1M</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash">默认的chunksize大小为64M，示例修改命令如下：</span></span><br><span class="line"><span class="meta">#</span><span class="bash">use config</span></span><br><span class="line"><span class="meta">#</span><span class="bash">db.settings.save( &#123; _id:<span class="string">&quot;chunksize&quot;</span>, value: &lt;sizeInMB&gt; &#125; )</span></span><br><span class="line"></span><br><span class="line">use config</span><br><span class="line">db.settings.save( &#123; _id:&quot;chunksize&quot;, value: 1 &#125; )</span><br><span class="line"><span class="meta">#</span><span class="bash">为<span class="built_in">test</span>数据库开启分片</span></span><br><span class="line"><span class="meta">#</span><span class="bash">选择一个片键age并指定一个集合mycoll对其进行分片</span></span><br><span class="line"></span><br><span class="line"><span class="meta">mongos&gt;</span><span class="bash"> sh.enableSharding(<span class="string">&quot;test&quot;</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">        &quot;ok&quot; : 1,</span><br><span class="line">        &quot;operationTime&quot; : Timestamp(1562670609, 5),</span><br><span class="line">        &quot;$clusterTime&quot; : &#123;</span><br><span class="line">                &quot;clusterTime&quot; : Timestamp(1562670609, 5),</span><br><span class="line">                &quot;signature&quot; : &#123;</span><br><span class="line">                        &quot;hash&quot; : BinData(0,&quot;AAAAAAAAAAAAAAAAAAAAAAAAAAA=&quot;),</span><br><span class="line">                        &quot;keyId&quot; : NumberLong(0)</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">mongos&gt;</span><span class="bash"> sh.shardCollection(<span class="string">&quot;test.mycoll&quot;</span>, &#123;<span class="string">&quot;age&quot;</span>: 1&#125;)</span></span><br><span class="line">&#123;</span><br><span class="line">        &quot;collectionsharded&quot; : &quot;test.mycoll&quot;,</span><br><span class="line">        &quot;collectionUUID&quot; : UUID(&quot;12a512b1-377a-406b-bde9-36c472fd2e0a&quot;),</span><br><span class="line">        &quot;ok&quot; : 1,</span><br><span class="line">        &quot;operationTime&quot; : Timestamp(1562670619, 14),</span><br><span class="line">        &quot;$clusterTime&quot; : &#123;</span><br><span class="line">                &quot;clusterTime&quot; : Timestamp(1562670619, 14),</span><br><span class="line">                &quot;signature&quot; : &#123;</span><br><span class="line">                        &quot;hash&quot; : BinData(0,&quot;AAAAAAAAAAAAAAAAAAAAAAAAAAA=&quot;),</span><br><span class="line">                        &quot;keyId&quot; : NumberLong(0)</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#</span><span class="bash">测试分片，写入数据到数据库中</span></span><br><span class="line"></span><br><span class="line"><span class="meta">mongos&gt;</span><span class="bash"> use <span class="built_in">test</span></span></span><br><span class="line">switched to db test</span><br><span class="line"><span class="meta">mongos&gt;</span><span class="bash"> <span class="keyword">for</span> (i = 1; i &lt;= 100000; i++) db.mycoll.insert(&#123;age:(i%100), name:<span class="string">&quot;bigboss_user&quot;</span>+i, address:i+<span class="string">&quot;, Some Road, beijing&quot;</span>, country:<span class="string">&quot;China&quot;</span>, course:<span class="string">&quot;cousre&quot;</span>+<span class="string">&quot;(i%12)&quot;</span>&#125;)</span></span><br><span class="line">   WriteResult(&#123; &quot;nInserted&quot; : 1 &#125;)</span><br><span class="line"><span class="meta">mongos&gt;</span><span class="bash"> sh.status()</span></span><br><span class="line">--- Sharding Status --- </span><br><span class="line">  sharding version: &#123;</span><br><span class="line">        &quot;_id&quot; : 1,</span><br><span class="line">        &quot;minCompatibleVersion&quot; : 5,</span><br><span class="line">        &quot;currentVersion&quot; : 6,</span><br><span class="line">        &quot;clusterId&quot; : ObjectId(&quot;5d24659a031dddbcb7ec8f7c&quot;)</span><br><span class="line">  &#125;</span><br><span class="line">  shards:</span><br><span class="line">        &#123;  &quot;_id&quot; : &quot;shard1&quot;,  &quot;host&quot; : &quot;shard1/hadoop23:27001,hadoop24:27001&quot;,  &quot;state&quot; : 1 &#125;</span><br><span class="line">        &#123;  &quot;_id&quot; : &quot;shard2&quot;,  &quot;host&quot; : &quot;shard2/hadoop26:27002,hadoop27:27002&quot;,  &quot;state&quot; : 1 &#125;</span><br><span class="line">        &#123;  &quot;_id&quot; : &quot;shard3&quot;,  &quot;host&quot; : &quot;shard3/hadoop25:27003,hadoop29:27003&quot;,  &quot;state&quot; : 1 &#125;</span><br><span class="line">  active mongoses:</span><br><span class="line">        &quot;4.0.9&quot; : 3</span><br><span class="line">  autosplit:</span><br><span class="line">        Currently enabled: yes</span><br><span class="line">  balancer:</span><br><span class="line">        Currently enabled:  yes</span><br><span class="line">        Currently running:  yes</span><br><span class="line">        Collections with active migrations: </span><br><span class="line">                test.mycoll2 started at Tue Jul 09 2019 19:18:20 GMT+0800 (CST)</span><br><span class="line">        Failed balancer rounds in last 5 attempts:  0</span><br><span class="line">        Migration Results for the last 24 hours: </span><br><span class="line">                3 : Success</span><br><span class="line">  databases:</span><br><span class="line">        &#123;  &quot;_id&quot; : &quot;config&quot;,  &quot;primary&quot; : &quot;config&quot;,  &quot;partitioned&quot; : true &#125;</span><br><span class="line">                config.system.sessions</span><br><span class="line">                        shard key: &#123; &quot;_id&quot; : 1 &#125;</span><br><span class="line">                        unique: false</span><br><span class="line">                        balancing: true</span><br><span class="line">                        chunks:</span><br><span class="line">                                shard1  1</span><br><span class="line">                        &#123; &quot;_id&quot; : &#123; &quot;$minKey&quot; : 1 &#125; &#125; --&gt;&gt; &#123; &quot;_id&quot; : &#123; &quot;$maxKey&quot; : 1 &#125; &#125; on : shard1 Timestamp(1, 0) </span><br><span class="line">        &#123;  &quot;_id&quot; : &quot;test&quot;,  &quot;primary&quot; : &quot;shard3&quot;,  &quot;partitioned&quot; : true,  &quot;version&quot; : &#123;  &quot;uuid&quot; : UUID(&quot;871fa9c9-e3e2-42a6-9e6b-0ddd3b69a302&quot;),  &quot;lastMod&quot; : 1 &#125; &#125;</span><br><span class="line">                test.mycoll</span><br><span class="line">                        shard key: &#123; &quot;age&quot; : 1 &#125;</span><br><span class="line">                        unique: false</span><br><span class="line">                        balancing: true</span><br><span class="line">                        chunks:</span><br><span class="line">                                shard1  3</span><br><span class="line">                                shard2  4</span><br><span class="line">                                shard3  2</span><br><span class="line">                        &#123; &quot;age&quot; : &#123; &quot;$minKey&quot; : 1 &#125; &#125; --&gt;&gt; &#123; &quot;age&quot; : 0 &#125; on : shard2 Timestamp(2, 0) </span><br><span class="line">                        &#123; &quot;age&quot; : 0 &#125; --&gt;&gt; &#123; &quot;age&quot; : 17 &#125; on : shard1 Timestamp(4, 2) </span><br><span class="line">                        &#123; &quot;age&quot; : 17 &#125; --&gt;&gt; &#123; &quot;age&quot; : 34 &#125; on : shard1 Timestamp(4, 3) </span><br><span class="line">                        &#123; &quot;age&quot; : 34 &#125; --&gt;&gt; &#123; &quot;age&quot; : 38 &#125; on : shard1 Timestamp(4, 4) </span><br><span class="line">                        &#123; &quot;age&quot; : 38 &#125; --&gt;&gt; &#123; &quot;age&quot; : 54 &#125; on : shard2 Timestamp(4, 5) </span><br><span class="line">                        &#123; &quot;age&quot; : 54 &#125; --&gt;&gt; &#123; &quot;age&quot; : 71 &#125; on : shard2 Timestamp(4, 6) </span><br><span class="line">                        &#123; &quot;age&quot; : 71 &#125; --&gt;&gt; &#123; &quot;age&quot; : 77 &#125; on : shard2 Timestamp(4, 7) </span><br><span class="line">                        &#123; &quot;age&quot; : 77 &#125; --&gt;&gt; &#123; &quot;age&quot; : 92 &#125; on : shard3 Timestamp(4, 1) </span><br><span class="line">                        &#123; &quot;age&quot; : 92 &#125; --&gt;&gt; &#123; &quot;age&quot; : &#123; &quot;$maxKey&quot; : 1 &#125; &#125; on : shard3 Timestamp(2, 1) </span><br></pre></td></tr></table></figure><p>分片成功</p><h3 id="集群安全认证"><a class="markdownIt-Anchor" href="#集群安全认证"></a> 集群安全认证</h3><h4 id="生成密钥文件"><a class="markdownIt-Anchor" href="#生成密钥文件"></a> 生成密钥文件</h4><p>​     在keyfile身份验证中，副本集中的每个mongod实例都使用keyfile的内容作为共享密码，只有具有正确密钥文件的mongod或者mongos实例可以连接到副本集。密钥文件的内容必须在6到1024个字符之间，并且在unix/linux系统中文件所有者必须有对文件至少有读的权限。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">生成密钥文件：</span></span><br><span class="line">openssl rand -base64 756 &gt; /mongod/Tools/mongodb/KeyFile.file</span><br><span class="line">chmod 400 /mongod/Tools/mongodb/KeyFile.file</span><br><span class="line"><span class="meta">#</span><span class="bash">第一条命令是生成密钥文件，第二条命令是使用chmod更改文件权限，为文件所有者提供读权限</span></span><br></pre></td></tr></table></figure><h4 id="将密钥复制到集群中的每台机器"><a class="markdownIt-Anchor" href="#将密钥复制到集群中的每台机器"></a> 将密钥复制到集群中的每台机器</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">scp /mongod/Tools/mongodb/KeyFile.file  cache05:/mongod/Tools/mongodb/</span><br><span class="line">scp /mongod/Tools/mongodb/KeyFile.file  cache06:/mongod/Tools/mongodb/</span><br><span class="line">scp /mongod/Tools/mongodb/KeyFile.file  cache07:/mongod/Tools/mongodb/</span><br><span class="line">scp /mongod/Tools/mongodb/KeyFile.file  cache08:/mongod/Tools/mongodb/</span><br><span class="line">scp /mongod/Tools/mongodb/KeyFile.file  cache09:/mongod/Tools/mongodb/</span><br><span class="line">scp /mongod/Tools/mongodb/KeyFile.file  cache10:/mongod/Tools/mongodb/</span><br><span class="line">scp /mongod/Tools/mongodb/KeyFile.file  cache11:/mongod/Tools/mongodb/</span><br><span class="line">scp /mongod/Tools/mongodb/KeyFile.file  cache12:/mongod/Tools/mongodb/</span><br><span class="line">scp /mongod/Tools/mongodb/KeyFile.file  cache13:/mongod/Tools/mongodb/</span><br><span class="line">scp /mongod/Tools/mongodb/KeyFile.file  cache14:/mongod/Tools/mongodb/</span><br><span class="line">scp /mongod/Tools/mongodb/KeyFile.file  cache15:/mongod/Tools/mongodb/</span><br><span class="line">scp /mongod/Tools/mongodb/KeyFile.file  cache16:/mongod/Tools/mongodb/</span><br><span class="line">scp /mongod/Tools/mongodb/KeyFile.file  cache17:/mongod/Tools/mongodb/</span><br><span class="line">scp /mongod/Tools/mongodb/KeyFile.file  cache18:/mongod/Tools/mongodb/</span><br><span class="line">scp /mongod/Tools/mongodb/KeyFile.file  cache19:/mongod/Tools/mongodb/</span><br><span class="line">scp /mongod/Tools/mongodb/KeyFile.file  cache20:/mongod/Tools/mongodb/</span><br><span class="line"><span class="meta">#</span><span class="bash">一定要保证密钥文件一致。文件位置随便。但是为了方便查找，建议每台机器都放到一个固定的位置。</span></span><br></pre></td></tr></table></figure><h4 id="创建管理员账号和密码"><a class="markdownIt-Anchor" href="#创建管理员账号和密码"></a> 创建管理员账号和密码</h4><p><strong>账号可以在集群认开启认证以后添加。但是那时候添加比较谨慎。只能添加一次，如果忘记了就无法再连接到集群。建议在没开启集群认证的时候先添加好管理员用户名和密码然后再开启认证再重启</strong>。</p><p><strong>通常情况下，需要为集群添加用户，但是有些特殊情况需要对单个分片进行维护操作，所以我们需要创建但分片上的用户（Shard-local users，你不能通过mongos 进行连接。</strong></p><blockquote><hr /><p>Read：允许用户读取指定数据库<br />readWrite：允许用户读写指定数据库<br />dbAdmin：允许用户在指定数据库中执行管理函数，如索引创建、删除，查看统计或访问system.profile<br />userAdmin：允许用户向system.users集合写入，可以找指定数据库里创建、删除和管理用户<br />clusterAdmin：只在admin数据库中可用，赋予用户所有分片和复制集相关函数的管理权限。<br />readAnyDatabase：只在admin数据库中可用，赋予用户所有数据库的读权限<br />readWriteAnyDatabase：只在admin数据库中可用，赋予用户所有数据库的读写权限<br />userAdminAnyDatabase：只在admin数据库中可用，赋予用户所有数据库的userAdmin权限<br />dbAdminAnyDatabase：只在admin数据库中可用，赋予用户所有数据库的dbAdmin权限。<br />root：只在admin数据库中可用。超级账号，超级权限</p></blockquote><p>连接单分片的主节点和任意一台机器的mongos，分别执行下面操作</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 分别连接:</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> mongod 权限</span></span><br><span class="line"><span class="meta">#</span><span class="bash">   mongo --port 27001 --host cache05</span></span><br><span class="line"><span class="meta">#</span><span class="bash">   mongo --port 27002 --host cache07</span></span><br><span class="line"><span class="meta">#</span><span class="bash">   mongo --port 27003 --host cache09</span></span><br><span class="line"><span class="meta">#</span><span class="bash">   mongo --port 27004 --host cache11</span></span><br><span class="line"><span class="meta">#</span><span class="bash">   mongo --port 27005 --host cache13</span></span><br><span class="line"><span class="meta">#</span><span class="bash">   mongo --port 27006 --host cache15</span></span><br><span class="line"><span class="meta">#</span><span class="bash">   mongo --port 27007 --host cache17</span></span><br><span class="line"><span class="meta">#</span><span class="bash">   mongo --port 27008 --host cache19</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> mongos 权限</span></span><br><span class="line"><span class="meta">#</span><span class="bash">   mongo --port 29000 --host cache20</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">注意一定要使用admin数据库</span></span><br><span class="line"><span class="meta">#</span><span class="bash">use admin</span></span><br><span class="line"><span class="meta">#</span><span class="bash">db.createUser(&#123;user:<span class="string">&#x27;family&#x27;</span>, <span class="built_in">pwd</span>:<span class="string">&#x27;cmcc1234&#x27;</span>, roles:[&#123; role: <span class="string">&quot;root&quot;</span>, db: <span class="string">&quot;admin&quot;</span> &#125;]&#125;)</span></span><br><span class="line"><span class="meta">mongos&gt;</span><span class="bash">  use admin</span></span><br><span class="line">switched to db admin</span><br><span class="line"><span class="meta">mongos&gt;</span><span class="bash"> db.createUser(&#123;user:<span class="string">&#x27;family&#x27;</span>, <span class="built_in">pwd</span>:<span class="string">&#x27;cmcc1234&#x27;</span>, roles:[&#123; role: <span class="string">&quot;root&quot;</span>, db: <span class="string">&quot;admin&quot;</span> &#125;]&#125;)</span></span><br><span class="line">Successfully added user: &#123;</span><br><span class="line">        &quot;user&quot; : &quot;family&quot;,</span><br><span class="line">        &quot;roles&quot; : [</span><br><span class="line">                &#123;</span><br><span class="line">                        &quot;role&quot; : &quot;root&quot;,</span><br><span class="line">                        &quot;db&quot; : &quot;admin&quot;</span><br><span class="line">                &#125;</span><br><span class="line">        ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>将集群中的所有mongod和mongos全部关闭,</p><p>然后删除每个mongod实例存储数据存储路径下面的mongod.lock（如果后面启动不报错可以不处理）</p><h4 id="配置权限并且重启集群"><a class="markdownIt-Anchor" href="#配置权限并且重启集群"></a> 配置权限并且重启集群</h4><p>依次在每台机器上的mongod**（注意是所有的mongod不是mongos）**的配置文件中加入下面一段配置</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">security:</span></span><br><span class="line">  <span class="attr">keyFile:</span> <span class="string">/mongod/Tools/mongodb/KeyFile.file</span></span><br><span class="line">  <span class="attr">authorization:</span> <span class="string">enabled</span></span><br></pre></td></tr></table></figure><p>依次在每台机器上的mongos配置文件中加入下面一段配置</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">security:</span></span><br><span class="line">  <span class="attr">keyFile:</span> <span class="string">/mongod/Tools/mongodb/KeyFile.file</span></span><br></pre></td></tr></table></figure><p>重启集群</p><h3 id="集群管理"><a class="markdownIt-Anchor" href="#集群管理"></a> 集群管理</h3><blockquote><p>为了方便集群的管理，减少维护集群的复杂性，使用脚本来对集群统一操作。<br /><strong>但是脚本不能检测到所有的异常情况，请注意脚本的打印信息，如果异常，请手动启动，并联系开发，完善脚本。</strong></p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line"><span class="meta">#</span><span class="bash">********************************************************************</span></span><br><span class="line"><span class="meta">#</span><span class="bash">Author:                jingshuai</span></span><br><span class="line"><span class="meta">#</span><span class="bash">QQ：                   315134590</span></span><br><span class="line"><span class="meta">#</span><span class="bash">Date:                  2019-09-19</span></span><br><span class="line"><span class="meta">#</span><span class="bash">URL：                  http://www.jsledd.cn</span></span><br><span class="line"><span class="meta">#</span><span class="bash">Description：          The mongod script</span></span><br><span class="line"><span class="meta">#</span><span class="bash">Copyright (C)：        cmri family</span></span><br><span class="line"><span class="meta">#</span><span class="bash">********************************************************************</span></span><br><span class="line">MONGODB_HOME=&quot;/mongod/Tools/mongodb/&quot;</span><br><span class="line">MONGODB_LOG_PATH=&quot;$&#123;MONGODB_HOME&#125;/log&quot;</span><br><span class="line">MONGODB_BIN_PATH=&quot;$&#123;MONGODB_HOME&#125;/bin&quot;</span><br><span class="line">MONGODB_CONF_PATH=&quot;$&#123;MONGODB_HOME&#125;/conf&quot;</span><br><span class="line">MONGODB_DATA_PATH=&quot;/data/mongodata&quot;</span><br><span class="line">MONGODB_CONF_FILE=&quot;$&#123;MONGODB_CONF_PATH&#125;/configsvr.conf&quot;</span><br><span class="line">MONGODB_CONFIGPID=&quot;$&#123;MONGODB_LOG&#125;/configsrv.pid&quot;</span><br><span class="line">MONGODB_MONGOSPID=&quot;$&#123;MONGODB_LOG&#125;/mongos.pid&quot;</span><br><span class="line">MONGODB_CONFIGHOSTS=(&quot;cache06&quot; &quot;cache08&quot; &quot;cache10&quot;)</span><br><span class="line">MONGODB_MONGOSHOSTS=(&quot;cache12&quot; &quot;cache14&quot; &quot;cache16&quot; &quot;cache18&quot; &quot;cache20&quot;)</span><br><span class="line">declare -A MONGODB_SHARDHOSTS=()</span><br><span class="line">MONGODB_SHARDHOSTS[&quot;shard1&quot;]=&quot;cache05,cache06,cache08&quot;</span><br><span class="line">MONGODB_SHARDHOSTS[&quot;shard2&quot;]=&quot;cache07,cache08,cache06&quot;</span><br><span class="line">MONGODB_SHARDHOSTS[&quot;shard3&quot;]=&quot;cache09,cache10,cache12&quot;</span><br><span class="line">MONGODB_SHARDHOSTS[&quot;shard4&quot;]=&quot;cache11,cache12,cache10&quot;</span><br><span class="line">MONGODB_SHARDHOSTS[&quot;shard5&quot;]=&quot;cache13,cache14,cache16&quot;</span><br><span class="line">MONGODB_SHARDHOSTS[&quot;shard6&quot;]=&quot;cache15,cache16,cache14&quot;</span><br><span class="line">MONGODB_SHARDHOSTS[&quot;shard7&quot;]=&quot;cache17,cache18,cache20&quot;</span><br><span class="line">MONGODB_SHARDHOSTS[&quot;shard8&quot;]=&quot;cache19,cache20,cache18&quot;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> </span></span><br><span class="line">process_check()&#123;</span><br><span class="line">  host=$1</span><br><span class="line">  pidfile=$2</span><br><span class="line">  serverid=$3</span><br><span class="line">  servername=$4</span><br><span class="line">  if ssh $host test -e $pidfile;then</span><br><span class="line">    PSID=`ssh $host &quot;ps -ef | grep $(cat $pidfile)| grep -v grep&quot;`</span><br><span class="line">    echo &quot;查询host:$host 上的服务:$servername:$serverid&quot;</span><br><span class="line">    [ -n &quot;$PSID&quot; ] &amp;&amp; echo &quot;--------------------\n$&#123;PSID&#125;\n--------------------&quot; || echo &quot;$servername 进程ID:`ssh $host cat $pidfile` 不存在&quot;</span><br><span class="line">  else</span><br><span class="line">    echo &quot;找不到服务:$servername:$serverid，请手动检查。&quot;</span><br><span class="line">  fi</span><br><span class="line">&#125;</span><br><span class="line">process_stop()&#123;</span><br><span class="line">  host=$1</span><br><span class="line">  pidfile=$2</span><br><span class="line">  rmfiles=$3</span><br><span class="line">  serverid=$4</span><br><span class="line">  servername=$5</span><br><span class="line">  echo &quot;==========服务停止：$servername($serverid)开始启动==========&quot;</span><br><span class="line">    if ssh $host test -e $pidfile;then</span><br><span class="line">      ssh $host &quot;kill -2 $pidfile&quot; &amp;&amp; [ -n &quot;$rmfiles&quot; ] &amp;&amp; ssh $host &quot;rm -f $rmfiles&quot;</span><br><span class="line">    else</span><br><span class="line">      echo &quot;找不到服务:$servername:$serverid，请手动检查。&quot;</span><br><span class="line">    fi</span><br><span class="line">&#125;</span><br><span class="line">process_start()&#123;</span><br><span class="line">  host=$1</span><br><span class="line">  process_cmd=$2</span><br><span class="line">  process_conf=$3</span><br><span class="line">  serverid=$4</span><br><span class="line">  servername=$5</span><br><span class="line">  echo &quot;==========服务启动：$servername($serverid)开始启动==========&quot;</span><br><span class="line">  ssh host &quot;$process_cmd -f $process_conf&quot;</span><br><span class="line">&#125;</span><br><span class="line">MGDB_START()&#123;</span><br><span class="line">  echo &quot;--------------------服务启动-------------------&quot;</span><br><span class="line">  echo -e &quot;\033 ----------------configServer---------------- \033[0m&quot;</span><br><span class="line">  for confighost in $&#123;MONGODB_CONFIGHOSTS[@]&#125;;</span><br><span class="line">  do</span><br><span class="line">    process_start $confighost $MONGODB_BIN_PATH/bin/mongod $MONGODB_CONF_FILE &quot;configsrv&quot; &quot;配置服务&quot;</span><br><span class="line">  done</span><br><span class="line">  echo -e &quot;\033 ----------------mongosServer---------------- \033[0m&quot;</span><br><span class="line">  for mongoshost in $&#123;MONGODB_MONGOSHOSTS[@]&#125;;</span><br><span class="line">  do</span><br><span class="line">    process_start $confighost $MONGODB_BIN_PATH/bin/mongos $MONGODB_CONF_FILE &quot;mongos&quot; &quot;路由服务&quot;</span><br><span class="line">  done</span><br><span class="line">  echo -e &quot;\033 ----------------shardsServer---------------- \033[0m&quot;</span><br><span class="line">  for key in $&#123;!MONGODB_SHARDHOSTS[@]&#125;;</span><br><span class="line">  do</span><br><span class="line">    shardarray=($&#123;MONGODB_SHARDHOSTS[$key]//,/ &#125;)</span><br><span class="line">    shardpid=&quot;$MONGODB_LOG_PATH/$key.pid&quot;</span><br><span class="line">    for shardhost in $&#123;shardarray[@]&#125;;</span><br><span class="line">    do</span><br><span class="line">      echo &quot;================$key====================&quot;</span><br><span class="line">      process_start $confighost $MONGODB_BIN_PATH/bin/mongos $MONGODB_CONF_FILE &quot;分片数据服务&quot;</span><br><span class="line">      echo &quot;==========================================&quot;</span><br><span class="line">    done</span><br><span class="line">  done</span><br><span class="line">&#125;</span><br><span class="line">MGDB_STOP()&#123;</span><br><span class="line">  echo &quot;--------------------服务停止-------------------&quot;</span><br><span class="line">  echo -e &quot;\033 ----------------mongosServer---------------- \033[0m&quot;</span><br><span class="line">  for mongoshost in $&#123;MONGODB_MONGOSHOSTS[@]&#125;;</span><br><span class="line">  do</span><br><span class="line">    process_stop $mongoshost $MONGODB_MONGOSPID &quot;&quot; &quot;mongos&quot; &quot;路由服务&quot;</span><br><span class="line">  done</span><br><span class="line">  echo -e &quot;\033 ----------------configServer---------------- \033[0m&quot;</span><br><span class="line">  for confighost in $&#123;MONGODB_CONFIGHOSTS[@]&#125;;</span><br><span class="line">  do</span><br><span class="line">    process_stop $confighost $MONGODB_CONFIGPID &quot;$MONGODB_DATA_PATH/configsrv/mongod.lock&quot; &quot;configsrv&quot; &quot;配置服务&quot;</span><br><span class="line">  done</span><br><span class="line">  echo -e &quot;\033 ----------------shardsServer---------------- \033[0m&quot;</span><br><span class="line">  for key in $&#123;!MONGODB_SHARDHOSTS[@]&#125;;</span><br><span class="line">  do</span><br><span class="line">    shardarray=($&#123;MONGODB_SHARDHOSTS[$key]//,/ &#125;)</span><br><span class="line">    shardpid=&quot;$MONGODB_LOG_PATH/$key.pid&quot;</span><br><span class="line">    for shardhost in $&#123;shardarray[@]&#125;;</span><br><span class="line">    do</span><br><span class="line">      echo &quot;================$key====================&quot;</span><br><span class="line">      process_stop $shardhost $shardpid &quot;$MONGODB_DATA_PATH/$key/mongod.lock&quot; $key &quot;分片数据服务&quot;</span><br><span class="line">      echo &quot;==========================================&quot;</span><br><span class="line">    done</span><br><span class="line">  done</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">MGDB_STATUS()&#123;</span><br><span class="line">  echo &quot;--------------------状态查询-------------------&quot;</span><br><span class="line">  echo -e &quot;\033 ----------------configServer---------------- \033[0m&quot;</span><br><span class="line">  for confighost in $&#123;MONGODB_CONFIGHOSTS[@]&#125;;</span><br><span class="line">  do</span><br><span class="line">    process_check $confighost $MONGODB_CONFIGPID &quot;configsrv&quot; &quot;配置服务&quot;</span><br><span class="line">  done</span><br><span class="line">  echo -e &quot;\033 ----------------mongosServer---------------- \033[0m&quot;</span><br><span class="line">  for mongoshost in $&#123;MONGODB_MONGOSHOSTS[@]&#125;;</span><br><span class="line">  do</span><br><span class="line">    process_check $mongoshost $MONGODB_MONGOSPID &quot;mongos&quot; &quot;路由服务&quot;</span><br><span class="line">  done</span><br><span class="line">  echo -e &quot;\033 ----------------shardsServer---------------- \033[0m&quot;</span><br><span class="line">  for key in $&#123;!MONGODB_SHARDHOSTS[@]&#125;;</span><br><span class="line">  do</span><br><span class="line">    shardarray=($&#123;MONGODB_SHARDHOSTS[$key]//,/ &#125;)</span><br><span class="line">    shardpid=&quot;$MONGODB_LOG_PATH/$key.pid&quot;</span><br><span class="line">    for shardhost in $&#123;shardarray[@]&#125;;</span><br><span class="line">    do</span><br><span class="line">      echo &quot;================$key====================&quot;</span><br><span class="line">      process_check $shardhost $shardpid $key &quot;分片数据服务&quot;</span><br><span class="line">      echo &quot;==========================================&quot;</span><br><span class="line">    done</span><br><span class="line">  done</span><br><span class="line">&#125;</span><br><span class="line">case &quot;$1&quot; in </span><br><span class="line">        start)</span><br><span class="line">                MGDB_START</span><br><span class="line">                ;;</span><br><span class="line">        stop)</span><br><span class="line">                MGDB_STOP</span><br><span class="line">                ;;</span><br><span class="line">        status)</span><br><span class="line">                MGDB_STATUS</span><br><span class="line">                ;;</span><br><span class="line">        restart)</span><br><span class="line">                MGDB_STOP</span><br><span class="line">                MGDB_START</span><br><span class="line">                ;;</span><br><span class="line">        *)</span><br><span class="line">                echo $&quot;Usage: $0 &#123; start | stop | status | restart &#125;&quot;</span><br><span class="line">                exit 1</span><br><span class="line">esac</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
          <category> mongodb </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mongo </tag>
            
            <tag> shard </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spark SQL DataSource V2 学习入门 + 代码模板</title>
      <link href="2019/04/05/datasourcev2/"/>
      <url>2019/04/05/datasourcev2/</url>
      
        <content type="html"><![CDATA[<h1 id="spark-sql-datasource-v2-学习入门-代码模板"><a class="markdownIt-Anchor" href="#spark-sql-datasource-v2-学习入门-代码模板"></a> Spark SQL DataSource V2 学习入门 + 代码模板</h1><h2 id="data-source-api-v1"><a class="markdownIt-Anchor" href="#data-source-api-v1"></a> Data Source API V1</h2><p>​Spark 1.3 版本开始引入了 <strong>Data Source API V1</strong>，通过这个 API 我们可以很方便的读取各种来源的数据，而且 Spark 使用 SQL 组件的一些优化引擎对数据源的读取进行优化，比如列裁剪、过滤下推等等。</p><p>这个版本的 Data Source API 有以下几个优点：</p><ul><li>接口实现非常简单</li><li>能够满足大部分的使用场景</li></ul><p>同时存在一些问题：</p><ul><li>扩展能力有限，难以下推其他算子</li><li>缺乏对列式存储读取的支持</li><li>写操作不支持事务</li><li>缺乏分区和排序信息</li><li>不支持流处理</li></ul><h2 id="data-source-api-v2"><a class="markdownIt-Anchor" href="#data-source-api-v2"></a> Data Source API V2</h2><p><strong>Data Source API V2</strong>为了解决 Data Source V1 的一些问题，从 Apache Spark 2.3.0 版本开始，社区引入了 Data Source API V2，在保留原有的功能之外，还解决了 Data Source API V1 存在的一些问题，比如不再依赖上层 API，扩展能力增强。</p><p>这个版本的 Data Source API V2 有以下几个优点：</p><ul><li>DataSourceV2 API使用Java编写</li><li>不依赖于上层API（DataFrame/RDD）</li><li>易于扩展，可以添加新的优化，同时保持向后兼容</li><li>提供物理信息，如大小、分区等</li><li>支持Streamin Source/Sink</li><li>灵活、强大和事务性的写入API</li></ul><p>Spark2.3中V2的功能</p><ul><li>支持列扫描和行扫描</li><li>列裁剪和过滤条件下推</li><li>可以提供基本统计和数据分区</li><li>事务写入API</li><li>支持微批和连续的Streaming Source/Sink</li></ul><p>Data Source API V2 支持读写、流数据写、微批处理读（比如 KafkaSource 就用到这个了）以及 ContinuousRead（continuous stream processing）等多种方式读。</p><h3 id="readsupport-writesupport"><a class="markdownIt-Anchor" href="#readsupport-writesupport"></a> ReadSupport &amp; WriteSupport</h3><p>​为了使用 Data Source API V2，我们肯定是需要使用到 Data Source API V2 包里面相关的类库，对于读取程序，我们只需要实现 <code>ReadSupport</code> 相关接口就行，如下：</p><blockquote><p>在 reader 包里面有</p><ul><li>SupportsPushDownFilters：算子下推</li><li>SupportsPushDownRequiredColumns ：列裁剪</li><li>SupportsReportPartitioning ：数据分区</li><li>SupportsReportStatistics ：统计信息</li><li>SupportsScanColumnarBatch：批量列扫描。</li></ul></blockquote><p>代码实现：</p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.jsledd.spark.sql</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.<span class="type">Optional</span></span><br><span class="line"><span class="keyword">import</span> org.apache.spark.sql.<span class="type">SaveMode</span></span><br><span class="line"><span class="keyword">import</span> org.apache.spark.sql.sources.v2.reader.<span class="type">DataSourceReader</span></span><br><span class="line"><span class="keyword">import</span> org.apache.spark.sql.sources.v2.writer.<span class="type">DataSourceWriter</span></span><br><span class="line"><span class="keyword">import</span> org.apache.spark.sql.types.<span class="type">StructType</span></span><br><span class="line"><span class="keyword">import</span> org.apache.spark.sql.sources.v2.&#123;<span class="type">DataSourceOptions</span>, <span class="type">DataSourceV2</span>, <span class="type">ReadSupport</span>, <span class="type">WriteSupport</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @author ：jsledd</span></span><br><span class="line"><span class="comment">  * @date ：Created in 2019/4/5 0001 上午 9:19</span></span><br><span class="line"><span class="comment">  * @description：自定义DataSourceV2 的数据源</span></span><br><span class="line"><span class="comment">  * @modified By：</span></span><br><span class="line"><span class="comment">  * @version: $version$</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CustomDataSourceV2</span> <span class="keyword">extends</span> <span class="title">DataSourceV2</span>  <span class="keyword">with</span> <span class="title">ReadSupport</span> <span class="keyword">with</span> <span class="title">WriteSupport</span>  </span>&#123;</span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 创建Reader</span></span><br><span class="line"><span class="comment">    *</span></span><br><span class="line"><span class="comment">    * @param dataSourceOptions 用户自定义的options</span></span><br><span class="line"><span class="comment">    * @return 返回自定义的DataSourceReader</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">  <span class="keyword">override</span> <span class="function"><span class="keyword">def</span> <span class="title">createReader</span></span>(dataSourceOptions: <span class="type">DataSourceOptions</span>): <span class="type">DataSourceReader</span> = ???</span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 创建Writer</span></span><br><span class="line"><span class="comment">    *</span></span><br><span class="line"><span class="comment">    * @param jobId   jobId</span></span><br><span class="line"><span class="comment">    * @param schema  schema</span></span><br><span class="line"><span class="comment">    * @param mode    保存模式</span></span><br><span class="line"><span class="comment">    * @param options 用于定义的option</span></span><br><span class="line"><span class="comment">    * @return Optional[自定义的DataSourceWriter]</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">  <span class="keyword">override</span> <span class="function"><span class="keyword">def</span> <span class="title">createWriter</span></span>(jobId: <span class="type">String</span>, schema: <span class="type">StructType</span>, mode: <span class="type">SaveMode</span>, options: <span class="type">DataSourceOptions</span>): <span class="type">Optional</span>[<span class="type">DataSourceWriter</span>] = ???</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="datasourcereader-datasourcewriter"><a class="markdownIt-Anchor" href="#datasourcereader-datasourcewriter"></a> DataSourceReader &amp; DataSourceWriter</h3><p>前面我们实现了 <code>ReadSupport</code> 接口，并重写了 <code>createReader</code> 方法。这里我们需要实现 <code>DataSourceReader</code> 接口相关的操作，如下:</p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.jsledd.spark.sql</span><br><span class="line"><span class="keyword">import</span> java.util</span><br><span class="line"><span class="keyword">import</span> org.apache.spark.sql.catalyst.<span class="type">InternalRow</span></span><br><span class="line"><span class="keyword">import</span> org.apache.spark.sql.sources.v2.reader.&#123;<span class="type">DataSourceReader</span>, <span class="type">InputPartition</span>&#125;</span><br><span class="line"><span class="keyword">import</span> org.apache.spark.sql.types.<span class="type">StructType</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @author ：jsledd</span></span><br><span class="line"><span class="comment">  * @date ：Created in 2019/4/5 0001 下午 14:12</span></span><br><span class="line"><span class="comment">  * @description：$&#123;description&#125;</span></span><br><span class="line"><span class="comment">  * @modified By：</span></span><br><span class="line"><span class="comment">  * @version: $version$</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="keyword">case</span> <span class="class"><span class="keyword">class</span> <span class="title">CustomDataSourceV2Reader</span>(<span class="params">options: <span class="type">Map</span>[<span class="type">String</span>, <span class="type">String</span>]</span>) <span class="keyword">extends</span> <span class="title">DataSourceReader</span> </span>&#123;</span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 读取的列相关信息</span></span><br><span class="line"><span class="comment">    * @return</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">  <span class="keyword">override</span> <span class="function"><span class="keyword">def</span> <span class="title">readSchema</span></span>(): <span class="type">StructType</span> = ???</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 每个分区拆分及读取逻辑</span></span><br><span class="line"><span class="comment">    * @return</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">  <span class="keyword">override</span> <span class="function"><span class="keyword">def</span> <span class="title">planInputPartitions</span></span>(): util.<span class="type">List</span>[<span class="type">InputPartition</span>[<span class="type">InternalRow</span>]] = ???</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CustomDataSourceWriter</span>(<span class="params">dataSourceOptions: <span class="type">DataSourceOptions</span></span>) <span class="keyword">extends</span> <span class="title">DataSourceWriter</span> </span>&#123;</span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 创建RestDataWriter工厂类</span></span><br><span class="line"><span class="comment">    *</span></span><br><span class="line"><span class="comment">    * @return DataWriterFactory</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">  <span class="keyword">override</span> <span class="function"><span class="keyword">def</span> <span class="title">createWriterFactory</span></span>(): <span class="type">DataWriterFactory</span>[<span class="type">InternalRow</span>] = ???</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * commit</span></span><br><span class="line"><span class="comment">    *</span></span><br><span class="line"><span class="comment">    * @param writerCommitMessages 所有分区提交的commit信息</span></span><br><span class="line"><span class="comment">    *                 触发一次</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">  <span class="keyword">override</span> <span class="function"><span class="keyword">def</span> <span class="title">commit</span></span>(writerCommitMessages: <span class="type">Array</span>[<span class="type">WriterCommitMessage</span>]): <span class="type">Unit</span> = ???</span><br><span class="line"></span><br><span class="line">  <span class="comment">/** *</span></span><br><span class="line"><span class="comment">    * abort</span></span><br><span class="line"><span class="comment">    *</span></span><br><span class="line"><span class="comment">    * @param writerCommitMessages 当write异常时调用,该方法用于事务回滚，当write方法发生异常之后触发该方法</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">  <span class="keyword">override</span> <span class="function"><span class="keyword">def</span> <span class="title">abort</span></span>(writerCommitMessages: <span class="type">Array</span>[<span class="type">WriterCommitMessage</span>]): <span class="type">Unit</span> = ???</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们可以在这里加上 SupportsPushDownFilters、SupportsPushDownRequiredColumns、SupportsReportPartitioning 等相关的优化</p><h3 id="读写实现"><a class="markdownIt-Anchor" href="#读写实现"></a> 读写实现</h3><p>​最后一个需要我们实现的就是分片读取，在 DataSource V1 里面缺乏分区的支持，而 DataSource V2 支持完整的分区处理，也就是上面的 planInputPartitions 方法。在那里我们可以定义使用几个分区读取数据源的数据。比如如果是 TextInputFormat，我们可以读取到对应文件的 splits 个数，然后每个 split 构成这里的一个分区，使用一个 Task 读取。为了简便起见，我这里使用了只使用了一个分区，也就是 List[InputPartition[InternalRow]].asJava。</p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.jsledd.spark.sql</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.spark.sql.catalyst.<span class="type">InternalRow</span></span><br><span class="line"><span class="keyword">import</span> org.apache.spark.sql.sources.<span class="type">Filter</span></span><br><span class="line"><span class="keyword">import</span> org.apache.spark.sql.sources.v2.reader.&#123;<span class="type">InputPartition</span>, <span class="type">InputPartitionReader</span>&#125;</span><br><span class="line"><span class="keyword">import</span> org.apache.spark.sql.types._</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @author ：jsledd</span></span><br><span class="line"><span class="comment">  * @date ：Created in 2019/11/1 0001 下午 14:21</span></span><br><span class="line"><span class="comment">  * @description：定义每个分区具体是如何读取的</span></span><br><span class="line"><span class="comment">  * @modified By：</span></span><br><span class="line"><span class="comment">  * @version: $version$</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="class"><span class="keyword">class</span> <span class="title">CustomInputPartition</span>(<span class="params">requiredSchema: <span class="type">StructType</span>, pushed: <span class="type">Array</span>[<span class="type">Filter</span>], options: <span class="type">Map</span>[<span class="type">String</span>, <span class="type">String</span>]</span>) <span class="keyword">extends</span> <span class="title">InputPartition</span>[<span class="type">InternalRow</span>] </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">override</span> <span class="function"><span class="keyword">def</span> <span class="title">createPartitionReader</span></span>(): <span class="type">InputPartitionReader</span>[<span class="type">InternalRow</span>] = ???</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="class"><span class="keyword">class</span> <span class="title">CustomInputPartitionReader</span>(<span class="params">requiredSchema: <span class="type">StructType</span>, pushed: <span class="type">Array</span>[<span class="type">Filter</span>], options: <span class="type">Map</span>[<span class="type">String</span>, <span class="type">String</span>]</span>) <span class="keyword">extends</span> <span class="title">InputPartitionReader</span>[<span class="type">InternalRow</span>] </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">override</span> <span class="function"><span class="keyword">def</span> <span class="title">next</span></span>(): <span class="type">Boolean</span> = ???</span><br><span class="line"></span><br><span class="line">  <span class="keyword">override</span> <span class="function"><span class="keyword">def</span> <span class="title">get</span></span>(): <span class="type">InternalRow</span> = ???</span><br><span class="line"></span><br><span class="line">  <span class="keyword">override</span> <span class="function"><span class="keyword">def</span> <span class="title">close</span></span>(): <span class="type">Unit</span> = ???</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * DataWriterFactory工厂类</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CustomDataWriterFactory</span> <span class="keyword">extends</span> <span class="title">DataWriterFactory</span>[<span class="type">Row</span>] </span>&#123;</span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 创建DataWriter</span></span><br><span class="line"><span class="comment">    *</span></span><br><span class="line"><span class="comment">    * @param partitionId 分区ID</span></span><br><span class="line"><span class="comment">    * @param taskId      task ID</span></span><br><span class="line"><span class="comment">    * @param epochId     一种单调递增的id，用于将查询分成离散的执行周期。对于非流式查询，此ID将始终为0。</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">  <span class="keyword">override</span> <span class="function"><span class="keyword">def</span> <span class="title">createDataWriter</span></span>(partitionId: <span class="type">Int</span>, taskId: <span class="type">Long</span>, epochId: <span class="type">Long</span>): <span class="type">DataWriter</span>[<span class="type">Row</span>] = ???</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * RestDataWriter</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * @param partitionId   分区ID</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">RestDataWriter</span>(<span class="params">partitionId: <span class="type">Int</span></span>) <span class="keyword">extends</span> <span class="title">DataWriter</span>[<span class="type">Row</span>] </span>&#123;</span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * write</span></span><br><span class="line"><span class="comment">    *</span></span><br><span class="line"><span class="comment">    * @param record 单条记录</span></span><br><span class="line"><span class="comment">    *               每条记录都会触发该方法</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">  <span class="keyword">override</span> <span class="function"><span class="keyword">def</span> <span class="title">write</span></span>(record: <span class="type">Row</span>): <span class="type">Unit</span> = ???</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * commit</span></span><br><span class="line"><span class="comment">    *</span></span><br><span class="line"><span class="comment">    * @return commit message</span></span><br><span class="line"><span class="comment">    *         每个分区触发一次</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">  <span class="keyword">override</span> <span class="function"><span class="keyword">def</span> <span class="title">commit</span></span>(): <span class="type">WriterCommitMessage</span> = ???</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 回滚：当write发生异常时触发该方法,该方法用于事务回滚，当write方法发生异常之后触发该方法</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">  <span class="keyword">override</span> <span class="function"><span class="keyword">def</span> <span class="title">abort</span></span>(): <span class="type">Unit</span> = ???</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="调用"><a class="markdownIt-Anchor" href="#调用"></a> 调用</h3><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">val</span> df = spark.read</span><br><span class="line">      .format(<span class="string">&quot;cn.jsledd.spark.sql.CustomDataSourceV2&quot;</span>)</span><br><span class="line">      .option(<span class="string">&quot;schema&quot;</span>, <span class="string">&quot;`s` INT,`t` LONG,`v` DOUBLE&quot;</span>)</span><br><span class="line">      .load()</span><br></pre></td></tr></table></figure><p>​目前 DataSource API V2 还在不断演化中，不同版本的 API 可能和这里介绍的不一样，比如 Spark 2.3.x 支持分区的 API 是 createDataReaderFactories，而 Spark 2.4.x 是 planInputPartitions，详见 SPARK-24073。同时，Apache Spark DataSource API V2 是一个比较大的 Feature ，虽然早在 Spark 2.3 版本中已经引入了，但是其实还有很多功能未发布，内置的各种数据源实现基本上都是基于 DataSource API V1 实现的.<br />​Spark DataSource API V2 最终稳定版以及新功能将会随着年底和 Apache Spark 3.0.0 版本一起发布，其也算是 Apache Spark 3.0.0 版本的一大新功能。</p><h3 id="代码-github地址httpsgithubcomshadowagnoyspark_learn"><a class="markdownIt-Anchor" href="#代码-github地址httpsgithubcomshadowagnoyspark_learn"></a> 代码 Github地址:<a href="https://github.com/shadowagnoy/spark_learn">https://github.com/shadowagnoy/spark_learn/</a></h3>]]></content>
      
      
      <categories>
          
          <category> 大数据 </category>
          
          <category> spark </category>
          
      </categories>
      
      
        <tags>
            
            <tag> spark </tag>
            
            <tag> hadoop </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SPARK SQL2.4 自学教程</title>
      <link href="2019/04/01/sparksql24api/"/>
      <url>2019/04/01/sparksql24api/</url>
      
        <content type="html"><![CDATA[<h2 id="spark-sql"><a class="markdownIt-Anchor" href="#spark-sql"></a> Spark SQL</h2><p>​Spark SQL是一个Spark模块用于结构化数据处理。与基本的Spark RDD API不同，Spark SQL提供的接口为Spark提供了有关数据结构和正在执行的计算的更多信息。 在内部，Spark SQL使用此额外信息来执行额外的优化。 有几种与Spark SQL交互的方法，包括SQL和Dataset API。 在使用相同的执行引擎计算结果时，与使用表达计算的API或者语言无关。 这种统一意味着开发人员可以轻松地在不同的API之间来回切换，从而提供表达给定转换的最自然的方式。</p><h3 id="sparksession"><a class="markdownIt-Anchor" href="#sparksession"></a> SparkSession</h3><p>Spark中所有功能的入口点是SparkSession类</p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.apache.spark.sql.<span class="type">SparkSession</span></span><br><span class="line"><span class="keyword">val</span> spark = <span class="type">SparkSession</span></span><br><span class="line">  .builder()</span><br><span class="line">  .appName(<span class="string">&quot;Spark SQL basic example&quot;</span>) <span class="comment">//APP 运行时的名字</span></span><br><span class="line">  .config(<span class="string">&quot;spark.some.config.option&quot;</span>, <span class="string">&quot;some-value&quot;</span>)</span><br><span class="line">  .getOrCreate()</span><br><span class="line"><span class="comment">// For implicit conversions like converting RDDs to DataFrames</span></span><br><span class="line"><span class="keyword">import</span> spark.implicits._</span><br></pre></td></tr></table></figure><h3 id="dataset-dataframe"><a class="markdownIt-Anchor" href="#dataset-dataframe"></a> Dataset &amp;DataFrame</h3><p>​Dataset数据集是分布式数据集合。数据集是Spark 1.6中添加的一个新接口，它提供了RDD的优势（强类型，使用强大的lambda函数的能力）和Spark SQL优化执行引擎的优点。 数据集可以从JVM对象构造，然后使用功能转换（map，flatMap，filter等）进行操作。 数据集API在Scala和Java中可用。 Python没有对Dataset API的支持。 但由于Python的动态特性，数据集API的许多好处已经可用（即可以通过名称自然地访问行的字段row.columnName）。 R的情况类似。</p><p>​DataFrame是一个组织成命名列的数据集。 它在概念上等同于关系数据库中的表或R / Python中的数据框，但在底层具有更丰富的优化。 DataFrame可以从多种来源构建，例如：结构化数据文件，Hive中的表，外部数据库或现有RDD。 DataFrame API在Scala，Java，Python和R中可用。在Scala和Java中，DataFrame由行数据集表示。 在Scala API中，DataFrame只是Dataset[Row]的类型别名。 而在Java API中，用户需要使用Dataset<Row>来表示DataFrame。</p><h4 id="spark-sql-dataset-dataframe-api"><a class="markdownIt-Anchor" href="#spark-sql-dataset-dataframe-api"></a> Spark SQL Dataset &amp; DataFrame API</h4><h5 id="actions"><a class="markdownIt-Anchor" href="#actions"></a> Actions</h5><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Dataset</span>[<span class="type">T</span>] <span class="keyword">extends</span> <span class="title">Serializable</span> <span class="comment">//org.apache.spark.sql.Dataset是Spark SQL中核心的类</span></span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class"><span class="title">collect</span>(<span class="params"></span>)</span>: <span class="type">Array</span>[<span class="type">T</span>] <span class="comment">//返回一个数组，将Dataset所有行的数据加载进driver进程的内存。</span></span><br><span class="line">collectAsList(): <span class="type">List</span>[<span class="type">T</span>] <span class="comment">//同上，但是返回Java list。</span></span><br><span class="line">count(): <span class="type">Long</span> <span class="comment">// 数据行数</span></span><br><span class="line">describe(cols: <span class="type">String</span>*): <span class="type">DataFrame</span> <span class="comment">//计算指定列的统计指标，包括count, mean, stddev, min, and max.</span></span><br><span class="line">head(): <span class="type">T</span> <span class="comment">//返回第一行</span></span><br><span class="line">head(n: <span class="type">Int</span>): <span class="type">Array</span>[<span class="type">T</span>] <span class="comment">//返回前N行</span></span><br><span class="line">first(): <span class="type">T</span> <span class="comment">//返回第一行，是head()的别名。</span></span><br><span class="line">foreach(f: (<span class="type">T</span>) ⇒ <span class="type">Unit</span>): <span class="type">Unit</span> <span class="comment">// 所有元素上应用f函数</span></span><br><span class="line">foreachPartition(f: (<span class="type">Iterator</span>[<span class="type">T</span>]) ⇒ <span class="type">Unit</span>): <span class="type">Unit</span> <span class="comment">//所有元素分区上应用f函数</span></span><br><span class="line">reduce(func: (<span class="type">T</span>, <span class="type">T</span>) ⇒ <span class="type">T</span>): <span class="type">T</span><span class="comment">//根据映射函数func，对RDD中的元素进行二元计算，返回计算结果。</span></span><br><span class="line">show(numRows: <span class="type">Int</span>, truncate: <span class="type">Int</span>, vertical: <span class="type">Boolean</span>): <span class="type">Unit</span><span class="comment">//表格形式打印出数据。numRows：显示的行数，truncate：裁剪字符串类型值到指定长度，vertical：垂直打印。</span></span><br><span class="line">summary(statistics: <span class="type">String</span>*): <span class="type">DataFrame</span> <span class="comment">//计算数据集statistics指定的指标，可指定 count, mean, stddev, min, approximate quartiles (percentiles at 25%, 50%, and 75%), and max.如未指定则会计算全部。</span></span><br><span class="line">take(n: <span class="type">Int</span>): <span class="type">Array</span>[<span class="type">T</span>] <span class="comment">//获取前n行</span></span><br><span class="line">takeAsList(n: <span class="type">Int</span>): <span class="type">List</span>[<span class="type">T</span>] <span class="comment">//获取前n行保存为list</span></span><br><span class="line">toLocalIterator(): <span class="type">Iterator</span>[<span class="type">T</span>] <span class="comment">//返回一个所有行的迭代器</span></span><br></pre></td></tr></table></figure><h5 id="transformations函数"><a class="markdownIt-Anchor" href="#transformations函数"></a> Transformations(函数)</h5><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Typed transformations</span></span><br><span class="line">as[<span class="type">U</span>](<span class="keyword">implicit</span> arg0: <span class="type">Encoder</span>[<span class="type">U</span>]): <span class="type">Dataset</span>[<span class="type">U</span>] <span class="comment">//将数据映射成指定类型U，返回新的Dataset</span></span><br><span class="line">persist(newLevel: <span class="type">StorageLevel</span>): <span class="type">Dataset</span>.<span class="keyword">this</span>.<span class="keyword">type</span> <span class="comment">//缓存数据，可设置缓存级别。</span></span><br><span class="line">persist(): <span class="type">Dataset</span>.<span class="keyword">this</span>.<span class="keyword">type</span> <span class="comment">// 同cache方法</span></span><br><span class="line">cache(): <span class="type">Dataset</span>.<span class="keyword">this</span>.<span class="keyword">type</span> <span class="comment">//缓存数据,MEMORY_AND_DISK模式。RDD的cache函数默认是MEMORY_ONLY。</span></span><br><span class="line">checkpoint(eager: <span class="type">Boolean</span>): <span class="type">Dataset</span>[<span class="type">T</span>]<span class="comment">//返回一个checkpointed的Dataset，Dataset的逻辑执行计划将被截断。</span></span><br><span class="line">checkpoint(): <span class="type">Dataset</span>[<span class="type">T</span>] <span class="comment">//同上，eager=true.</span></span><br><span class="line">columns: <span class="type">Array</span>[<span class="type">String</span>] <span class="comment">//数组形式返回所有列名。</span></span><br><span class="line">dtypes: <span class="type">Array</span>[(<span class="type">String</span>, <span class="type">String</span>)] <span class="comment">// 数组形式返回所有列名及类型。</span></span><br><span class="line">createGlobalTempView(viewName: <span class="type">String</span>): <span class="type">Unit</span> <span class="comment">//创建全局临时视图(view)，生命周期与Spark应用一致。可以跨session访问。e.g. SELECT * FROM global_temp.view1.</span></span><br><span class="line">createOrReplaceGlobalTempView(viewName: <span class="type">String</span>): <span class="type">Unit</span> <span class="comment">//同上，已存在则替换。</span></span><br><span class="line">createTempView(viewName: <span class="type">String</span>): <span class="type">Unit</span><span class="comment">//创建本地临时视图(view)，仅当前SparkSession可访问。不跟任何库绑定，不能用db1.view1这样的形式访问。</span></span><br><span class="line">createOrReplaceTempView(viewName: <span class="type">String</span>): <span class="type">Unit</span> <span class="comment">//同上，已存在则替换。</span></span><br><span class="line">explain(): <span class="type">Unit</span> <span class="comment">//打印物理执行计划 queryExecution变量，完整执行计划。</span></span><br><span class="line">explain(extended: <span class="type">Boolean</span>): <span class="type">Unit</span> <span class="comment">//打印物理+逻辑执行计划</span></span><br><span class="line">hint(name: <span class="type">String</span>, parameters: <span class="type">Any</span>*): <span class="type">Dataset</span>[<span class="type">T</span>] <span class="comment">//当前dataset指定hint。//todoe.g. df1.join(df2.hint(&quot;broadcast&quot;))</span></span><br><span class="line">inputFiles: <span class="type">Array</span>[<span class="type">String</span>] <span class="comment">//返回组成Dataset的输入文件</span></span><br><span class="line">isLocal: <span class="type">Boolean</span> <span class="comment">//collect和take是否可以本地执行，不需要executor.</span></span><br><span class="line">localCheckpoint(eager: <span class="type">Boolean</span>): <span class="type">Dataset</span>[<span class="type">T</span>] <span class="comment">//执行本地Checkpoint，返回新dataset。</span></span><br><span class="line">printSchema(): <span class="type">Unit</span> <span class="comment">//打印schema结构</span></span><br><span class="line">rdd: <span class="type">RDD</span>[<span class="type">T</span>] <span class="comment">//dataset转换成RDD</span></span><br><span class="line">storageLevel: <span class="type">StorageLevel</span> <span class="comment">//当前存储等级，没有被persist则是StorageLevel.NONE</span></span><br><span class="line">toDF(colNames: <span class="type">String</span>*): <span class="type">DataFrame</span> <span class="comment">//转为DataFrame，也可以将RDD转为DataFrame。</span></span><br><span class="line">unpersist(blocking: <span class="type">Boolean</span>): <span class="type">Dataset</span>.<span class="keyword">this</span>.<span class="keyword">type</span> <span class="comment">//删除缓存，blocking表示是否等所有blocks删除后才返回,删除期间阻塞。</span></span><br><span class="line">write: <span class="type">DataFrameWriter</span>[<span class="type">T</span>] <span class="comment">//DataFrameWriter，非流式数据写接口。</span></span><br><span class="line">writeStream: <span class="type">DataStreamWriter</span>[<span class="type">T</span>] <span class="comment">//DataStreamWriter，流式数据写接口。</span></span><br><span class="line">isStreaming: <span class="type">Boolean</span> <span class="comment">//是否流式数据</span></span><br><span class="line">alias(alias: <span class="type">Symbol</span>): <span class="type">Dataset</span>[<span class="type">T</span>] <span class="comment">//给Dataset一个别名</span></span><br><span class="line">alias(alias: <span class="type">String</span>): <span class="type">Dataset</span>[<span class="type">T</span>] <span class="comment">//给Dataset一个别名</span></span><br><span class="line">as(alias: <span class="type">Symbol</span>): <span class="type">Dataset</span>[<span class="type">T</span>] <span class="comment">//给Dataset一个别名</span></span><br><span class="line">as(alias: <span class="type">String</span>): <span class="type">Dataset</span>[<span class="type">T</span>] <span class="comment">//给Dataset一个别名</span></span><br><span class="line">coalesce(numPartitions: <span class="type">Int</span>): <span class="type">Dataset</span>[<span class="type">T</span>] <span class="comment">// 分区合并,只能用于分区数变少时</span></span><br><span class="line">dropDuplicates(col1: <span class="type">String</span>, cols: <span class="type">String</span>*): <span class="type">Dataset</span>[<span class="type">T</span>] <span class="comment">//根据指定字段，对数据去重。</span></span><br><span class="line">except(other: <span class="type">Dataset</span>[<span class="type">T</span>]): <span class="type">Dataset</span>[<span class="type">T</span>] <span class="comment">//排除掉参数中的行</span></span><br><span class="line">filter(func: (<span class="type">T</span>) ⇒ <span class="type">Boolean</span>): <span class="type">Dataset</span>[<span class="type">T</span>]  <span class="comment">//根据条件过滤行 e.g. peopleDs.filter($&quot;age&quot; &gt; 15)</span></span><br><span class="line">filter(conditionExpr: <span class="type">String</span>): <span class="type">Dataset</span>[<span class="type">T</span>] <span class="comment">//根据条件过滤行 e.g. peopleDs.filter(&quot;age &gt; 15&quot;)</span></span><br><span class="line">flatMap[<span class="type">U</span>](func: (<span class="type">T</span>) ⇒ <span class="type">TraversableOnce</span>[<span class="type">U</span>])(<span class="keyword">implicit</span> arg0: <span class="type">Encoder</span>[<span class="type">U</span>]): <span class="type">Dataset</span>[<span class="type">U</span>]<span class="comment">// map处理后压扁元素</span></span><br><span class="line">groupByKey[<span class="type">K</span>](func: (<span class="type">T</span>) ⇒ <span class="type">K</span>)(<span class="keyword">implicit</span> arg0: <span class="type">Encoder</span>[<span class="type">K</span>]): <span class="type">KeyValueGroupedDataset</span>[<span class="type">K</span>, <span class="type">T</span>] <span class="comment">//现根据func函数生成key，然后按key分组。</span></span><br><span class="line">intersect(other: <span class="type">Dataset</span>[<span class="type">T</span>]): <span class="type">Dataset</span>[<span class="type">T</span>] <span class="comment">//求两个dataset的交集，等同于INTERSECT in SQL.</span></span><br><span class="line">joinWith[<span class="type">U</span>](other: <span class="type">Dataset</span>[<span class="type">U</span>], condition: <span class="type">Column</span>): <span class="type">Dataset</span>[(<span class="type">T</span>, <span class="type">U</span>)]<span class="comment">//inner equi-join两个dataset</span></span><br><span class="line">joinWith[<span class="type">U</span>](other: <span class="type">Dataset</span>[<span class="type">U</span>], condition: <span class="type">Column</span>, joinType: <span class="type">String</span>): <span class="type">Dataset</span>[(<span class="type">T</span>, <span class="type">U</span>)]<span class="comment">//joinType可选：inner, cross, outer, full, full_outer, left, left_outer, right, right_outer</span></span><br><span class="line">limit(n: <span class="type">Int</span>): <span class="type">Dataset</span>[<span class="type">T</span>]<span class="comment">//返回前n行，与head的区别是，head是一个action，会马上返回结果数组。</span></span><br><span class="line">map[<span class="type">U</span>](func: (<span class="type">T</span>) ⇒ <span class="type">U</span>)(<span class="keyword">implicit</span> arg0: <span class="type">Encoder</span>[<span class="type">U</span>]): <span class="type">Dataset</span>[<span class="type">U</span>]<span class="comment">//在每一个元素应用func函数，返回包含结果集的dataset。</span></span><br><span class="line">mapPartitions[<span class="type">U</span>](func: (<span class="type">Iterator</span>[<span class="type">T</span>]) ⇒ <span class="type">Iterator</span>[<span class="type">U</span>])(<span class="keyword">implicit</span> arg0: <span class="type">Encoder</span>[<span class="type">U</span>]): <span class="type">Dataset</span>[<span class="type">U</span>]<span class="comment">//在每一个分区应用func函数，返回包含结果集的dataset。</span></span><br><span class="line">sort(sortCol: <span class="type">String</span>, sortCols: <span class="type">String</span>*): <span class="type">Dataset</span>[<span class="type">T</span>] <span class="comment">//按指定列排序，默认asc。</span></span><br><span class="line">orderBy(sortCol: <span class="type">String</span>, sortCols: <span class="type">String</span>*): <span class="type">Dataset</span>[<span class="type">T</span>]<span class="comment">//sort的别名</span></span><br><span class="line">sortWithinPartitions(sortCol: <span class="type">String</span>, sortCols: <span class="type">String</span>*): <span class="type">Dataset</span>[<span class="type">T</span>] <span class="comment">//分区内排序，同&quot;SORT BY&quot; in SQL (Hive QL).</span></span><br><span class="line">randomSplit(weights: <span class="type">Array</span>[<span class="type">Double</span>], seed: <span class="type">Long</span>): <span class="type">Array</span>[<span class="type">Dataset</span>[<span class="type">T</span>]] <span class="comment">//按权重随机分割数据</span></span><br><span class="line">repartition(numPartitions: <span class="type">Int</span>, partitionExprs: <span class="type">Column</span>*): <span class="type">Dataset</span>[<span class="type">T</span>] <span class="comment">//按指定表达式，分区数，重新分区（hash），同&quot;DISTRIBUTE BY&quot; in SQL。默认分区数为spark.sql.shuffle.partitions</span></span><br><span class="line">repartitionByRange(numPartitions: <span class="type">Int</span>, partitionExprs: <span class="type">Column</span>*): <span class="type">Dataset</span>[<span class="type">T</span>] <span class="comment">//按指定表达式，分区数，重新分区，采用Range partition方式，按键范围分区。分区默认排序方式为ascending nulls first，分区内数据未排序。</span></span><br><span class="line">sample(withReplacement: <span class="type">Boolean</span>, fraction: <span class="type">Double</span>, seed: <span class="type">Long</span>): <span class="type">Dataset</span>[<span class="type">T</span>] <span class="comment">//随机取样本数据</span></span><br><span class="line">select[<span class="type">U1</span>](c1: <span class="type">TypedColumn</span>[<span class="type">T</span>, <span class="type">U1</span>]): <span class="type">Dataset</span>[<span class="type">U1</span>] <span class="comment">//根据列/表达式获取列数据</span></span><br><span class="line">transform[<span class="type">U</span>](t: (<span class="type">Dataset</span>[<span class="type">T</span>]) ⇒ <span class="type">Dataset</span>[<span class="type">U</span>]): <span class="type">Dataset</span>[<span class="type">U</span>] <span class="comment">//应用t函数转换Dataset。</span></span><br><span class="line">union(other: <span class="type">Dataset</span>[<span class="type">T</span>]): <span class="type">Dataset</span>[<span class="type">T</span>] <span class="comment">//等于UNION ALL in SQL。注意是按列位置合并：</span></span><br><span class="line">unionByName(other: <span class="type">Dataset</span>[<span class="type">T</span>]): <span class="type">Dataset</span>[<span class="type">T</span>] <span class="comment">//同union方法，但是按列名合并：</span></span><br><span class="line">where(conditionExpr: <span class="type">String</span>): <span class="type">Dataset</span>[<span class="type">T</span>] <span class="comment">//filter的别名</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//Untyped  transformations</span></span><br><span class="line">agg(aggExpr: (<span class="type">String</span>, <span class="type">String</span>), aggExprs: (<span class="type">String</span>, <span class="type">String</span>)*): <span class="type">DataFrame</span><span class="comment">//在整个dataset进行聚合。</span></span><br><span class="line">ds.agg(...) 是 ds.groupBy().agg(...) 的简写。</span><br><span class="line">e.g.</span><br><span class="line">ds.agg(max($<span class="string">&quot;age&quot;</span>), avg($<span class="string">&quot;salary&quot;</span>))</span><br><span class="line">ds.agg(<span class="type">Map</span>(<span class="string">&quot;age&quot;</span> -&gt; <span class="string">&quot;max&quot;</span>, <span class="string">&quot;salary&quot;</span> -&gt; <span class="string">&quot;avg&quot;</span>))</span><br><span class="line">ds.agg(<span class="string">&quot;age&quot;</span> -&gt; <span class="string">&quot;max&quot;</span>, <span class="string">&quot;salary&quot;</span> -&gt; <span class="string">&quot;avg&quot;</span>)</span><br><span class="line"></span><br><span class="line">apply(colName: <span class="type">String</span>): <span class="type">Column</span> <span class="comment">//返回指定列。</span></span><br><span class="line">col(colName: <span class="type">String</span>): <span class="type">Column</span> <span class="comment">//返回指定列。</span></span><br><span class="line">colRegex(colName: <span class="type">String</span>): <span class="type">Column</span> <span class="comment">//返回指定列。</span></span><br><span class="line">crossJoin(right: <span class="type">Dataset</span>[_]): <span class="type">DataFrame</span> <span class="comment">//cross join。</span></span><br><span class="line">cube(col1: <span class="type">String</span>, cols: <span class="type">String</span>*): <span class="type">RelationalGroupedDataset</span> <span class="comment">//使用指定列创建多维cube。</span></span><br><span class="line">drop(col: <span class="type">Column</span>): <span class="type">DataFrame</span> <span class="comment">//剪掉指定字段。</span></span><br><span class="line">groupBy(col1: <span class="type">String</span>, cols: <span class="type">String</span>*): <span class="type">RelationalGroupedDataset</span> <span class="comment">//按指定列分组</span></span><br><span class="line">join(right: <span class="type">Dataset</span>[_], usingColumns: <span class="type">Seq</span>[<span class="type">String</span>], joinType: <span class="type">String</span>): <span class="type">DataFrame</span><span class="comment">//与另一个DataFrame join。joinType：Default inner. Must be one of: inner, cross, outer, full, full_outer, left, left_outer, right, right_outer, left_semi, left_anti.</span></span><br><span class="line">na: <span class="type">DataFrameNaFunctions</span> <span class="comment">//见DataFrameNaFunctions</span></span><br><span class="line">stat: <span class="type">DataFrameStatFunctions</span> <span class="comment">//见DataFrameStatFunctions</span></span><br><span class="line">rollup(col1: <span class="type">String</span>, cols: <span class="type">String</span>*): <span class="type">RelationalGroupedDataset</span> <span class="comment">//使用指定列进行rollup聚合。</span></span><br><span class="line">select(col: <span class="type">String</span>, cols: <span class="type">String</span>*): <span class="type">DataFrame</span> <span class="comment">//选取指定列、SQL表达式。</span></span><br><span class="line">selectExpr(exprs: <span class="type">String</span>*): <span class="type">DataFrame</span> <span class="comment">//选取指定列、SQL表达式。</span></span><br><span class="line">withColumn(colName: <span class="type">String</span>, col: <span class="type">Column</span>): <span class="type">DataFrame</span><span class="comment">//新增或替换一列。</span></span><br><span class="line">withColumnRenamed(existingName: <span class="type">String</span>, newName: <span class="type">String</span>): <span class="type">DataFrame</span><span class="comment">//将指定列更名。</span></span><br></pre></td></tr></table></figure><h3 id="spark-sql-函数"><a class="markdownIt-Anchor" href="#spark-sql-函数"></a> Spark SQL 函数</h3><p>​Spark SQL的一个用途是执行SQL查询。Spark SQL还可用于从现有Hive中读取数据。 有关如何配置此功能的更多信息，请参阅Hive Tables部分。 从其他编程语言中运行SQL时，结果将作为Dataset/DataFrame返回。 还可以使用命令行或JDBC/ODBC与SQL接口进行交互</p><blockquote><p>org.apache.spark.sql.functions是一个Object，提供了约两百多个函数。<br />大部分函数与Hive的差不多。<br />除UDF函数，均可在spark-sql中直接使用。<br />经过import org.apache.spark.sql.functions._ ，也可以用于Dataframe，Dataset。<br />version<br />2.3.0<br />大部分支持Column的函数也支持String类型的列名。这些函数的返回类型基本都是Column。<br />函数很多，都在下面了。</p></blockquote><h4 id="聚合函数agg"><a class="markdownIt-Anchor" href="#聚合函数agg"></a> 聚合函数(agg)</h4><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">approx_count_distinct <span class="comment">//count_distinct近似值</span></span><br><span class="line">avg <span class="comment">//平均值</span></span><br><span class="line">collect_list <span class="comment">//聚合指定字段的值到list</span></span><br><span class="line">collect_set <span class="comment">//聚合指定字段的值到set</span></span><br><span class="line">corr <span class="comment">//计算两列的Pearson相关系数</span></span><br><span class="line">count <span class="comment">//计数</span></span><br><span class="line">countDistinct <span class="comment">//去重计数 SQL中用法</span></span><br><span class="line">covar_pop <span class="comment">//总体协方差（population covariance）</span></span><br><span class="line">covar_samp <span class="comment">//样本协方差（sample covariance）</span></span><br><span class="line">first <span class="comment">//一个元素</span></span><br><span class="line">last <span class="comment">//后一个元素</span></span><br><span class="line">grouping</span><br><span class="line">grouping_id</span><br><span class="line">kurtosis <span class="comment">//态(kurtosis)值</span></span><br><span class="line">skewness <span class="comment">//度(skewness)</span></span><br><span class="line">max <span class="comment">//最大值</span></span><br><span class="line">min <span class="comment">//最小值</span></span><br><span class="line">mean <span class="comment">//平均值</span></span><br><span class="line">stddev <span class="comment">//即stddev_samp</span></span><br><span class="line">stddev_samp <span class="comment">//样本标准偏差（sample standard deviation）</span></span><br><span class="line">stddev_pop <span class="comment">//总体标准偏差（population standard deviation）</span></span><br><span class="line">sum <span class="comment">//求和</span></span><br><span class="line">sumDistinct <span class="comment">//非重复值求和 SQL中用法</span></span><br><span class="line">select sum(distinct <span class="class"><span class="keyword">class</span>)</span></span><br><span class="line"><span class="class"><span class="title">select</span> <span class="title">count</span>(<span class="params">distinct class</span>)</span></span><br><span class="line"><span class="class"><span class="title">var_pop</span> <span class="comment">//总体方差（population variance）</span></span></span><br><span class="line"><span class="class"><span class="title">var_samp</span> <span class="comment">//样本无偏方差（unbiased variance）</span></span></span><br><span class="line"><span class="class"><span class="title">variance</span> <span class="comment">//即var_samp</span></span></span><br></pre></td></tr></table></figure><h4 id="集合函数"><a class="markdownIt-Anchor" href="#集合函数"></a> 集合函数</h4><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">array_contains(column,value) <span class="comment">//检查array类型字段是否包含指定元素</span></span><br><span class="line">explode <span class="comment">//展开array或map为多行</span></span><br><span class="line">explode_outer <span class="comment">//同explode，但当array或map为空或null时，会展开为null。</span></span><br><span class="line">posexplode <span class="comment">//同explode，带位置索引。</span></span><br><span class="line">posexplode_outer <span class="comment">//同explode_outer，带位置索引。</span></span><br><span class="line">from_json <span class="comment">//解析JSON字符串为StructType or ArrayType，有多种参数形式，详见文档。</span></span><br><span class="line">to_json <span class="comment">//转为json字符串，支持StructType, ArrayType of StructTypes, a MapType or ArrayType of MapTypes。</span></span><br><span class="line">get_json_object(column,path) <span class="comment">//获取指定json路径的json对象字符串。</span></span><br><span class="line">select get_json_object(&#x27;&#123;<span class="string">&quot;a&quot;</span><span class="number">1</span>,<span class="string">&quot;b&quot;</span>:<span class="number">2</span>&#125;&#x27;,&#x27;$.a&#x27;); <span class="comment">//[JSON Path介绍](http://blog.csdn.net/koflance/article/details/63262484)</span></span><br><span class="line">json_tuple(column,fields) <span class="comment">//获取json中指定字段值。select json_tuple(&#x27;&#123;&quot;a&quot;:1,&quot;b&quot;:2&#125;&#x27;,&#x27;a&#x27;,&#x27;b&#x27;);</span></span><br><span class="line">map_keys <span class="comment">//返回map的键组成的array</span></span><br><span class="line">map_values <span class="comment">//返回map的值组成的array</span></span><br><span class="line">size <span class="comment">//array or map的长度</span></span><br><span class="line">sort_array(e: <span class="type">Column</span>, asc: <span class="type">Boolean</span>) <span class="comment">//将array中元素排序（自然排序），默认asc。</span></span><br></pre></td></tr></table></figure><h4 id="时间函数"><a class="markdownIt-Anchor" href="#时间函数"></a> 时间函数</h4><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">add_months(startDate: <span class="type">Column</span>, numMonths: <span class="type">Int</span>) <span class="comment">//指定日期添加n月</span></span><br><span class="line">date_add(start: <span class="type">Column</span>, days: <span class="type">Int</span>) <span class="comment">//指定日期之后n天 e.g. select date_add(&#x27;2018-01-01&#x27;,3)</span></span><br><span class="line">date_sub(start: <span class="type">Column</span>, days: <span class="type">Int</span>) <span class="comment">//指定日期之前n天</span></span><br><span class="line">datediff(end: <span class="type">Column</span>, start: <span class="type">Column</span>) <span class="comment">//两日期间隔天数</span></span><br><span class="line">current_date() <span class="comment">//当前日期</span></span><br><span class="line">current_timestamp() <span class="comment">//当前时间戳，TimestampType类型</span></span><br><span class="line">date_format(dateExpr: <span class="type">Column</span>, format: <span class="type">String</span>) <span class="comment">//日期格式化</span></span><br><span class="line">dayofmonth(e: <span class="type">Column</span>) <span class="comment">//日期在一月中的天数，支持 date/timestamp/string</span></span><br><span class="line">dayofyear(e: <span class="type">Column</span>) <span class="comment">//日期在一年中的天数， 支持 date/timestamp/string</span></span><br><span class="line">weekofyear(e: <span class="type">Column</span>) <span class="comment">//日期在一年中的周数， 支持 date/timestamp/string</span></span><br><span class="line">from_unixtime(ut: <span class="type">Column</span>, f: <span class="type">String</span>)<span class="comment">//戳转字符串格式</span></span><br><span class="line">from_utc_timestamp(ts: <span class="type">Column</span>, tz: <span class="type">String</span>)<span class="comment">//戳转指定时区时间戳</span></span><br><span class="line">to_utc_timestamp(ts: <span class="type">Column</span>, tz: <span class="type">String</span>)<span class="comment">//时区时间戳转UTF时间戳</span></span><br><span class="line">hour(e: <span class="type">Column</span>)<span class="comment">//小时值</span></span><br><span class="line">minute(e: <span class="type">Column</span>)<span class="comment">//分钟值</span></span><br><span class="line">month(e: <span class="type">Column</span>)<span class="comment">//提取月份值</span></span><br><span class="line">quarter(e: <span class="type">Column</span>)<span class="comment">//提取季度</span></span><br><span class="line">second(e: <span class="type">Column</span>)<span class="comment">//提取秒</span></span><br><span class="line">year(e: <span class="type">Column</span>):<span class="comment">//提取年</span></span><br><span class="line">last_day(e: <span class="type">Column</span>)<span class="comment">//指定日期的月末日期</span></span><br><span class="line">months_between(date1: <span class="type">Column</span>, date2: <span class="type">Column</span>) <span class="comment">//计算两日期差几个月</span></span><br><span class="line">next_day(date: <span class="type">Column</span>, dayOfWeek: <span class="type">String</span>) <span class="comment">//计算指定日期之后的下一个周一、二...，dayOfWeek区分大小写，只接受 &quot;Mon&quot;, &quot;Tue&quot;, &quot;Wed&quot;, &quot;Thu&quot;, &quot;Fri&quot;, &quot;Sat&quot;, &quot;Sun&quot;。</span></span><br><span class="line">to_date(e: <span class="type">Column</span>) <span class="comment">//字段类型转为DateType</span></span><br><span class="line">trunc(date: <span class="type">Column</span>, format: <span class="type">String</span>) <span class="comment">//日期截断</span></span><br><span class="line">unix_timestamp(s: <span class="type">Column</span>, p: <span class="type">String</span>) <span class="comment">//指定格式的时间字符串转时间戳</span></span><br><span class="line">unix_timestamp(s: <span class="type">Column</span>) <span class="comment">//同上，默认格式为 yyyy-MM-dd HH:mm:ss</span></span><br><span class="line">unix_timestamp():<span class="comment">//当前时间戳(秒),底层实现为unix_timestamp(current_timestamp(), yyyy-MM-dd HH:mm:ss)</span></span><br><span class="line">window(timeColumn: <span class="type">Column</span>, windowDuration: <span class="type">String</span>, slideDuration: <span class="type">String</span>, startTime: <span class="type">String</span>)<span class="comment">//时间窗口函数，将指定时间(TimestampType)划分到窗口</span></span><br></pre></td></tr></table></figure><h4 id="数学函数"><a class="markdownIt-Anchor" href="#数学函数"></a> 数学函数</h4><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">cos,sin,tan <span class="comment">//计算角度的余弦，正弦。。。</span></span><br><span class="line">sinh,tanh,cosh <span class="comment">//计算双曲正弦，正切，。。</span></span><br><span class="line">acos,asin,atan,atan2 <span class="comment">//计算余弦/正弦值对应的角度</span></span><br><span class="line">bin <span class="comment">//将long类型转为对应二进制数值的字符串For example, bin(&quot;12&quot;) returns &quot;1100&quot;.</span></span><br><span class="line">bround <span class="comment">//舍入，使用Decimal的HALF_EVEN模式，v&gt;0.5向上舍入，v&lt; 0.5向下舍入，v0.5向最近的偶数舍入。</span></span><br><span class="line">round(e: <span class="type">Column</span>, scale: <span class="type">Int</span>) <span class="comment">//HALF_UP模式舍入到scale为小数点。v&gt;=0.5向上舍入，v&lt; 0.5向下舍入,即四舍五入。</span></span><br><span class="line">ceil <span class="comment">//向上舍入</span></span><br><span class="line">floor <span class="comment">//向下舍入</span></span><br><span class="line">cbrt <span class="comment">//Computes the cube-root of the given value.</span></span><br><span class="line">conv(num:<span class="type">Column</span>, fromBase: <span class="type">Int</span>, toBase: <span class="type">Int</span>) <span class="comment">//转换数值（字符串）的进制</span></span><br><span class="line">log(base: <span class="type">Double</span>, a: <span class="type">Column</span>):$log_&#123;base&#125;(a)$</span><br><span class="line">log(a: <span class="type">Column</span>):$log_e(a)$</span><br><span class="line">log10(a: <span class="type">Column</span>):$log_&#123;<span class="number">10</span>&#125;(a)$</span><br><span class="line">log2(a: <span class="type">Column</span>):$log_&#123;<span class="number">2</span>&#125;(a)$</span><br><span class="line">log1p(a: <span class="type">Column</span>):$log_&#123;e&#125;(a+<span class="number">1</span>)$</span><br><span class="line">pmod(dividend: <span class="type">Column</span>, divisor: <span class="type">Column</span>):<span class="comment">//Returns the positive value of dividend mod divisor.</span></span><br><span class="line">pow(l: <span class="type">Double</span>, r: <span class="type">Column</span>):$r^l$ <span class="comment">//注意r是列</span></span><br><span class="line">pow(l: <span class="type">Column</span>, r: <span class="type">Double</span>):$r^l$ <span class="comment">//注意l是列</span></span><br><span class="line">pow(l: <span class="type">Column</span>, r: <span class="type">Column</span>):$r^l$ <span class="comment">//注意r,l都是列</span></span><br><span class="line">radians(e: <span class="type">Column</span>):<span class="comment">//角度转弧度</span></span><br><span class="line">rint(e: <span class="type">Column</span>):<span class="comment">//Returns the double value that is closest in value to the argument and is equal to a mathematical integer.</span></span><br><span class="line">shiftLeft(e: <span class="type">Column</span>, numBits: <span class="type">Int</span>):<span class="comment">//向左位移</span></span><br><span class="line">shiftRight(e: <span class="type">Column</span>, numBits: <span class="type">Int</span>):<span class="comment">//向右位移</span></span><br><span class="line">shiftRightUnsigned(e: <span class="type">Column</span>, numBits: <span class="type">Int</span>):<span class="comment">//向右位移（无符号位）</span></span><br><span class="line">signum(e: <span class="type">Column</span>):<span class="comment">//返回数值正负符号</span></span><br><span class="line">sqrt(e: <span class="type">Column</span>):<span class="comment">//平方根</span></span><br><span class="line">hex(column: <span class="type">Column</span>):<span class="comment">//转十六进制</span></span><br><span class="line">unhex(column: <span class="type">Column</span>):<span class="comment">//逆转十六进制</span></span><br></pre></td></tr></table></figure><h4 id="混杂misc函数"><a class="markdownIt-Anchor" href="#混杂misc函数"></a> 混杂(misc)函数</h4><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">crc32(e: <span class="type">Column</span>):<span class="comment">//计算CRC32,返回bigint</span></span><br><span class="line">hash(cols: <span class="type">Column</span>*):<span class="comment">//计算 hash code，返回int</span></span><br><span class="line">md5(e: <span class="type">Column</span>):<span class="comment">//计算MD5摘要，返回32位，16进制字符串</span></span><br><span class="line">sha1(e: <span class="type">Column</span>):<span class="comment">//计算SHA-1摘要，返回40位，16进制字符串</span></span><br><span class="line">sha2(e: <span class="type">Column</span>, numBits: <span class="type">Int</span>):<span class="comment">//计算SHA-1摘要，返回numBits位，16进制字符串。numBits支持224, 256, 384, or 512.</span></span><br></pre></td></tr></table></figure><h4 id="其他非聚合函数"><a class="markdownIt-Anchor" href="#其他非聚合函数"></a> 其他非聚合函数</h4><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">abs(e: <span class="type">Column</span>) <span class="comment">//绝对值</span></span><br><span class="line">array(cols: <span class="type">Column</span>*) <span class="comment">//多列合并为array，cols必须为同类型</span></span><br><span class="line">map(cols: <span class="type">Column</span>*): <span class="comment">//将多列组织为map，输入列必须为（key,value)形式，各列的key/value分别为同一类型。</span></span><br><span class="line">bitwiseNOT(e: <span class="type">Column</span>): <span class="comment">//Computes bitwise NOT.</span></span><br><span class="line">broadcast[<span class="type">T</span>](df: <span class="type">Dataset</span>[<span class="type">T</span>]): <span class="type">Dataset</span>[<span class="type">T</span>]: <span class="comment">//将df变量广播，用于实现broadcast join。如left.join(broadcast(right), &quot;joinKey&quot;)</span></span><br><span class="line">coalesce(e: <span class="type">Column</span>*): <span class="comment">//返回第一个非空值</span></span><br><span class="line">col(colName: <span class="type">String</span>): <span class="comment">//返回colName对应的Column</span></span><br><span class="line">column(colName: <span class="type">String</span>): <span class="comment">//col函数的别名</span></span><br><span class="line">expr(expr: <span class="type">String</span>): <span class="comment">//解析expr表达式，将返回值存于Column，并返回这个Column。</span></span><br><span class="line">greatest(exprs: <span class="type">Column</span>*): <span class="comment">//返回多列中的最大值，跳过Null</span></span><br><span class="line">least(exprs: <span class="type">Column</span>*): <span class="comment">//返回多列中的最小值，跳过Null</span></span><br><span class="line">input_file_name(): <span class="comment">//返回当前任务的文件名 ？？</span></span><br><span class="line">isnan(e: <span class="type">Column</span>): <span class="comment">//检查是否NaN（非数值）</span></span><br><span class="line">isnull(e: <span class="type">Column</span>): <span class="comment">//检查是否为Null</span></span><br><span class="line">lit(literal: <span class="type">Any</span>): <span class="comment">//将字面量(literal)创建一个Column</span></span><br><span class="line">typedLit[<span class="type">T</span>](literal: <span class="type">T</span>)(<span class="keyword">implicit</span> arg0: scala.reflect.api.<span class="type">JavaUniverse</span>.<span class="type">TypeTag</span>[<span class="type">T</span>]): <span class="comment">//将字面量(literal)创建一个Column，literal支持 scala types e.g.: List, Seq and Map.</span></span><br><span class="line">monotonically_increasing_id(): <span class="comment">//返回单调递增唯一ID，但不同分区的ID不连续。ID为64位整型。</span></span><br><span class="line">nanvl(col1: <span class="type">Column</span>, col2: <span class="type">Column</span>): <span class="comment">//col1为NaN则返回col2</span></span><br><span class="line">negate(e: <span class="type">Column</span>): <span class="comment">//负数，同df.select( -df(&quot;amount&quot;) )</span></span><br><span class="line">not(e: <span class="type">Column</span>): <span class="comment">//取反，同df.filter( !df(&quot;isActive&quot;) )</span></span><br><span class="line">rand(): <span class="comment">//随机数[0.0, 1.0]</span></span><br><span class="line">rand(seed: <span class="type">Long</span>): <span class="comment">//随机数[0.0, 1.0]，使用seed种子</span></span><br><span class="line">randn(): <span class="comment">//随机数，从正态分布取</span></span><br><span class="line">randn(seed: <span class="type">Long</span>): <span class="comment">//同上</span></span><br><span class="line">spark_partition_id(): <span class="comment">//返回partition ID</span></span><br><span class="line">struct(cols: <span class="type">Column</span>*):<span class="comment">//多列组合成新的struct column ？？</span></span><br><span class="line">when(condition: <span class="type">Column</span>, value: <span class="type">Any</span>): <span class="comment">//当condition为true返回value，如</span></span><br><span class="line">people.select(when(people(<span class="string">&quot;gender&quot;</span>) === <span class="string">&quot;male&quot;</span>, <span class="number">0</span>)</span><br><span class="line">  .when(people(<span class="string">&quot;gender&quot;</span>) === <span class="string">&quot;female&quot;</span>, <span class="number">1</span>)</span><br><span class="line">  .otherwise(<span class="number">2</span>))</span><br><span class="line">  <span class="comment">//如果没有otherwise且condition全部没命中，则返回null.</span></span><br></pre></td></tr></table></figure><h4 id="排序函数"><a class="markdownIt-Anchor" href="#排序函数"></a> 排序函数</h4><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">asc(columnName: <span class="type">String</span>):正序</span><br><span class="line">asc_nulls_first(columnName: <span class="type">String</span>):正序，<span class="literal">null</span>排最前</span><br><span class="line">asc_nulls_last(columnName: <span class="type">String</span>):正序，<span class="literal">null</span>排最后</span><br><span class="line">e.g.</span><br><span class="line">df.sort(asc(<span class="string">&quot;dept&quot;</span>), desc(<span class="string">&quot;age&quot;</span>)) <span class="comment">//对应有desc函数</span></span><br><span class="line"> desc,desc_nulls_first,desc_nulls_last</span><br></pre></td></tr></table></figure><h4 id="字符串函数"><a class="markdownIt-Anchor" href="#字符串函数"></a> 字符串函数</h4><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">ascii(e: <span class="type">Column</span>): <span class="comment">//计算第一个字符的ascii码</span></span><br><span class="line">base64(e: <span class="type">Column</span>): <span class="comment">//base64转码</span></span><br><span class="line">unbase64(e: <span class="type">Column</span>): <span class="comment">//base64解码</span></span><br><span class="line">concat(exprs: <span class="type">Column</span>*):<span class="comment">//连接多列字符串</span></span><br><span class="line">concat_ws(sep: <span class="type">String</span>, exprs: <span class="type">Column</span>*):<span class="comment">//使用sep作为分隔符连接多列字符串</span></span><br><span class="line">decode(value: <span class="type">Column</span>, charset: <span class="type">String</span>): <span class="comment">//解码</span></span><br><span class="line">encode(value: <span class="type">Column</span>, charset: <span class="type">String</span>): <span class="comment">//转码，charset支持 &#x27;US-ASCII&#x27;, &#x27;ISO-8859-1&#x27;, &#x27;UTF-8&#x27;, &#x27;UTF-16BE&#x27;, &#x27;UTF-16LE&#x27;, &#x27;UTF-16&#x27;。</span></span><br><span class="line">format_number(x: <span class="type">Column</span>, d: <span class="type">Int</span>):<span class="comment">//格式化&#x27;#,###,###.##&#x27;形式的字符串</span></span><br><span class="line">format_string(format: <span class="type">String</span>, arguments: <span class="type">Column</span>*): <span class="comment">//将arguments按format格式化，格式为printf-style。</span></span><br><span class="line">initcap(e: <span class="type">Column</span>): <span class="comment">//单词首字母大写</span></span><br><span class="line">lower(e: <span class="type">Column</span>): <span class="comment">//转小写</span></span><br><span class="line">upper(e: <span class="type">Column</span>): <span class="comment">//转大写</span></span><br><span class="line">instr(str: <span class="type">Column</span>, substring: <span class="type">String</span>):<span class="comment">//substring在str中第一次出现的位置</span></span><br><span class="line">length(e: <span class="type">Column</span>): <span class="comment">//字符串长度</span></span><br><span class="line">levenshtein(l: <span class="type">Column</span>, r: <span class="type">Column</span>): <span class="comment">//计算两个字符串之间的编辑距离（Levenshtein distance）</span></span><br><span class="line">locate(substr: <span class="type">String</span>, str: <span class="type">Column</span>): <span class="comment">//substring在str中第一次出现的位置，位置编号从1开始，0表示未找到。</span></span><br><span class="line">locate(substr: <span class="type">String</span>, str: <span class="type">Column</span>, pos: <span class="type">Int</span>): <span class="comment">//同上，但从pos位置后查找。</span></span><br><span class="line">lpad(str: <span class="type">Column</span>, len: <span class="type">Int</span>, pad: <span class="type">String</span>):<span class="comment">//字符串左填充。用pad字符填充str的字符串至len长度。有对应的rpad，右填充。</span></span><br><span class="line">ltrim(e: <span class="type">Column</span>):<span class="comment">//剪掉左边的空格、空白字符，对应有rtrim.</span></span><br><span class="line">ltrim(e: <span class="type">Column</span>, trimString: <span class="type">String</span>):<span class="comment">//剪掉左边的指定字符,对应有rtrim.</span></span><br><span class="line">trim(e: <span class="type">Column</span>, trimString: <span class="type">String</span>):<span class="comment">//剪掉左右两边的指定字符</span></span><br><span class="line">trim(e: <span class="type">Column</span>):<span class="comment">//剪掉左右两边的空格、空白字符</span></span><br><span class="line">regexp_extract(e: <span class="type">Column</span>, exp: <span class="type">String</span>, groupIdx: <span class="type">Int</span>): <span class="comment">//正则提取匹配的组</span></span><br><span class="line">regexp_replace(e: <span class="type">Column</span>, pattern: <span class="type">Column</span>, replacement: <span class="type">Column</span>): <span class="comment">//正则替换匹配的部分，这里参数为列。</span></span><br><span class="line">regexp_replace(e: <span class="type">Column</span>, pattern: <span class="type">String</span>, replacement: <span class="type">String</span>): <span class="comment">//正则替换匹配的部分</span></span><br><span class="line">repeat(str: <span class="type">Column</span>, n: <span class="type">Int</span>):<span class="comment">//将str重复n次返回</span></span><br><span class="line">reverse(str: <span class="type">Column</span>): <span class="comment">//将str反转</span></span><br><span class="line">soundex(e: <span class="type">Column</span>): <span class="comment">//计算桑迪克斯代码（soundex code）PS:用于按英语发音来索引姓名,发音相同但拼写不同的单词，会映射成同一个码。</span></span><br><span class="line">split(str: <span class="type">Column</span>, pattern: <span class="type">String</span>): <span class="comment">//用pattern分割str</span></span><br><span class="line">substring(str: <span class="type">Column</span>, pos: <span class="type">Int</span>, len: <span class="type">Int</span>): <span class="comment">//在str上截取从pos位置开始长度为len的子字符串。</span></span><br><span class="line">translate(src: <span class="type">Column</span>, matchingString: <span class="type">String</span>, replaceString: <span class="type">String</span>):<span class="comment">//把src中的matchingString全换成replaceString。</span></span><br></pre></td></tr></table></figure><h4 id="udf函数"><a class="markdownIt-Anchor" href="#udf函数"></a> UDF函数</h4><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">user-defined function.</span><br><span class="line">callUDF(udfName: <span class="type">String</span>, cols: <span class="type">Column</span>*): <span class="comment">//调用UDF</span></span><br><span class="line"><span class="keyword">import</span> org.apache.spark.sql._</span><br><span class="line"><span class="keyword">val</span> df = <span class="type">Seq</span>((<span class="string">&quot;id1&quot;</span>, <span class="number">1</span>), (<span class="string">&quot;id2&quot;</span>, <span class="number">4</span>), (<span class="string">&quot;id3&quot;</span>, <span class="number">5</span>)).toDF(<span class="string">&quot;id&quot;</span>, <span class="string">&quot;value&quot;</span>)</span><br><span class="line"><span class="keyword">val</span> spark = df.sparkSession</span><br><span class="line">spark.udf.register(<span class="string">&quot;simpleUDF&quot;</span>, (v: <span class="type">Int</span>) =&gt; v * v)</span><br><span class="line">df.select($<span class="string">&quot;id&quot;</span>, callUDF(<span class="string">&quot;simpleUDF&quot;</span>, $<span class="string">&quot;value&quot;</span>))</span><br><span class="line">udf: 定义<span class="type">UDF</span></span><br></pre></td></tr></table></figure><h4 id="窗口函数"><a class="markdownIt-Anchor" href="#窗口函数"></a> 窗口函数</h4><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">cume_dist(): <span class="comment">//cumulative distribution of values within a window partition</span></span><br><span class="line">currentRow(): <span class="comment">//returns the special frame boundary that represents the current row in the window partition.</span></span><br><span class="line">rank():<span class="comment">//排名，返回数据项在分组中的排名，排名相等会在名次中留下空位 1,2,2,4。</span></span><br><span class="line">dense_rank(): <span class="comment">//排名，返回数据项在分组中的排名，排名相等会在名次中不会留下空位 1,2,2,3。</span></span><br><span class="line">row_number():<span class="comment">//行号，为每条记录返回一个数字 1,2,3,4</span></span><br><span class="line">percent_rank():<span class="comment">//returns the relative rank (i.e. percentile) of rows within a window partition.</span></span><br><span class="line">lag(e: <span class="type">Column</span>, offset: <span class="type">Int</span>, defaultValue: <span class="type">Any</span>): <span class="comment">//offset rows before the current row</span></span><br><span class="line">lead(e: <span class="type">Column</span>, offset: <span class="type">Int</span>, defaultValue: <span class="type">Any</span>): <span class="comment">//returns the value that is offset rows after the current row</span></span><br><span class="line">ntile(n: <span class="type">Int</span>): <span class="comment">//returns the ntile group id (from 1 to n inclusive) in an ordered window partition.</span></span><br><span class="line">unboundedFollowing():<span class="comment">//returns the special frame boundary that represents the last row in the window partition.</span></span><br></pre></td></tr></table></figure><h2 id="spark-rdd"><a class="markdownIt-Anchor" href="#spark-rdd"></a> Spark RDD</h2><h4 id="参数"><a class="markdownIt-Anchor" href="#参数"></a> 参数</h4><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">context: <span class="type">SparkContext</span></span><br><span class="line">创建<span class="type">RDD</span>的<span class="type">SparkContext</span></span><br><span class="line"></span><br><span class="line">sparkContext: <span class="type">SparkContext</span></span><br><span class="line">创建<span class="type">RDD</span>的<span class="type">SparkContext</span></span><br><span class="line"></span><br><span class="line">dependencies: <span class="type">Seq</span>[<span class="type">Dependency</span>[_]]</span><br><span class="line"><span class="type">RDD</span>的依赖列表</span><br><span class="line"></span><br><span class="line">getNumPartitions: <span class="type">Int</span></span><br><span class="line">获取<span class="type">RDD</span>的分区数</span><br><span class="line"></span><br><span class="line">getStorageLevel: <span class="type">StorageLevel</span></span><br><span class="line">获取存储等级，如果设置为none,则返回<span class="type">StorageLevel</span>.<span class="type">NONE</span> 。</span><br><span class="line"></span><br><span class="line">id: <span class="type">Int</span></span><br><span class="line">该<span class="type">RDD</span>的unique <span class="type">ID</span></span><br><span class="line"></span><br><span class="line">isCheckpointed: <span class="type">Boolean</span></span><br><span class="line">是否checkpointed and materialized, either reliably or locally.</span><br><span class="line"></span><br><span class="line">name: <span class="type">String</span></span><br><span class="line"><span class="type">RDD</span>的名字</span><br><span class="line"></span><br><span class="line">partitioner: <span class="type">Option</span>[<span class="type">Partitioner</span>]</span><br><span class="line">分区器</span><br><span class="line"></span><br><span class="line">partitions: <span class="type">Array</span>[<span class="type">Partition</span>]</span><br><span class="line">各个分区</span><br></pre></td></tr></table></figure><h4 id="保存数据"><a class="markdownIt-Anchor" href="#保存数据"></a> 保存数据</h4><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">saveAsObjectFile(path: <span class="type">String</span>): <span class="type">Unit</span> <span class="comment">//保存为SequenceFile</span></span><br><span class="line"></span><br><span class="line">saveAsTextFile(path: <span class="type">String</span>, codec: <span class="type">Class</span>[_ &lt;: <span class="type">CompressionCodec</span>]): <span class="type">Unit</span></span><br><span class="line"></span><br><span class="line">saveAsTextFile(path: <span class="type">String</span>): <span class="type">Unit</span></span><br><span class="line">保存为文本文件</span><br></pre></td></tr></table></figure><h4 id="键值转换操作"><a class="markdownIt-Anchor" href="#键值转换操作"></a> 键值转换操作</h4><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">filter(f: (<span class="type">T</span>) ⇒ <span class="type">Boolean</span>): <span class="type">RDD</span>[<span class="type">T</span>] <span class="comment">//过滤数据，仅留下使得f返回true的元素。</span></span><br><span class="line">map[<span class="type">U</span>](f: (<span class="type">T</span>) ⇒ <span class="type">U</span>)(<span class="keyword">implicit</span> arg0: <span class="type">ClassTag</span>[<span class="type">U</span>]): <span class="type">RDD</span>[<span class="type">U</span>]</span><br><span class="line">将一个<span class="type">RDD</span>中的每个数据项，通过map中的函数映射变为一个新的元素。</span><br><span class="line">输入分区与输出分区一对一，即：有多少个输入分区，就有多少个输出分区。</span><br><span class="line"></span><br><span class="line">flatMap[<span class="type">U</span>](f: (<span class="type">T</span>) ⇒ <span class="type">TraversableOnce</span>[<span class="type">U</span>])(<span class="keyword">implicit</span> arg0: <span class="type">ClassTag</span>[<span class="type">U</span>]): <span class="type">RDD</span>[<span class="type">U</span>]</span><br><span class="line">第一步和map一样，最后将所有的输出分区合并成一个。</span><br><span class="line">使用flatMap时候需要注意：</span><br><span class="line">flatMap会将字符串看成是一个字符数组。</span><br><span class="line"></span><br><span class="line">mapPartitions[<span class="type">U</span>](f: (<span class="type">Iterator</span>[<span class="type">T</span>]) ⇒ <span class="type">Iterator</span>[<span class="type">U</span>], preservesPartitioning: <span class="type">Boolean</span> = <span class="literal">false</span>)(<span class="keyword">implicit</span> arg0: <span class="type">ClassTag</span>[<span class="type">U</span>]): <span class="type">RDD</span>[<span class="type">U</span>]</span><br><span class="line">该函数和map函数类似，只不过映射函数的参数由<span class="type">RDD</span>中的每一个元素变成了<span class="type">RDD</span>中每一个分区的迭代器。如果在映射的过程中需要频繁创建额外的对象，使用mapPartitions要比map高效的过。</span><br><span class="line">比如，将<span class="type">RDD</span>中的所有数据通过<span class="type">JDBC</span>连接写入数据库，如果使用map函数，可能要为每一个元素都创建一个connection，这样开销很大，如果使用mapPartitions，那么只需要针对每一个分区建立一个connection。</span><br><span class="line">参数preservesPartitioning表示是否保留父<span class="type">RDD</span>的partitioner分区信息。</span><br><span class="line"></span><br><span class="line">mapPartitionsWithIndex[<span class="type">U</span>](f: (<span class="type">Int</span>, <span class="type">Iterator</span>[<span class="type">T</span>]) =&gt; <span class="type">Iterator</span>[<span class="type">U</span>], preservesPartitioning: <span class="type">Boolean</span> = <span class="literal">false</span>)(<span class="keyword">implicit</span> arg0: <span class="type">ClassTag</span>[<span class="type">U</span>]): <span class="type">RDD</span>[<span class="type">U</span>]</span><br><span class="line">函数作用同mapPartitions，不过提供了两个参数，第一个参数为分区的索引。</span><br><span class="line"></span><br><span class="line">keyBy[<span class="type">K</span>](f: (<span class="type">T</span>) ⇒ <span class="type">K</span>): <span class="type">RDD</span>[(<span class="type">K</span>, <span class="type">T</span>)]</span><br><span class="line">通过f函数为每个元素生成一个<span class="type">KEY</span></span><br><span class="line"></span><br><span class="line">sortBy[<span class="type">K</span>](f: (<span class="type">T</span>) ⇒ <span class="type">K</span>, ascending: <span class="type">Boolean</span> = <span class="literal">true</span>, numPartitions: <span class="type">Int</span> = <span class="keyword">this</span>.partitions.length)(<span class="keyword">implicit</span> ord: <span class="type">Ordering</span>[<span class="type">K</span>], ctag: <span class="type">ClassTag</span>[<span class="type">K</span>]): <span class="type">RDD</span>[<span class="type">T</span>]</span><br><span class="line">通过给定的函数对元素排序</span><br><span class="line"></span><br><span class="line">zip[<span class="type">U</span>](other: <span class="type">RDD</span>[<span class="type">U</span>])(<span class="keyword">implicit</span> arg0: <span class="type">ClassTag</span>[<span class="type">U</span>]): <span class="type">RDD</span>[(<span class="type">T</span>, <span class="type">U</span>)]</span><br><span class="line">与另一个<span class="type">RDD</span>组合成（k,v)对。</span><br><span class="line"></span><br><span class="line">zipPartitions[<span class="type">B</span>, <span class="type">V</span>](rdd2: <span class="type">RDD</span>[<span class="type">B</span>], preservesPartitioning: <span class="type">Boolean</span>)(f: (<span class="type">Iterator</span>[<span class="type">T</span>], <span class="type">Iterator</span>[<span class="type">B</span>]) ⇒ <span class="type">Iterator</span>[<span class="type">V</span>])(<span class="keyword">implicit</span> arg0: <span class="type">ClassTag</span>[<span class="type">B</span>], arg1: <span class="type">ClassTag</span>[<span class="type">V</span>]): <span class="type">RDD</span>[<span class="type">V</span>]</span><br><span class="line"></span><br><span class="line">zipWithIndex(): <span class="type">RDD</span>[(<span class="type">T</span>, <span class="type">Long</span>)]</span><br><span class="line"></span><br><span class="line">zipWithUniqueId(): <span class="type">RDD</span>[(<span class="type">T</span>, <span class="type">Long</span>)]</span><br></pre></td></tr></table></figure><h4 id="聚合相关"><a class="markdownIt-Anchor" href="#聚合相关"></a> 聚合相关</h4><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">aggregate[<span class="type">U</span>](zeroValue: <span class="type">U</span>)(seqOp: (<span class="type">U</span>, <span class="type">T</span>) ⇒ <span class="type">U</span>, combOp: (<span class="type">U</span>, <span class="type">U</span>) ⇒ <span class="type">U</span>)(<span class="keyword">implicit</span> arg0: <span class="type">ClassTag</span>[<span class="type">U</span>]): <span class="type">U</span></span><br><span class="line">aggregate用户聚合<span class="type">RDD</span>中的元素，先使用seqOp将<span class="type">RDD</span>中每个分区中的<span class="type">T</span>类型元素聚合成<span class="type">U</span>类型，再使用combOp将之前每个分区聚合后的<span class="type">U</span>类型聚合成<span class="type">U</span>类型，特别注意seqOp和combOp都会使用zeroValue的值，zeroValue的类型为<span class="type">U</span>。</span><br><span class="line"></span><br><span class="line">treeAggregate[<span class="type">U</span>](zeroValue: <span class="type">U</span>)(seqOp: (<span class="type">U</span>, <span class="type">T</span>) ⇒ <span class="type">U</span>, combOp: (<span class="type">U</span>, <span class="type">U</span>) ⇒ <span class="type">U</span>, depth: <span class="type">Int</span> = <span class="number">2</span>)(<span class="keyword">implicit</span> arg0: <span class="type">ClassTag</span>[<span class="type">U</span>]): <span class="type">U</span> <span class="comment">//多层级聚合</span></span><br><span class="line">reduce(f: (<span class="type">T</span>, <span class="type">T</span>) ⇒ <span class="type">T</span>): <span class="type">T</span> <span class="comment">//根据映射函数f，对RDD中的元素进行二元计算，返回计算结果。</span></span><br><span class="line">treeReduce(f: (<span class="type">T</span>, <span class="type">T</span>) ⇒ <span class="type">T</span>, depth: <span class="type">Int</span> = <span class="number">2</span>): <span class="type">T</span> <span class="comment">//多级reduce归并聚合</span></span><br><span class="line">fold(zeroValue: <span class="type">T</span>)(op: (<span class="type">T</span>, <span class="type">T</span>) ⇒ <span class="type">T</span>): <span class="type">T</span> <span class="comment">//fold是aggregate的简化，将aggregate中的seqOp和combOp使用同一个函数op。</span></span><br><span class="line">count(): <span class="type">Long</span> <span class="comment">//count返回RDD中的元素数量。</span></span><br><span class="line">countApprox(timeout: <span class="type">Long</span>, confidence: <span class="type">Double</span> = <span class="number">0.95</span>): <span class="type">PartialResult</span>[<span class="type">BoundedDouble</span>] <span class="comment">//近似count</span></span><br><span class="line">countApproxDistinct(relativeSD: <span class="type">Double</span> = <span class="number">0.05</span>): <span class="type">Long</span></span><br><span class="line">countApproxDistinct(p: <span class="type">Int</span>, sp: <span class="type">Int</span>): <span class="type">Long</span> <span class="comment">//近似distinct count</span></span><br><span class="line">countByValue()(<span class="keyword">implicit</span> ord: <span class="type">Ordering</span>[<span class="type">T</span>] = <span class="literal">null</span>): <span class="type">Map</span>[<span class="type">T</span>, <span class="type">Long</span>] <span class="comment">//计算每个值出现次数</span></span><br><span class="line">countByValueApprox(timeout: <span class="type">Long</span>, confidence: <span class="type">Double</span> = <span class="number">0.95</span>)(<span class="keyword">implicit</span> ord: <span class="type">Ordering</span>[<span class="type">T</span>] = <span class="literal">null</span>):<span class="comment">//计算每个值出现次数近似值</span></span><br><span class="line">distinct(): <span class="type">RDD</span>[<span class="type">T</span>]</span><br><span class="line">distinct(numPartitions: <span class="type">Int</span>)(<span class="keyword">implicit</span> ord: <span class="type">Ordering</span>[<span class="type">T</span>] = <span class="literal">null</span>): <span class="type">RDD</span>[<span class="type">T</span>]<span class="comment">//返回元素去重后的RDD</span></span><br><span class="line">groupBy[<span class="type">K</span>](f: (<span class="type">T</span>) ⇒ <span class="type">K</span>)(<span class="keyword">implicit</span> kt: <span class="type">ClassTag</span>[<span class="type">K</span>]): <span class="type">RDD</span>[(<span class="type">K</span>, <span class="type">Iterable</span>[<span class="type">T</span>])]</span><br><span class="line">groupBy[<span class="type">K</span>](f: (<span class="type">T</span>) ⇒ <span class="type">K</span>, numPartitions: <span class="type">Int</span>)(<span class="keyword">implicit</span> kt: <span class="type">ClassTag</span>[<span class="type">K</span>]): <span class="type">RDD</span>[(<span class="type">K</span>, <span class="type">Iterable</span>[<span class="type">T</span>])]</span><br><span class="line">groupBy[<span class="type">K</span>](f: (<span class="type">T</span>) ⇒ <span class="type">K</span>, p: <span class="type">Partitioner</span>)(<span class="keyword">implicit</span> kt: <span class="type">ClassTag</span>[<span class="type">K</span>], ord: <span class="type">Ordering</span>[<span class="type">K</span>] = <span class="literal">null</span>): <span class="type">RDD</span>[(<span class="type">K</span>, <span class="type">Iterable</span>[<span class="type">T</span>])]</span><br><span class="line">按指定函数生成key，并按key分组。</span><br><span class="line">注意：性能比较差，推荐用<span class="type">PairRDDFunctions</span>.reduceByKey or <span class="type">PairRDDFunctions</span>.aggregateByKey.</span><br><span class="line">因为reduceByKey会先在分区内做聚合，再进行数据交换(shuffle)。</span><br><span class="line"></span><br><span class="line">glom(): <span class="type">RDD</span>[<span class="type">Array</span>[<span class="type">T</span>]] <span class="comment">//该函数是将RDD中每一个分区中类型为T的元素转换成Array[T]，这样每一个分区就只有一个数组元素。</span></span><br><span class="line">max()(<span class="keyword">implicit</span> ord: <span class="type">Ordering</span>[<span class="type">T</span>]): <span class="type">T</span> <span class="comment">//最大的元素</span></span><br><span class="line">min()(<span class="keyword">implicit</span> ord: <span class="type">Ordering</span>[<span class="type">T</span>]): <span class="type">T</span> <span class="comment">//最小的元素</span></span><br></pre></td></tr></table></figure><h4 id="遍历元素"><a class="markdownIt-Anchor" href="#遍历元素"></a> 遍历元素</h4><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">foreach(f: (<span class="type">T</span>) ⇒ <span class="type">Unit</span>): <span class="type">Unit</span></span><br><span class="line">foreach用于遍历<span class="type">RDD</span>,将函数f应用于每一个元素。</span><br><span class="line">但要注意，如果对<span class="type">RDD</span>执行foreach，只会在<span class="type">Executor</span>端有效，而并不是<span class="type">Driver</span>端。</span><br><span class="line">比如：rdd.foreach(println)，只会在<span class="type">Executor</span>的stdout中打印出来，<span class="type">Driver</span>端是看不到的。</span><br><span class="line"></span><br><span class="line">foreachPartition(f: (<span class="type">Iterator</span>[<span class="type">T</span>]) ⇒ <span class="type">Unit</span>): <span class="type">Unit</span></span><br><span class="line">foreachPartition和foreach类似，只不过是对每一个分区使用f。</span><br></pre></td></tr></table></figure><h4 id="取元素相关"><a class="markdownIt-Anchor" href="#取元素相关"></a> 取元素相关</h4><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">collect(): <span class="type">Array</span>[<span class="type">T</span>]</span><br><span class="line">collect用于将一个<span class="type">RDD</span>转换成数组。</span><br><span class="line"></span><br><span class="line">first(): <span class="type">T</span></span><br><span class="line">first返回<span class="type">RDD</span>中的第一个元素，不排序。</span><br><span class="line"></span><br><span class="line">take(num: <span class="type">Int</span>): <span class="type">Array</span>[<span class="type">T</span>]</span><br><span class="line">take用于获取<span class="type">RDD</span>中从<span class="number">0</span>到num<span class="number">-1</span>下标的元素，不排序。</span><br><span class="line"></span><br><span class="line">top(num: <span class="type">Int</span>)(<span class="keyword">implicit</span> ord: <span class="type">Ordering</span>[<span class="type">T</span>]): <span class="type">Array</span>[<span class="type">T</span>]</span><br><span class="line">top函数用于从<span class="type">RDD</span>中，按照默认（降序）或者指定的排序规则，返回前num个元素。</span><br><span class="line"></span><br><span class="line">takeOrdered(num: <span class="type">Int</span>)(<span class="keyword">implicit</span> ord: <span class="type">Ordering</span>[<span class="type">T</span>]): <span class="type">Array</span>[<span class="type">T</span>]</span><br><span class="line">takeOrdered和top类似，只不过以和top相反的顺序返回元素</span><br><span class="line"></span><br><span class="line">takeSample(withReplacement: <span class="type">Boolean</span>, num: <span class="type">Int</span>, seed: <span class="type">Long</span> = <span class="type">Utils</span>.random.nextLong): <span class="type">Array</span>[<span class="type">T</span>]</span><br><span class="line">取样本元素</span><br></pre></td></tr></table></figure><h4 id="集合间运算"><a class="markdownIt-Anchor" href="#集合间运算"></a> 集合间运算</h4><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">++(other: <span class="type">RDD</span>[<span class="type">T</span>]): <span class="type">RDD</span>[<span class="type">T</span>] <span class="comment">//与另一个RDD union。</span></span><br><span class="line">intersection(other: <span class="type">RDD</span>[<span class="type">T</span>], partitioner: <span class="type">Partitioner</span>)(<span class="keyword">implicit</span> ord: <span class="type">Ordering</span>[<span class="type">T</span>] = <span class="literal">null</span>): <span class="type">RDD</span>[<span class="type">T</span>]</span><br><span class="line">intersection(other: <span class="type">RDD</span>[<span class="type">T</span>], numPartitions: <span class="type">Int</span>): <span class="type">RDD</span>[<span class="type">T</span>]</span><br><span class="line">intersection(other: <span class="type">RDD</span>[<span class="type">T</span>]): <span class="type">RDD</span>[<span class="type">T</span>]</span><br><span class="line">取交集</span><br><span class="line"></span><br><span class="line">subtract(other: <span class="type">RDD</span>[<span class="type">T</span>], p: <span class="type">Partitioner</span>)(<span class="keyword">implicit</span> ord: <span class="type">Ordering</span>[<span class="type">T</span>] = <span class="literal">null</span>): <span class="type">RDD</span>[<span class="type">T</span>]</span><br><span class="line">subtract(other: <span class="type">RDD</span>[<span class="type">T</span>], numPartitions: <span class="type">Int</span>): <span class="type">RDD</span>[<span class="type">T</span>]</span><br><span class="line">subtract(other: <span class="type">RDD</span>[<span class="type">T</span>]): <span class="type">RDD</span>[<span class="type">T</span>]</span><br><span class="line">求差集</span><br><span class="line"></span><br><span class="line">union(other: <span class="type">RDD</span>[<span class="type">T</span>]): <span class="type">RDD</span>[<span class="type">T</span>] <span class="comment">//与另一个RDD合并，类似union all,不会去重。</span></span><br></pre></td></tr></table></figure><h4 id="其他"><a class="markdownIt-Anchor" href="#其他"></a> 其他</h4><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">persist(): <span class="type">RDD</span>.<span class="keyword">this</span>.<span class="keyword">type</span></span><br><span class="line">persist(newLevel: <span class="type">StorageLevel</span>): <span class="type">RDD</span>.<span class="keyword">this</span>.<span class="keyword">type</span></span><br><span class="line">缓存数据，可设置缓存级别(如果尚未设置过，才可以设置，本地checkpoint除外)</span><br><span class="line"></span><br><span class="line">unpersist(blocking: <span class="type">Boolean</span> = <span class="literal">true</span>): <span class="type">RDD</span>.<span class="keyword">this</span>.<span class="keyword">type</span></span><br><span class="line"><span class="type">Mark</span> the <span class="type">RDD</span> as non-persistent, and remove all blocks <span class="keyword">for</span> it from memory and disk.</span><br><span class="line"></span><br><span class="line">cache(): <span class="type">RDD</span>.<span class="keyword">this</span>.<span class="keyword">type</span> <span class="comment">//MEMORY_ONLY级别缓存数据</span></span><br><span class="line"></span><br><span class="line">cartesian[<span class="type">U</span>](other: <span class="type">RDD</span>[<span class="type">U</span>])(<span class="keyword">implicit</span> arg0: <span class="type">ClassTag</span>[<span class="type">U</span>]): <span class="type">RDD</span>[(<span class="type">T</span>, <span class="type">U</span>)]： <span class="comment">//计算两个RDD的迪卡尔积</span></span><br><span class="line"></span><br><span class="line">checkpoint(): <span class="type">Unit</span> <span class="comment">//标记将该RDD进行checkpoint处理？</span></span><br><span class="line"></span><br><span class="line">coalesce(numPartitions: <span class="type">Int</span>, shuffle: <span class="type">Boolean</span> = <span class="literal">false</span>)(<span class="keyword">implicit</span> ord: <span class="type">Ordering</span>[<span class="type">T</span>] = <span class="literal">null</span>): <span class="type">RDD</span>[<span class="type">T</span>]</span><br><span class="line">分区合并(只能减少分区)，使用<span class="type">HashPartitioner</span>。</span><br><span class="line">第一个参数为重分区的数目，第二个为是否进行shuffle，默认为<span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">repartition(numPartitions: <span class="type">Int</span>)(<span class="keyword">implicit</span> ord: <span class="type">Ordering</span>[<span class="type">T</span>] = <span class="literal">null</span>): <span class="type">RDD</span>[<span class="type">T</span>]</span><br><span class="line">调整分区数，会导致shuffle，如果是减少分区，可以使用coalesce，避免shuffle。</span><br><span class="line"></span><br><span class="line">toDebugString: <span class="type">String</span><span class="comment">//返回RDD依赖树/血统图</span></span><br><span class="line"></span><br><span class="line">getCheckpointFile: <span class="type">Option</span>[<span class="type">String</span>]</span><br><span class="line">获取checkpoint文件夹名称</span><br><span class="line"></span><br><span class="line">localCheckpoint(): <span class="type">RDD</span>.<span class="keyword">this</span>.<span class="keyword">type</span></span><br><span class="line">标记为使用本地checkpoint</span><br><span class="line"></span><br><span class="line">isEmpty(): <span class="type">Boolean</span></span><br><span class="line">是否含<span class="number">0</span>个元素</span><br><span class="line"></span><br><span class="line">iterator(split: <span class="type">Partition</span>, context: <span class="type">TaskContext</span>): <span class="type">Iterator</span>[<span class="type">T</span>]</span><br><span class="line">返回迭代器，不应直接调用，而是给<span class="type">RDD</span>的子类用的。</span><br><span class="line"></span><br><span class="line">toLocalIterator: <span class="type">Iterator</span>[<span class="type">T</span>] <span class="comment">//返回元素的本地迭代器</span></span><br><span class="line"></span><br><span class="line">pipe(command: <span class="type">String</span>): <span class="type">RDD</span>[<span class="type">String</span>]</span><br><span class="line">pipe(command: <span class="type">String</span>, env: <span class="type">Map</span>[<span class="type">String</span>, <span class="type">String</span>]): <span class="type">RDD</span>[<span class="type">String</span>]</span><br><span class="line">pipe(command: <span class="type">Seq</span>[<span class="type">String</span>], env: <span class="type">Map</span>[<span class="type">String</span>, <span class="type">String</span>] = <span class="type">Map</span>(), printPipeContext: ((<span class="type">String</span>) ⇒ <span class="type">Unit</span>) ⇒ <span class="type">Unit</span> = <span class="literal">null</span>, printRDDElement: (<span class="type">T</span>, (<span class="type">String</span>) ⇒ <span class="type">Unit</span>) ⇒ <span class="type">Unit</span> = <span class="literal">null</span>, separateWorkingDir: <span class="type">Boolean</span> = <span class="literal">false</span>, bufferSize: <span class="type">Int</span> = <span class="number">8192</span>, encoding: <span class="type">String</span> = <span class="type">Codec</span>.defaultCharsetCodec.name): <span class="type">RDD</span>[<span class="type">String</span>]</span><br><span class="line">调用外部进程处理<span class="type">RDD</span>,如通过标准输入传给shell脚本。</span><br><span class="line"></span><br><span class="line">preferredLocations(split: <span class="type">Partition</span>): <span class="type">Seq</span>[<span class="type">String</span>]</span><br><span class="line"><span class="type">Get</span> the preferred locations of a partition, taking into account whether the <span class="type">RDD</span> is checkpointed.</span><br><span class="line"></span><br><span class="line">randomSplit(weights: <span class="type">Array</span>[<span class="type">Double</span>], seed: <span class="type">Long</span> = <span class="type">Utils</span>.random.nextLong): <span class="type">Array</span>[<span class="type">RDD</span>[<span class="type">T</span>]]</span><br><span class="line">按权随机将元素分组</span><br><span class="line"></span><br><span class="line">sample(withReplacement: <span class="type">Boolean</span>, fraction: <span class="type">Double</span>, seed: <span class="type">Long</span> = <span class="type">Utils</span>.random.nextLong): <span class="type">RDD</span>[<span class="type">T</span>]</span><br><span class="line">取样本/子集</span><br><span class="line"></span><br><span class="line">setName(_name: <span class="type">String</span>): <span class="type">RDD</span>.<span class="keyword">this</span>.<span class="keyword">type</span> <span class="comment">//设置RDD名字</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 大数据 </category>
          
          <category> spark </category>
          
      </categories>
      
      
        <tags>
            
            <tag> spark </tag>
            
            <tag> hadoop </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>线性回归模型的推导</title>
      <link href="2018/08/05/linearregression/"/>
      <url>2018/08/05/linearregression/</url>
      
        <content type="html"><![CDATA[<h2 id="线性回归模型的推导"><a class="markdownIt-Anchor" href="#线性回归模型的推导"></a> 线性回归模型的推导</h2><p>线性回归（Linear Regression）是一种通过属性的线性组合来进行预测的线性模型，其目的是找到一条直线或者一个平面或者更高维的超平面，使得预测值与真实值之间的误差最小化。</p><ul><li>特点：只有一个自变量的情况称为单变量回归，大于一个自变量情况的叫做多元回归.</li><li>优点：结果具有很好的可解释性（w直观表达了各属性在预测中的重要性），计算熵不复杂。</li><li>缺点：对非线性数据拟合不好</li><li>适用数据类型：数值型和标称型数据<br /><img src="linearregression.png" alt="线性回归拟合平面" /></li></ul><h2 id="线性回归的模型"><a class="markdownIt-Anchor" href="#线性回归的模型"></a> 线性回归的模型：</h2><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>h</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mi>θ</mi><mn>1</mn></msub><msub><mi>x</mi><mn>1</mn></msub><mo>+</mo><msub><mi>θ</mi><mn>2</mn></msub><msub><mi>x</mi><mn>2</mn></msub><mo>+</mo><msub><mi>θ</mi><mn>3</mn></msub><msub><mi>x</mi><mn>3</mn></msub><mo>+</mo><msub><mi>θ</mi><mn>4</mn></msub><msub><mi>x</mi><mn>4</mn></msub><mo>+</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo>+</mo><msub><mi>θ</mi><mi>n</mi></msub><msub><mi>x</mi><mi>n</mi></msub><mo>+</mo><mi>b</mi></mrow><annotation encoding="application/x-tex">h(x) = θ_{1}x_{1}+θ_{2}x_{2}+θ_{3}x_{3}+θ_{4}x_{4}+...+θ_{n}x_{n} + b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">h</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">4</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">4</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span></span></span></span></span></p><p>那么我们可以通过向量的方式来表示就值θ与特征X值之间的关系：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">Θ</mi><mo>=</mo><mrow><mo fence="true">(</mo><mfrac linethickness="0px"><msub><mi>θ</mi><mn>1</mn></msub><msub><mi>θ</mi><mi>n</mi></msub></mfrac><mo fence="true">)</mo></mrow><mo separator="true">;</mo><mi>X</mi><mo>=</mo><mrow><mo fence="true">(</mo><mfrac linethickness="0px"><msub><mi>x</mi><mn>1</mn></msub><msub><mi>x</mi><mi>n</mi></msub></mfrac><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">\Theta = \binom{θ_{1}}{θ_{n}};X=\binom{x_{1}}{x_{n}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Θ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="mord"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">(</span></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714400000000002em;"><span style="top:-2.3139999999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8360000000000001em;"><span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">)</span></span></span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="mord"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">(</span></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.10756em;"><span style="top:-2.3139999999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8360000000000001em;"><span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">)</span></span></span></span></span></span></span></p><p>将模型整合后：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>h</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mi>n</mi></munderover><msub><mi>θ</mi><mi>i</mi></msub><msub><mi>x</mi><mi>i</mi></msub><mo>=</mo><msup><mi mathvariant="normal">Θ</mi><mi>T</mi></msup><mi>X</mi></mrow><annotation encoding="application/x-tex">h(x) = \sum_{i=0}^{n}θ_{i}x_{i} = \Theta ^TX</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">h</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.929066em;vertical-align:-1.277669em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8913309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">Θ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span></span></span></span></span></p><p>线性回归模型有很好的可解释性，可以从权重θ直接看出每个特征对结果的影响程度。</p><h2 id="误差"><a class="markdownIt-Anchor" href="#误差"></a> 误差</h2><p>真实值和预测值之间肯定是要存在差异的（用 b 来表示该误差）,误差具有如下特点：</p><ul><li>独立</li><li>同分布</li><li>服从高斯分布</li></ul><p>对于每个样本会有</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo>=</mo><msup><mi>θ</mi><mi>T</mi></msup><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo>+</mo><msup><mi>b</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup></mrow><annotation encoding="application/x-tex">y^{(i)} = θ^{T}x^{(i)} + b^{(i)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.13244em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.0213299999999998em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.938em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span></span></p><p>由于误差服从于高斯分布</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><mo stretchy="false">(</mo><msup><mi>b</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mrow><msqrt><mrow><mn>2</mn><mi>π</mi></mrow></msqrt><mi>σ</mi></mrow></mfrac><mi>e</mi><mi>x</mi><mi>p</mi><mo stretchy="false">(</mo><mo>−</mo><mfrac><mrow><mo stretchy="false">(</mo><msup><mi>b</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><mrow><mn>2</mn><msup><mi>σ</mi><mn>2</mn></msup></mrow></mfrac><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">p(b^{(i)}) = \frac{1}{\sqrt{2\pi}\sigma }exp(-\frac{(b^{(i)})^{2}}{2\sigma^{2}})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.188em;vertical-align:-0.25em;"></span><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.495em;vertical-align:-0.93em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.2027799999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.90722em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord">2</span><span class="mord mathdefault" style="margin-right:0.03588em;">π</span></span></span><span style="top:-2.86722em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.13278em;"><span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.93em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathdefault">e</span><span class="mord mathdefault">x</span><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord">−</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.565em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span></span></span></span></span></p><p>将（3）公式带入（4）公式</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><mo stretchy="false">(</mo><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mi mathvariant="normal">∣</mi><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo separator="true">;</mo><mi>θ</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mrow><msqrt><mrow><mn>2</mn><mi>π</mi></mrow></msqrt><mi>σ</mi></mrow></mfrac><mi>e</mi><mi>x</mi><mi>p</mi><mo stretchy="false">(</mo><mo>−</mo><mfrac><mrow><mo stretchy="false">(</mo><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo>−</mo><msup><mi>θ</mi><mi>T</mi></msup><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><mrow><mn>2</mn><msup><mi>σ</mi><mn>2</mn></msup></mrow></mfrac><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">p(y^{(i)}|x^{(i)};\theta )=\frac{1}{\sqrt{2\pi}\sigma }exp(-\frac{(y^{(i)}-\theta^{T}x^{(i)})^{2}}{2\sigma^{2}})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.188em;vertical-align:-0.25em;"></span><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.495em;vertical-align:-0.93em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.2027799999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.90722em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord">2</span><span class="mord mathdefault" style="margin-right:0.03588em;">π</span></span></span><span style="top:-2.86722em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.13278em;"><span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.93em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathdefault">e</span><span class="mord mathdefault">x</span><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord">−</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.565em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span></span></span></span></span></p><p><strong>为了根据样本估计参数值</strong>，我们引入似然函数</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>L</mi><mo stretchy="false">(</mo><mi>θ</mi><mo stretchy="false">)</mo><mo>=</mo><munderover><mo>∏</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>m</mi></munderover><mi>p</mi><mo stretchy="false">(</mo><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mi mathvariant="normal">∣</mi><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo separator="true">;</mo><mi>θ</mi><mo stretchy="false">)</mo><mo>=</mo><munderover><mo>∏</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>m</mi></munderover><mfrac><mn>1</mn><mrow><msqrt><mrow><mn>2</mn><mi>π</mi></mrow></msqrt><mi>σ</mi></mrow></mfrac><mi>e</mi><mi>x</mi><mi>p</mi><mo stretchy="false">(</mo><mo>−</mo><mfrac><mrow><mo stretchy="false">(</mo><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo>−</mo><msup><mi>θ</mi><mi>T</mi></msup><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><mrow><mn>2</mn><msup><mi>σ</mi><mn>2</mn></msup></mrow></mfrac><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">L(\theta) = \prod_{i=1}^{m}p(y^{(i)}|x^{(i)};\theta ) = \prod_{i=1}^{m}\frac{1}{\sqrt{2\pi}\sigma }exp(-\frac{(y^{(i)}-\theta^{T}x^{(i)})^{2}}{2\sigma^{2}})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">L</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.929066em;vertical-align:-1.277669em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∏</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.929066em;vertical-align:-1.277669em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∏</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.2027799999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.90722em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord">2</span><span class="mord mathdefault" style="margin-right:0.03588em;">π</span></span></span><span style="top:-2.86722em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.13278em;"><span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.93em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathdefault">e</span><span class="mord mathdefault">x</span><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord">−</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.565em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span></span></span></span></span></p><p>为了简化计算复杂度，我们使用对数似然，将乘法转换成加法。</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>l</mi><mi>o</mi><mi>g</mi><mi>L</mi><mo stretchy="false">(</mo><mi>θ</mi><mo stretchy="false">)</mo><mo>=</mo><mi>l</mi><mi>o</mi><mi>g</mi><munderover><mo>∏</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>m</mi></munderover><mfrac><mn>1</mn><mrow><msqrt><mrow><mn>2</mn><mi>π</mi></mrow></msqrt><mi>σ</mi></mrow></mfrac><mi>e</mi><mi>x</mi><mi>p</mi><mo stretchy="false">(</mo><mo>−</mo><mfrac><mrow><mo stretchy="false">(</mo><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo>−</mo><msup><mi>θ</mi><mi>T</mi></msup><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><mrow><mn>2</mn><msup><mi>σ</mi><mn>2</mn></msup></mrow></mfrac><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">logL(\theta) = log\prod_{i=1}^{m}\frac{1}{\sqrt{2\pi}\sigma }exp(-\frac{(y^{(i)}-\theta^{T}x^{(i)})^{2}}{2\sigma^{2}})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault">L</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.929066em;vertical-align:-1.277669em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∏</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.2027799999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.90722em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord">2</span><span class="mord mathdefault" style="margin-right:0.03588em;">π</span></span></span><span style="top:-2.86722em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.13278em;"><span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.93em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathdefault">e</span><span class="mord mathdefault">x</span><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord">−</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.565em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span></span></span></span></span></p><p>将上面的公式化简：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>l</mi><mi>o</mi><mi>g</mi><mi>L</mi><mo stretchy="false">(</mo><mi>θ</mi><mo stretchy="false">)</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>m</mi></munderover><mfrac><mn>1</mn><mrow><msqrt><mrow><mn>2</mn><mi>π</mi></mrow></msqrt><mi>σ</mi></mrow></mfrac><mi>e</mi><mi>x</mi><mi>p</mi><mo stretchy="false">(</mo><mo>−</mo><mfrac><mrow><mo stretchy="false">(</mo><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo>−</mo><msup><mi>θ</mi><mi>T</mi></msup><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><mrow><mn>2</mn><msup><mi>σ</mi><mn>2</mn></msup></mrow></mfrac><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">logL(\theta) = \sum_{i=1}^{m}\frac{1}{\sqrt{2\pi}\sigma }exp(-\frac{(y^{(i)}-\theta^{T}x^{(i)})^{2}}{2\sigma^{2}})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault">L</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.929066em;vertical-align:-1.277669em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.2027799999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.90722em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord">2</span><span class="mord mathdefault" style="margin-right:0.03588em;">π</span></span></span><span style="top:-2.86722em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.13278em;"><span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.93em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathdefault">e</span><span class="mord mathdefault">x</span><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord">−</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.565em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span></span></span></span></span></p><p>继续展开：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>l</mi><mi>o</mi><mi>g</mi><mi>L</mi><mo stretchy="false">(</mo><mi>θ</mi><mo stretchy="false">)</mo><mo>=</mo><mi>m</mi><mi>l</mi><mi>o</mi><mi>g</mi><mfrac><mn>1</mn><mrow><msqrt><mrow><mn>2</mn><mi>π</mi></mrow></msqrt><mi>σ</mi></mrow></mfrac><mo>−</mo><mfrac><mn>1</mn><msup><mi>σ</mi><mn>2</mn></msup></mfrac><mo>∗</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>m</mi></munderover><mo stretchy="false">(</mo><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo>−</mo><msup><mi>θ</mi><mi>T</mi></msup><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">logL(\theta) = mlog\frac{1}{\sqrt{2\pi}\sigma} - \frac{1}{\sigma^{2}}*\frac{1}{2}\sum_{i=1}^{m}(y^{(i)}-\theta^{T}x^{(i)})^{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault">L</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.25144em;vertical-align:-0.93em;"></span><span class="mord mathdefault">m</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.2027799999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.90722em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord">2</span><span class="mord mathdefault" style="margin-right:0.03588em;">π</span></span></span><span style="top:-2.86722em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.13278em;"><span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.93em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.00744em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.929066em;vertical-align:-1.277669em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.188em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></span></p><p>目标：让似然函数（对数变换后也一样）<strong>越大越好</strong></p><p>看公式（9）我们能看出减号前后都是恒正的数字。</p><p>因此我们推出我们的<strong>目标函数</strong>，越小越好</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>J</mi><mo stretchy="false">(</mo><mi>θ</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>m</mi></munderover><mo stretchy="false">(</mo><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo>−</mo><msup><mi>θ</mi><mi>T</mi></msup><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">J(\theta) = \frac{1}{2}\sum_{i=1}^{m}(y^{(i)}-\theta^{T}x^{(i)})^{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.09618em;">J</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.929066em;vertical-align:-1.277669em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.188em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></span></p><p>上述公式，被称为<strong>最小二乘法</strong></p><h2 id="求解"><a class="markdownIt-Anchor" href="#求解"></a> 求解</h2><p>要使 <strong>J(θ)</strong> 误差最小，可以采用一下两种方法：一种使<strong>正规方程</strong>解法（只适用于简单的线性回归）<strong>，<strong>另一种使用</strong>梯度下降算法</strong>。</p><h3 id="正规方程"><a class="markdownIt-Anchor" href="#正规方程"></a> 正规方程</h3><h4 id="目标函数转换"><a class="markdownIt-Anchor" href="#目标函数转换"></a> 目标函数转换</h4><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>J</mi><mo stretchy="false">(</mo><mi>θ</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>m</mi></munderover><mo stretchy="false">(</mo><msub><mi>h</mi><mi>θ</mi></msub><mo stretchy="false">(</mo><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo><mo>−</mo><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mo>=</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><mo stretchy="false">(</mo><mi>X</mi><mi>θ</mi><mo>−</mo><mi>y</mi><msup><mo stretchy="false">)</mo><mi>T</mi></msup><mo stretchy="false">(</mo><mi>X</mi><mi>θ</mi><mo>−</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">J(\theta) = \frac{1}{2}\sum_{i=1}^{m}(h_{\theta}(x^{(i)})-y^{(i)})^{2}=\frac{1}{2}(X\theta-y)^{T}(X\theta-y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.09618em;">J</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.929066em;vertical-align:-1.277669em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.188em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.00744em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1413309999999999em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span></span></p><h4 id="求偏导"><a class="markdownIt-Anchor" href="#求偏导"></a> 求偏导</h4><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mo>▽</mo><mi>θ</mi></msub><mi>J</mi><mo stretchy="false">(</mo><mi>θ</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mo>▽</mo><mi>θ</mi></msub><mrow><mo fence="true">[</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><mo stretchy="false">(</mo><mi>X</mi><mi>θ</mi><mo>−</mo><mi>y</mi><msup><mo stretchy="false">)</mo><mi>T</mi></msup><mo stretchy="false">(</mo><mi>X</mi><mi>θ</mi><mo>−</mo><mi>y</mi><mo stretchy="false">)</mo><mo fence="true">]</mo></mrow><mspace linebreak="newline"></mspace><mo>=</mo><msub><mo>▽</mo><mi>θ</mi></msub><mrow><mo fence="true">[</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><mo stretchy="false">(</mo><msup><mi>θ</mi><mi>T</mi></msup><msup><mi>X</mi><mi>T</mi></msup><mi>X</mi><mi>θ</mi><mo>−</mo><msup><mi>θ</mi><mi>T</mi></msup><msup><mi>X</mi><mi>T</mi></msup><mi>y</mi><mo>−</mo><msup><mi>y</mi><mi>T</mi></msup><mi>X</mi><mi>θ</mi><mo>+</mo><msup><mi>y</mi><mi>T</mi></msup><mi>y</mi><mo stretchy="false">)</mo><mo fence="true">]</mo></mrow><mspace linebreak="newline"></mspace><mo>=</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><mo stretchy="false">(</mo><mn>2</mn><msup><mi>X</mi><mi>T</mi></msup><mi>X</mi><mi>θ</mi><mo>−</mo><msup><mi>X</mi><mi>T</mi></msup><mi>y</mi><mo>−</mo><mo stretchy="false">(</mo><msup><mi>y</mi><mi>T</mi></msup><mi>X</mi><msup><mo stretchy="false">)</mo><mi>T</mi></msup><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mo>=</mo><msup><mi>X</mi><mi>T</mi></msup><mi>X</mi><mi>θ</mi><mo>−</mo><msup><mi>X</mi><mi>T</mi></msup><mi>y</mi></mrow><annotation encoding="application/x-tex">\bigtriangledown_{\theta}J(\theta)  = \bigtriangledown_{\theta}\left [ \frac{1}{2}(X\theta-y)^{T}(X\theta-y) \right ]\\ = \bigtriangledown_{\theta}\left [ \frac{1}{2}(\theta^{T}X^{T}X\theta-\theta^{T}X^{T}y-y^{T}X\theta+y^{T}y) \right ]\\ = \frac{1}{2}(2X^{T}X\theta-X^{T}y-(y^{T}X)^{T})\\ = X^{T}X\theta-X^{T}y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mbin">▽</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.09618em;">J</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="mord"><span class="mbin">▽</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">[</span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">]</span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="mord"><span class="mbin">▽</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">[</span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">]</span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.00744em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">(</span><span class="mord">2</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.0857709999999998em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1413309999999999em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.9746609999999999em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.0857709999999998em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span></span></span></p><h4 id="偏导设为0"><a class="markdownIt-Anchor" href="#偏导设为0"></a> 偏导设为0</h4><p>将偏导设置为0 求出 θ的值</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>θ</mi><mo>=</mo><mo stretchy="false">(</mo><msup><mi>X</mi><mi>T</mi></msup><mi>X</mi><msup><mo stretchy="false">)</mo><mrow><mo>−</mo><mn>1</mn></mrow></msup><msup><mi>X</mi><mi>T</mi></msup><mi>y</mi></mrow><annotation encoding="application/x-tex">\theta=(X^{T}X)^{-1}X^{T}y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1413309999999999em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.864108em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span></span></span></p><p>X为特征值矩阵，y为目标值矩阵。</p><p>缺点：当特征过于复杂，求解速度太慢，对于<strong>复杂的算法</strong>，不能使用正规方程求解</p><h3 id="梯度下降"><a class="markdownIt-Anchor" href="#梯度下降"></a> 梯度下降</h3><p>损失函数(又称代价函数或成本函数)：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>J</mi><mo stretchy="false">(</mo><mi>θ</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>m</mi></munderover><mo stretchy="false">(</mo><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo>−</mo><msup><mi>θ</mi><mi>T</mi></msup><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">J(\theta) = \frac{1}{2}\sum_{i=1}^{m}(y^{(i)}-\theta^{T}x^{(i)})^{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.09618em;">J</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.929066em;vertical-align:-1.277669em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.188em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></span></p><p>梯度下降是一个用来求函数最小值的算法，将使用梯度下降算法来求出损失函数J(θ)的最小值。</p><p>梯度下降思想：开始时我们随机选择一个参数的组合，计算损失函数，然后我们寻找下一个能让损失函数值下降最多的参数组合。我们持续这么做直到找到一个局部最小值（<strong>local minimum</strong>），因为我们并没有尝试完所有的参数组合，所以不能确定我们得到的局部最小值是否便是全局最小值（<strong>global minimum</strong>），选择不同的初始参数组合，可能会找到不同的局部最小值。</p><p><strong>梯度下降(Gradient Descent)，原始的梯度下降法需要计算所有样本的值才能够得出梯度，计算量大，所以后面才有会一系列的改进。</strong></p><h4 id="批量梯度下降bgd"><a class="markdownIt-Anchor" href="#批量梯度下降bgd"></a> 批量梯度下降（BGD）</h4><p>特点：容易得到最优解，但是由于考虑到所有成本，计算太慢。</p><p>算法的公式为：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>θ</mi><mi>j</mi></msub><mo>:</mo><mo>=</mo><msub><mi>θ</mi><mi>j</mi></msub><mo>−</mo><mi>α</mi><mfrac><mi mathvariant="normal">∂</mi><mrow><mi mathvariant="normal">∂</mi><msub><mi>θ</mi><mi>j</mi></msub></mrow></mfrac><mi>J</mi><mo stretchy="false">(</mo><mi>θ</mi><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>J</mi><mo stretchy="false">(</mo><mi>θ</mi><mo stretchy="false">)</mo></mrow><mrow><mi mathvariant="normal">∂</mi><msub><mi>θ</mi><mi>j</mi></msub></mrow></mfrac><mo>=</mo><mfrac><mn>1</mn><mi>m</mi></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>m</mi></munderover><mo stretchy="false">(</mo><msup><mi>y</mi><mi>i</mi></msup><mo>−</mo><msub><mi>h</mi><mi>θ</mi></msub><mo stretchy="false">(</mo><msup><mi>x</mi><mi>i</mi></msup><mo stretchy="false">)</mo><mo stretchy="false">)</mo><msubsup><mi>x</mi><mi>j</mi><mi>i</mi></msubsup><mspace linebreak="newline"></mspace><msub><mi>θ</mi><mi>j</mi></msub><mo>:</mo><mo>=</mo><msub><mi>θ</mi><mi>j</mi></msub><mo>+</mo><mfrac><mn>1</mn><mi>m</mi></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>m</mi></munderover><mo stretchy="false">(</mo><msup><mi>y</mi><mi>i</mi></msup><mo>−</mo><msub><mi>h</mi><mi>θ</mi></msub><mo stretchy="false">(</mo><msup><mi>x</mi><mi>i</mi></msup><mo stretchy="false">)</mo><mo stretchy="false">)</mo><msubsup><mi>x</mi><mi>j</mi><mi>i</mi></msubsup><mspace linebreak="newline"></mspace></mrow><annotation encoding="application/x-tex">\theta_{j}:=\theta_{j}-\alpha \frac{\partial}{\partial\theta_{j}}J(\theta)\\\frac{\partial J(\theta)}{\partial \theta_{j}} = \frac{1}{m}\sum_{i=1}^{m}(y^{i}-h_{\theta}(x^{i}))x_{j}^{i}\\\theta_{j}:=\theta_{j} + \frac{1}{m}\sum_{i=1}^{m}(y^{i}-h_{\theta}(x^{i}))x_{j}^{i}\\</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.980548em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.980548em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.343548em;vertical-align:-0.972108em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.972108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathdefault" style="margin-right:0.09618em;">J</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:2.399108em;vertical-align:-0.972108em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault" style="margin-right:0.09618em;">J</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.972108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.929066em;vertical-align:-1.277669em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">m</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8746639999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.2577720000000001em;vertical-align:-0.383108em;"></span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8746639999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose">)</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.874664em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.980548em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.980548em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.929066em;vertical-align:-1.277669em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">m</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8746639999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.2577720000000001em;vertical-align:-0.383108em;"></span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8746639999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose">)</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.874664em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span></span><span class="mspace newline"></span></span></span></span></p><p>其中alpha是学习率（<strong>learning rate</strong>），它决定了我们沿着能让代价函数下降程度最大的方向向下迈出的步子有多大，在批量梯度下降中，我们每一次都同时让所有的参数减去学习速率乘以代价函数的导数。<br /><img src="learningrate.png" alt="不同学习率的影响" /></p><h4 id="随机梯度下降sgd"><a class="markdownIt-Anchor" href="#随机梯度下降sgd"></a> 随机梯度下降(SGD)</h4><p>特点：迭代速度快，但不一定每次都朝着收敛的方向。</p><p>公式：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>θ</mi><mi>j</mi></msub><mo>:</mo><mo>=</mo><msub><mi>θ</mi><mi>j</mi></msub><mo>+</mo><mo stretchy="false">(</mo><msup><mi>y</mi><mi>i</mi></msup><mo>−</mo><msub><mi>h</mi><mi>θ</mi></msub><mo stretchy="false">(</mo><msup><mi>x</mi><mi>i</mi></msup><mo stretchy="false">)</mo><mo stretchy="false">)</mo><msubsup><mi>x</mi><mi>j</mi><mi>i</mi></msubsup></mrow><annotation encoding="application/x-tex">\theta_{j}:=\theta_{j}+(y^{i}-h_{\theta}(x^{i}))x_{j}^{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.980548em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.980548em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1246639999999999em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8746639999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.2577720000000001em;vertical-align:-0.383108em;"></span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8746639999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose">)</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.874664em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span></span></span></span></span></p><h4 id="小批量梯度下降mini-batch-gd"><a class="markdownIt-Anchor" href="#小批量梯度下降mini-batch-gd"></a> 小批量梯度下降(Mini-batch GD)</h4><p>特点：每次更新选择一小部分数据来算，实用！</p><p>公式：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>θ</mi><mi>j</mi></msub><mo>:</mo><mo>=</mo><msub><mi>θ</mi><mi>j</mi></msub><mo>+</mo><mfrac><mn>1</mn><mn>10</mn></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mn>10</mn></munderover><mo stretchy="false">(</mo><msup><mi>y</mi><mi>i</mi></msup><mo>−</mo><msub><mi>h</mi><mi>θ</mi></msub><mo stretchy="false">(</mo><msup><mi>x</mi><mi>i</mi></msup><mo stretchy="false">)</mo><mo stretchy="false">)</mo><msubsup><mi>x</mi><mi>j</mi><mi>i</mi></msubsup></mrow><annotation encoding="application/x-tex">\theta_{j}:=\theta_{j}+\frac{1}{10}\sum_{i=1}^{10}(y^{i}-h_{\theta}(x^{i}))x_{j}^{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.980548em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.980548em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:3.0787820000000004em;vertical-align:-1.277669em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mord">0</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8011130000000004em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8746639999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.2577720000000001em;vertical-align:-0.383108em;"></span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8746639999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose">)</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.874664em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span></span></span></span></span></p>]]></content>
      
      
      <categories>
          
          <category> 人工智能 </category>
          
          <category> 机器学习 </category>
          
          <category> 线性回归 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 线性回归 </tag>
            
            <tag> 机器学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>机器学习之特征工程-特征选择</title>
      <link href="2017/07/30/feature-selection/"/>
      <url>2017/07/30/feature-selection/</url>
      
        <content type="html"><![CDATA[<blockquote><p>特征选取（Feature Selection）技术的目标是找到原始数据维度中的一个有用的子集，再运用一些有效的算法，实现数据的聚类、分类以及检索等任务。</p></blockquote><p>根据特征选择的形式又可以将特征选择方法分为3种：</p><ul><li><strong>Filter</strong>：过滤法，按照发散性或者相关性对各个特征进行评分，设定阈值或者待选择阈值的个数，选择特征。</li><li><strong>Wrapper</strong>：包装法，根据目标函数（通常是预测效果评分），每次选择若干特征，或者排除若干特征。</li><li><strong>Embedded</strong>：嵌入法，先使用某些机器学习的算法和模型进行训练，得到各个特征的权值系数，根据系数从大到小选择特征。类似于Filter方法，但是是通过训练来确定特征的优劣。</li></ul><p>特征选择主要有两个目的：</p><ul><li>减少特征数量、降维，使模型泛化能力更强，减少过拟合；</li><li>增强对特征和特征值之间的理解</li></ul><h2 id="1-特征选择-feature_selection"><a class="markdownIt-Anchor" href="#1-特征选择-feature_selection"></a> 1、特征选择 (feature_selection)</h2><p><strong>降维</strong>是指在某些限定条件下，<strong>降低随机变量(特征)个数</strong>，得到<strong>一组“不相关”主变量</strong>的过程</p><h3 id="1-1-移除低方差的特征-removing-features-with-low-variance"><a class="markdownIt-Anchor" href="#1-1-移除低方差的特征-removing-features-with-low-variance"></a> 1. 1 移除低方差的特征 (Removing features with low variance)</h3><p>假设某特征的特征值只有0和1，并且在所有输入样本中，95%的实例的该特征取值都是1，那就可以认为这个特征作用不大。如果100%都是1，那这个特征就没意义了。<strong>当特征值都是离散型变量的时候这种方法才能用，如果是连续型变量，就需要将连续变量离散化之后才能用</strong>。而且实际当中，一般不太会有95%以上都取某个值的特征存在，所以这种方法虽然简单但是不太好用。可以把它作为特征选择的预处理，先去掉那些取值变化小的特征，然后再从接下来提到的的特征选择方法中选择合适的进行进一步的特征选择。</p><h4 id="api"><a class="markdownIt-Anchor" href="#api"></a> API</h4><ul><li>sklearn.feature_selection.VarianceThreshold(threshold = 0.0)<ul><li>删除所有低方差特征</li><li>Variance.fit_transform(X)<ul><li>X:numpy array格式的数据[n_samples,n_features]</li><li>返回值：训练集差异低于threshold的特征将被删除。默认值是保留所有非零方差特征，即删除所有样本中具有相同值的特征。</li></ul></li></ul></li></ul><p></p><p>def demo():<br />X = [[0, 0, 1], [0, 1, 0], [1, 0, 0], [0, 1, 1], [0, 1, 0], [0, 1, 1]]<br />sel = VarianceThreshold(threshold=(.8 * (1 - .8)))<br />newX = sel.fit_transform(X)<br />print(newX)</p><h3 id="2-单变量特征选择-univariate-feature-selection"><a class="markdownIt-Anchor" href="#2-单变量特征选择-univariate-feature-selection"></a> 2. 单变量特征选择 (Univariate feature selection)</h3><p><strong>单变量特征选择的原理是分别单独的计算每个变量的某个统计指标，根据该指标来判断哪些指标重要，剔除那些不重要的指标。</strong> 对于<strong>分类问题(y离散)</strong>，可采用： <em>卡方检验</em>，<em>f_classif</em>, <em>mutual_info_classif</em>，<em>互信息</em> 对于<strong>回归问题(y连续)</strong>，可采用： <em>皮尔森相关系数</em>，<em>f_regression</em>, <em>mutual_info_regression</em>，<em>最大信息系数</em></p><h4 id="api-2"><a class="markdownIt-Anchor" href="#api-2"></a> API</h4><ul><li>SelectKBest 移除得分前 k 名以外的所有特征(取top k)</li><li>SelectPercentile 移除得分在用户指定百分比以后的特征(取top k%)</li><li>对每个特征使用通用的单变量统计检验： 假正率(false positive rate) SelectFpr, 伪发现率(false discovery rate) SelectFdr, 或族系误差率 SelectFwe.</li><li>GenericUnivariateSelect 可以设置不同的策略来进行单变量特征选择。同时不同的选择策略也能够使用超参数寻优，从而让我们找到最佳的单变量特征选择策略。</li></ul><h4 id="21-卡方chi2检验"><a class="markdownIt-Anchor" href="#21-卡方chi2检验"></a> 2.1 卡方(Chi2)检验</h4><p>经典的卡方检验是检验定性自变量对定性因变量的相关性。比如，我们可以对样本进行一次chi2 测试来选择最佳的两项特征：</p><p>def chi2_demo():<br />iris = load_iris()<br />X, y = iris.data, iris.target<br />print(X.shape)<br /># 移除得分前 k 名以外的所有特征(取top k)<br />X_new = SelectKBest(chi2, k=2).fit_transform(X, y)<br />print(X_new.shape)</p><h4 id="22-pearson相关系数-pearson-correlation"><a class="markdownIt-Anchor" href="#22-pearson相关系数-pearson-correlation"></a> 2.2 Pearson相关系数 (Pearson Correlation)</h4><p>皮尔森相关系数是一种最简单的，能帮助理解特征和响应变量之间关系的方法，该方法衡量的是变量之间的线性相关性，结果的取值区间为[-1，1]，-1表示完全的负相关，+1表示完全的正相关，0表示没有线性相关。 <strong>Pearson相关系数的一个明显缺陷是，作为特征排序机制，他只对线性关系敏感。如果关系是非线性的，即便两个变量具有一一对应的关系，Pearson相关性也可能会接近0。</strong> <strong>相关系数的值介于–1与+1之间，即–1≤ r ≤+1</strong>。其性质如下：</p><ul><li><strong>当r&gt;0时，表示两变量正相关，r&lt;0时，两变量为负相关</strong></li><li>当|r|=1时，表示两变量为完全相关</li><li>当r=0时，表示两变量间无相关关系</li><li><strong>当0&lt;|r|&lt;1时，表示两变量存在一定程度的相关。且|r|越接近1，两变量间线性关系越密切；|r|越接近于0，表示两变量的线性相关越弱</strong></li><li><strong>一般可按三级划分：|r|&lt;0.4为低度相关；0.4≤|r|&lt;0.7为显著性相关；0.7≤|r|&lt;1为高度线性相关</strong></li></ul><blockquote><p>这个符号：|r|为r的绝对值， |-5| = 5</p></blockquote><h3 id="完整代码地址httpsgithubcomshadowagnoyscikit-learn"><a class="markdownIt-Anchor" href="#完整代码地址httpsgithubcomshadowagnoyscikit-learn"></a> 完整代码地址：<a href="https://github.com/shadowagnoy/Scikit-learn">https://github.com/shadowagnoy/Scikit-learn</a></h3>]]></content>
      
      
      <categories>
          
          <category> 人工智能 </category>
          
          <category> 机器学习 </category>
          
          <category> 特征工程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Scikit-learn </tag>
            
            <tag> learn </tag>
            
            <tag> Scikit </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>机器学习之特征工程-特征预处理(标准化/归一化)</title>
      <link href="2017/07/12/ml-preprocessing/"/>
      <url>2017/07/12/ml-preprocessing/</url>
      
        <content type="html"><![CDATA[<p>通常，在Data Science中，预处理数据有一个很关键的步骤就是数据的标准化。</p><h2 id="一-标准化归一化的好处"><a class="markdownIt-Anchor" href="#一-标准化归一化的好处"></a> 一、标准化/归一化的好处</h2><h3 id="11-提升模型精度"><a class="markdownIt-Anchor" href="#11-提升模型精度"></a> 1.1 提升模型精度</h3><blockquote><p>在机器学习算法的目标函数(例如SVM的RBF内核或线性模型的l1和l2正则化)，许多学习算法中目标函数的基础都是假设所有的特征都是零均值并且具有同一阶数上的方差。如果某个特征的方差比其他特征大几个数量级，那么它就会在学习算法中占据主导位置，导致学习器并不能像我们说期望的那样，从其他特征中学习。</p></blockquote><p>举一个简单的例子，在KNN中，我们需要计算待分类点与所有实例点的距离。假设每个实例点（instance）由n个features构成。如果我们选用的距离度量为欧式距离，如果数据预先没有经过归一化，那么那些绝对值大的features在欧式距离计算的时候起了决定性作用，soga。 从经验上说，归一化是让不同维度之间的特征在数值上有一定比较性，可以大大提高分类器的准确性。</p><h3 id="12-提升收敛速度"><a class="markdownIt-Anchor" href="#12-提升收敛速度"></a> 1.2 提升收敛速度</h3><p><strong>对于线性model来说</strong>，数据归一化后，最优解的寻优过程明显会变得平缓，更容易正确的收敛到最优解。</p><ul><li>对于神经网络模型，避免饱和是一个需要考虑的因素，通常参数的选择决定于input数据的大小范围。</li></ul><h2 id="二-标准化归一化方法"><a class="markdownIt-Anchor" href="#二-标准化归一化方法"></a> 二、标准化/归一化方法</h2><p>sklearn的<code>preprocessing</code>提供了可以满足需求的归一化方法：</p><h3 id="21-standardscaler标准化"><a class="markdownIt-Anchor" href="#21-standardscaler标准化"></a> 2.1 StandardScaler(标准化)</h3><p>Standardization即标准化，尽量将数据转化为均值为零，方差为一的数据，形如标准正态分布（高斯分布）。实际中我们会忽略数据的分布情况，仅仅是通过改变均值来集中数据，然后将非连续特征除以他们的标准差。sklearn中 scale函数提供了简单快速的singlearray-like数据集操作。</p><h4 id="211-标准化均值去除和按方差比例缩放standardization-or-mean-removal-and-variance-scaling"><a class="markdownIt-Anchor" href="#211-标准化均值去除和按方差比例缩放standardization-or-mean-removal-and-variance-scaling"></a> 2.1.1 标准化，均值去除和按方差比例缩放（Standardization, or mean removal and variance scaling）</h4><h4 id="212-代码"><a class="markdownIt-Anchor" href="#212-代码"></a> 2.1.2 代码</h4><p># 读取数据，选择要处理的特征<br />dating = pd.read_csv(&quot;…/…/…/data/dating.txt&quot;)</p><pre><code>data = dating\[\['milage', 'Liters', 'Consumtime'\]\]# 实例化minmaxscaler进行fit_transformstd = StandardScaler()data = std.fit_transform(data)</code></pre><p></p><h3 id="22-minmaxscaler"><a class="markdownIt-Anchor" href="#22-minmaxscaler"></a> 2.2 MinMaxScaler</h3><p><strong>将特征缩放至特定区间</strong>,将特征缩放到给定的最小值和最大值之间，或者也可以将每个特征的最大绝对值转换至单位大小。这种方法是对原始数据的线性变换，将数据归一到[0,1]中间。转换函数为: <code>x = (x-min)/(max-min)</code> 这种方法有个<strong>缺陷</strong>就是当有新数据加入时，可能导致max和min的变化，需要重新定义。</p><blockquote><p>注意最大值最小值是变化的，另外，最大值与最小值非常容易受异常点影响，<strong>所以这种方法鲁棒性较差，只适合传统精确小数据场景。</strong></p></blockquote><h4 id="221-代码"><a class="markdownIt-Anchor" href="#221-代码"></a> 2.2.1 代码</h4><p>“”&quot;<br />milage,Liters,Consumtime,target<br />40920,8.326976,0.953952,3<br />14488,7.153469,1.673904,2<br />26052,1.441871,0.805124,1<br />75136,13.147394,0.428964,1<br />对约会对象数据进行归一化处理<br />:return:<br />“”&quot;<br /># 读取数据，选择要处理的特征<br />dating = pd.read_csv(&quot;…/…/…/data/dating.txt&quot;)</p><pre><code>data = dating\[\['milage', 'Liters', 'Consumtime'\]\]# 实例化minmaxscaler进行fit_transformmm = MinMaxScaler(feature_range=(2, 3))data = mm.fit_transform(data)print(data)</code></pre><p></p><h3 id="23-robustscaler"><a class="markdownIt-Anchor" href="#23-robustscaler"></a> 2.3 RobustScaler</h3><p>如果你的数据包含<strong>许多异常值</strong>，使用均值和方差缩放可能并不是一个很好的选择。这种情况下，你可以使用 robust_scale 以及 RobustScaler 作为替代品。它们对你的数据的中心和范围使用更有鲁棒性的估计。</p><blockquote><p>This Scaler removes the median（中位数） and scales the data according to the quantile range(四分位距离，也就是说排除了outliers)</p></blockquote><h3 id="24-0-1-还是-1-1"><a class="markdownIt-Anchor" href="#24-0-1-还是-1-1"></a> 2.4 [0, 1] 还是 [-1, 1] ?</h3><p>假设我们有一个只有一个hidden layer的多层感知机（MLP）的分类问题。每个hidden unit表示一个超平面，每个超平面是一个分类边界。参数w（weight）决定超平面的方向，参数b（bias）决定超平面离原点的距离。如果b是一些小的随机参数（事实上，b确实被初始化为很小的随机参数），那么所有的超平面都几乎穿过原点。所以，如果data没有中心化在原点周围，那么这个超平面可能没有穿过这些data，也就是说，这些data都在超平面的一侧。这样的话，局部极小点（local minima）很有可能出现。 所以，在这种情况下，标准化到[-1, 1]比[0, 1]更好。</p><ol><li>在分类、聚类算法中，需要使用距离来度量相似性的时候、或者使用PCA技术进行降维的时候，StandardScaler表现更好。</li><li>在不涉及距离度量、协方差计算、数据不符合正太分布的时候，可以使用MinMaxScaler。比如图像处理中，将RGB图像转换为灰度图像后将其值限定在[0 255]的范围。</li></ol><p>原因是使用MinMaxScaler，其协方差产生了倍数值的缩放，因此这种方式无法消除量纲对方差、协方差的影响，对PCA分析影响巨大；同时，由于量纲的存在，使用不同的量纲、距离的计算结果会不同。 而在StandardScaler中，新的数据由于对方差进行了归一化，这时候每个维度的量纲其实已经等价了，每个维度都服从均值为0、方差1的正态分布，在计算距离的时候，每个维度都是去量纲化的，避免了不同量纲的选取对距离计算产生的巨大影响。</p><h3 id="25-api"><a class="markdownIt-Anchor" href="#25-api"></a> 2.5 API</h3><p>sklearn.preprocessing.MinMaxScaler (feature_range=(0,1)… )</p><ul><li>MinMaxScalar.fit_transform(X)<ul><li>X:numpy array格式的数据[n_samples,n_features]</li></ul></li><li>返回值：转换后的形状相同的array</li></ul><p>sklearn.preprocessing.StandardScaler( )</p><ul><li>处理之后每列来说所有数据都聚集在均值0附近标准差差为1</li><li>StandardScaler.fit_transform(X)<ul><li>X:numpy array格式的数据[n_samples,n_features]</li></ul></li><li>返回值：转换后的形状相同的array</li></ul><p>参考文档：<a href="https://scikit-learn.org/stable/modules/preprocessing.html#standardization-or-mean-removal-and-variance-scaling">https://scikit-learn.org/stable/modules/preprocessing.html#standardization-or-mean-removal-and-variance-scaling</a></p><h3 id="完整代码地址httpsgithubcomshadowagnoyscikit-learn"><a class="markdownIt-Anchor" href="#完整代码地址httpsgithubcomshadowagnoyscikit-learn"></a> 完整代码地址：<a href="https://github.com/shadowagnoy/Scikit-learn">https://github.com/shadowagnoy/Scikit-learn</a></h3>]]></content>
      
      
      <categories>
          
          <category> 人工智能 </category>
          
          <category> 机器学习 </category>
          
          <category> 特征工程 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>机器学习之特征工程-特征抽取</title>
      <link href="2017/06/20/feature-extraction/"/>
      <url>2017/06/20/feature-extraction/</url>
      
        <content type="html"><![CDATA[<h2 id="1-特征提取"><a class="markdownIt-Anchor" href="#1-特征提取"></a> 1、特征提取</h2><h3 id="11包括将任意数据如文本或图像转换为可用于机器学习的数字特征"><a class="markdownIt-Anchor" href="#11包括将任意数据如文本或图像转换为可用于机器学习的数字特征"></a> 1.1包括将任意数据（如文本或图像）转换为可用于机器学习的数字特征</h3><blockquote><p>注：特征值化是为了计算机更好的去理解数据</p></blockquote><ul><li>字典特征提取(特征离散化)</li><li>文本特征提取</li><li>图像特征提取（深度学习将介绍）</li></ul><h2 id="2-字典特征提取"><a class="markdownIt-Anchor" href="#2-字典特征提取"></a> 2、字典特征提取</h2><p><strong>作用：对字典数据进行特征值化将其转换为One-hot编码。 类：sklearn.feature_extraction.DicVectorizer</strong></p><ul><li>sklearn.feature_extraction.DictVectorizer(sparse=True,…)<ul><li>DictVectorizer.fit_transform(X) X:字典或者包含字典的迭代器返回值：返回sparse矩阵</li><li>DictVectorizer.inverse_transform(X) X:array数组或者sparse矩阵 返回值:转换之前数据格式</li><li>DictVectorizer.get_feature_names() 返回类别名称</li></ul></li></ul><h3 id="21代码"><a class="markdownIt-Anchor" href="#21代码"></a> 2.1代码</h3><blockquote><p>数据： [{‘city’: ‘北京’,‘temperature’:100} {‘city’: ‘上海’,‘temperature’:60} {‘city’: ‘深圳’,‘temperature’:30}]</p></blockquote><p>def dict_vec_ex():<br />“”&quot;<br />对字典数据进行特征抽取<br />:return:<br />“”&quot;<br /># 实例化dictvec，默认返回sparse 矩阵<br /># dic = DictVectorizer()<br /># 返回数组<br />“”&quot;<br />sklearn.feature_extraction.DictVectorizer(sparse=True,…)<br />DictVectorizer.fit_transform(X) X:字典或者包含字典的迭代器返回值：返回sparse矩阵<br />DictVectorizer.inverse_transform(X) X:array数组或者sparse矩阵 返回值:转换之前数据格式<br />DictVectorizer.get_feature_names() 返回类别名称<br />“”&quot;<br />dic = DictVectorizer(sparse=False)</p><pre><code># dictvec调用fit_transform# 三个样本的特征数据（字典形式）temperature_ = \[&#123;'city': '北京', 'temperature': 100&#125;, &#123;'city': '上海', 'temperature': 60&#125;,                &#123;'city': '深圳', 'temperature': 30&#125;\]data = dic.fit\_transform(temperature\_)# 打印特征抽取之后的特征结果print(dic.get\_feature\_names())# one-hot 编码：对特征当中有类别的信息做处理理———&gt;one-hot编码print(data)return None</code></pre><p>打印：</p><p>[‘city=上海’, ‘city=北京’, ‘city=深圳’, ‘temperature’]<br />[[ 0. 1. 0. 100.]<br />[ 1. 0. 0. 60.]<br />[ 0. 0. 1. 30.]]</p><h2 id="3-文本特征提取"><a class="markdownIt-Anchor" href="#3-文本特征提取"></a> 3、文本特征提取</h2><p><strong>作用：对文本数据进行特征值化</strong></p><ul><li><p><strong>sklearn.feature_extraction.text.CountVectorizer(stop_words=[])</strong></p><ul><li>返回词频矩阵</li></ul></li><li><p>CountVectorizer.fit_transform(X) X:文本或者包含文本字符串的可迭代对象 返回值：返回sparse矩阵</p></li><li><p>CountVectorizer.inverse_transform(X) X:array数组或者sparse矩阵 返回值:转换之前数据格</p></li><li><p>CountVectorizer.get_feature_names() 返回值:单词列表</p></li><li><p><strong>sklearn.feature_extraction.text.TfidfVectorizer</strong></p></li></ul><h3 id="31代码"><a class="markdownIt-Anchor" href="#31代码"></a> 3.1代码</h3><blockquote><p>数据： [“life is short,i like python”, “life is too long,i dislike python”]</p></blockquote><p>def count_vec_ex():<br />“”&quot;<br />单词列列表：将所有文章的单词统计到一个列表当中（重复的词只当做一次），<br />默认会过滤掉单个字母<br />单个中文也不行，中文要进行分词统计<br />单个字母 或者 汉字对 结果没影响  只有词语才行<br />:return:<br />“”&quot;<br /># 实例化conunt</p><pre><code>&quot;&quot;&quot;sklearn.feature\_extraction.text.CountVectorizer(stop\_words=\[\])    CountVectorizer.fit_transform(X) X:文本或者包含文本字符串的可迭代对象 返回值：返回sparse矩阵    CountVectorizer.inverse_transform(X) X:array数组或者sparse矩阵 返回值:转换之前数据格    CountVectorizer.get\_feature\_names() 返回值:单词列表    sklearn.feature_extraction.text.TfidfVectorizer:return:返回词频矩阵&quot;&quot;&quot;count = CountVectorizer()# 对两篇文章进行特征抽取，中文要分词处理（jieba 分词错误）data = count.fit_transform(\[&quot;人生 人生 苦短，我 喜 欢Python&quot;, &quot;生 活太 长 久，我不 喜欢P ython&quot;\])# 内容print(count.get\_feature\_names())# 调用fit_transform方法输入数据并转换 （注意返回格式，利用toarray()进行sparse矩阵转换array数组）print(data.toarray())# print(data)return None</code></pre><p></p><h3 id="32jieba分词处理"><a class="markdownIt-Anchor" href="#32jieba分词处理"></a> 3.2jieba分词处理</h3><ul><li>jieba.cut()<ul><li>返回词语组成的生成器</li></ul></li></ul><p>需要安装下jieba库</p><pre><code>pip3 install jieba</code></pre><p>分析</p><ul><li>准备句子，利用jieba.cut进行分词</li><li>实例化CountVectorizer</li><li>将分词结果变成字符串当作fit_transform的输入值</li></ul><p>def cutword():<br />“”&quot;<br />进行分词处理<br />:return:<br />“”&quot;<br />c1 = jieba.cut(“今天很残酷，明天更残酷，后天很美好，但绝对大部分是死在明天晚上，所以每个人不要放弃今天。”)<br />c2 = jieba.cut(“我们看到的从很远星系来的光是在几百万年之前发出的，这样当我们看到宇宙时，我们是在看它的过去。”)<br />c3 = jieba.cut(“如果只用一种方式了解某样事物，你就不会真正了解它。了解事物真正含义的秘密取决于如何将其与我们所了解的事物相联系。”)</p><pre><code># 将这三个结果，转换成列表，变成以空格隔开的字符串content1 = ' '.join(list(c1))content2 = ' '.join(list(c2))content3 = ' '.join(list(c3))return content1, content2, content3</code></pre><p>def chinesevec():</p><pre><code># 实例化conuntcount = CountVectorizer(stop_words=\['不会', '如果'\])# 进行三句话的分词content1, content2, content3 = cutword()# 对两篇文章进行特征抽取data = count.fit_transform(\[content1, content2, content3\])# 内容print(count.get\_feature\_names())print(data.toarray())# print(data)return None</code></pre><h3 id="35-tf-idf文本特征提取"><a class="markdownIt-Anchor" href="#35-tf-idf文本特征提取"></a> 3.5 Tf-idf文本特征提取</h3><ul><li>TF-IDF的主要思想是：如果<strong>某个词或短语在一篇文章中出现的概率高，并且在其他文章中很少出现</strong>，则认为此词或者短语具有很好的类别区分能力，适合用来分类。</li><li><strong>TF-IDF作用：用以评估一字词对于一个文件集或一个语料库中的其中一份文件的重要程度。</strong></li></ul><h4 id="351-公式"><a class="markdownIt-Anchor" href="#351-公式"></a> 3.5.1 公式</h4><ul><li>词频（term frequency，tf）指的是某一个给定的词语在该文件中出现的频率</li><li>逆向文档频率（inverse document frequency，idf）是一个词语普遍重要性的度量。某一特定词语的idf，可以<strong>由总文件数目除以包含该词语之文件的数目，再将得到的商取以10为底的对数得到</strong></li></ul><p><img src="http://www.jsledd.cn/wp-content/uploads/2019/04/tfidf%E5%85%AC%E5%BC%8F.png" alt="" /> 最终得出结果可以理解为重要程度。</p><blockquote><p>注：假如一篇文件的总词语数是100个，而词语&quot;非常&quot;出现了5次，那么&quot;非常&quot;一词在该文件中的词频就是5/100=0.05。而计算文件频率（IDF）的方法是以文件集的文件总数，除以出现&quot;非常&quot;一词的文件数。所以，如果&quot;非常&quot;一词在1,000份文件出现过，而文件总数是10,000,000份的话，其逆向文件频率就是lg（10,000,000 / 1,0000）=3。最后&quot;非常&quot;对于这篇文档的tf-idf的分数为0.05 * 3=0.15</p></blockquote><ul><li>TF-IDF的主要思想是：如果某个词或短语在一篇文章中出现的概率高，并且在其他文章中很少出现，则认为此词或者短语具有很好的类别区分能力，适合用来分类。</li><li>TF-IDF作用：用以评估一字词对于一个文件集或一个语料库中的其中一份文件的重要程度。</li></ul><h3 id="github代码地址httpsgithubcomshadowagnoyscikit-learn"><a class="markdownIt-Anchor" href="#github代码地址httpsgithubcomshadowagnoyscikit-learn"></a> github代码地址：<a href="https://github.com/shadowagnoy/Scikit-learn">https://github.com/shadowagnoy/Scikit-learn</a></h3>]]></content>
      
      
      <categories>
          
          <category> 人工智能 </category>
          
          <category> 机器学习 </category>
          
          <category> 特征工程 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>机器学习之特征工程-特征工程介绍</title>
      <link href="2017/05/25/feature-engineering/"/>
      <url>2017/05/25/feature-engineering/</url>
      
        <content type="html"><![CDATA[<h2 id="1-为什么需要特征工程feature-engineering"><a class="markdownIt-Anchor" href="#1-为什么需要特征工程feature-engineering"></a> 1、为什么需要特征工程(Feature Engineering)</h2><blockquote><p>机器学习领域的大神Andrew Ng(吴恩达)老师说“Coming up with features is difficult, time-consuming, requires expert knowledge. “Applied machine learning” is basically feature engineering. ” 注：业界广泛流传：数据和特征决定了机器学习的上限，而模型和算法只是逼近这个上限而已。</p></blockquote><h2 id="2-什么是特征工程"><a class="markdownIt-Anchor" href="#2-什么是特征工程"></a> 2、什么是特征工程</h2><p>特征工程是使用<strong>专业背景知识和技巧处理数据</strong>，<strong>使得特征能在机器学习算法上发挥更好的作用的过程</strong>。<strong>从而提高了对未知数据的预测准确性。</strong></p><blockquote><p>对于这个概念，不用过多理解，是一个比较模糊广泛的概念</p></blockquote><ul><li>意义：直接影响到模型的预测结果</li></ul><h3 id="特征工程包含内容"><a class="markdownIt-Anchor" href="#特征工程包含内容"></a> 特征工程包含内容</h3><ul><li>特征抽取</li><li>特征预处理</li><li>特征选择</li><li>特征降维</li></ul><h2 id="3-特征工程所需工具"><a class="markdownIt-Anchor" href="#3-特征工程所需工具"></a> 3、特征工程所需工具</h2><h3 id="31scikit-learn工具介绍"><a class="markdownIt-Anchor" href="#31scikit-learn工具介绍"></a> 3.1Scikit-learn工具介绍</h3><ul><li>python语言的机器学习工具。</li><li>scikit-learn包括许多致命的机器学习算法的实现。</li><li>scikit-learn文档完善，容易上手，丰富的API。</li></ul><h2 id="4-数据集"><a class="markdownIt-Anchor" href="#4-数据集"></a> 4、数据集</h2><p>数据集是特征抽取的源数据。常用数据集的结构组成：特征值+目标值。</p><ul><li>kaggle网址：<a href="http://www.kaggle.com/datasets">http://www.kaggle.com/datasets</a></li><li>UCI数据集：<a href="http://archive.ics.uci.edu/ml">http://archive.ics.uci.edu/ml</a></li><li>scikit-learn网址：<a href="http://scikit-learn.org/stable/datasets/index.html#datasets">http://scikit-learn.org/stable/datasets/index.html#datasets</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 人工智能 </category>
          
          <category> 机器学习 </category>
          
          <category> 特征工程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> feature-engineering </tag>
            
            <tag> Scikit-learn </tag>
            
            <tag> sklearn </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python Pandas 数据分析实例1</title>
      <link href="2017/04/25/python-pandas-dataanalysis1/"/>
      <url>2017/04/25/python-pandas-dataanalysis1/</url>
      
        <content type="html"><![CDATA[<h1 id="usagov"><a class="markdownIt-Anchor" href="#usagov"></a> <a href="http://USA.gov">USA.gov</a> Data from Bitly（USA.gov数据集）</h1><blockquote><p>2011年，短链接服务（URL shortening service）商<a href="https://bitly.com/">Bitly</a>和美国政府网站<a href="https://www.usa.gov/">USA.gov</a>合作，提供了一份从用户中收集来的匿名数据，这些用户使用了结尾为.gov或.mil的短链接。在2011年，这些数据的动态信息每小时都会保存一次，并可供下载。不过在2017年，这项服务被停掉了。</p></blockquote><h3 id="代码实例"><a class="markdownIt-Anchor" href="#代码实例"></a> 代码实例</h3><p>import json<br />from collections import defaultdict<br />from collections import Counter<br />import pandas as pd<br />import numpy as np</p><p>def get_counts2(sequence):  # 优化方法<br />counts = defaultdict(int)  # 所有的值均会被初始化为0<br />for x in sequence:<br />counts[x] += 1<br />return counts</p><p>def get_counts(sequence):<br />counts = {}<br />for x in sequence:<br />if x in counts:<br />counts[x] += 1<br />else:<br />counts[x] = 1<br />return counts</p><p>def top_counts(records, n=10):<br />time_zones = [rec[‘tz’] for rec in records if ‘tz’ in rec]<br />count_dict = get_counts2(time_zones)<br />value_key_pairs = [(count, tz) for tz, count in count_dict.items()]<br />value_key_pairs.sort()<br />return value_key_pairs[-n:]</p><p>def top_counts2(records, n=10):  # 优化方法<br />time_zones = [rec[‘tz’] for rec in records if ‘tz’ in rec]<br />return Counter(time_zones).most_common(n)</p><p>def top_counts3(records, n=10):  # pandas<br />frame = pd.DataFrame(records)<br />tz_counts = frame[‘tz’].value_counts()<br />return tz_counts[:n]</p><p>path = ‘…/datasets/bitly_usagov/example.txt’<br />records = [json.loads(line) for line in open(path)]<br />print(top_counts(records, 10))<br />print(top_counts2(records, 10))<br />print(top_counts3(records, 10))</p><p></p><h3 id="代码-github地址httpsgithubcomshadowagnoypython_learn"><a class="markdownIt-Anchor" href="#代码-github地址httpsgithubcomshadowagnoypython_learn"></a> 代码 Github地址:<a href="https://github.com/shadowagnoy/python_learn/tree/master/cn/jsledd/pandas/dataanalysis1.py">https://github.com/shadowagnoy/python_learn/</a></h3><h3 id="参考文档httpsgithubcomwesmpydata-book"><a class="markdownIt-Anchor" href="#参考文档httpsgithubcomwesmpydata-book"></a> 参考文档：<a href="https://github.com/wesm/pydata-book">https://github.com/wesm/pydata-book</a></h3>]]></content>
      
      
      <categories>
          
          <category> 开发语言与技巧 </category>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> pandas </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python Pandas 分组连接</title>
      <link href="2017/03/24/python-pandas-group-concat/"/>
      <url>2017/03/24/python-pandas-group-concat/</url>
      
        <content type="html"><![CDATA[<p>任何分组(<em>groupby</em>)操作都涉及原始对象的以下操作之一。它们是 -</p><ul><li>分割对象</li><li>应用一个函数</li><li>结合的结果</li></ul><p>在许多情况下，我们将数据分成多个集合，并在每个子集上应用一些函数。在应用函数中，可以执行以下操作 -</p><ul><li><em>聚合</em> - 计算汇总统计</li><li><em>转换</em> - 执行一些特定于组的操作</li><li><em>过滤</em> - 在某些情况下丢弃数据</li></ul><h2 id="将数据拆分成组"><a class="markdownIt-Anchor" href="#将数据拆分成组"></a> 将数据拆分成组</h2><p>Pandas对象可以分成任何对象。有多种方式来拆分对象，如 -</p><ul><li><em>obj.groupby(‘key’)</em></li><li><em>obj.groupby([‘key1’,’key2’])</em></li><li><em>obj.groupby(key,axis=1)</em></li></ul><h2 id="聚合"><a class="markdownIt-Anchor" href="#聚合"></a> 聚合</h2><p>聚合函数为每个组返回单个聚合值。当创建了分组(<em>group by</em>)对象，就可以对分组数据执行多个聚合操作。 一个比较常用的是通过聚合或等效的<code>agg</code>方法聚合</p><h2 id="一次应用多个聚合函数"><a class="markdownIt-Anchor" href="#一次应用多个聚合函数"></a> 一次应用多个聚合函数</h2><p>通过分组系列，还可以传递函数的列表或字典来进行聚合，并生成<code>DataFrame</code>作为输出 -</p><h2 id="转换"><a class="markdownIt-Anchor" href="#转换"></a> 转换</h2><p>分组或列上的转换返回索引大小与被分组的索引相同的对象。因此，转换应该返回与组块大小相同的结果。</p><h2 id="过滤"><a class="markdownIt-Anchor" href="#过滤"></a> 过滤</h2><p>过滤根据定义的标准过滤数据并返回数据的子集。<code>filter()</code>函数用于过滤数据</p><blockquote><p>Pandas具有功能全面的高性能内存中连接操作，与SQL等关系数据库非常相似。 Pandas提供了一个单独的<code>merge()</code>函数，作为DataFrame对象之间所有标准数据库连接操作的入口 - <code>pd.merge(left, right, how='inner', on=None, left_on=None, right_on=None, left_index=False, right_index=False, sort=True)</code></p></blockquote><p>Python 连接</p><p>在这里，有以下几个参数可以使用 -</p><ul><li><em>left</em> - 一个DataFrame对象。</li><li><em>right</em> - 另一个DataFrame对象。</li><li><em>on</em> - 列(名称)连接，必须在左和右DataFrame对象中存在(找到)。</li><li><em>left_on</em> - 左侧DataFrame中的列用作键，可以是列名或长度等于DataFrame长度的数组。</li><li><em>right_on</em> - 来自右的DataFrame的列作为键，可以是列名或长度等于DataFrame长度的数组。</li><li><em>left_index</em> - 如果为<code>True</code>，则使用左侧DataFrame中的索引(行标签)作为其连接键。 在具有MultiIndex(分层)的DataFrame的情况下，级别的数量必须与来自右DataFrame的连接键的数量相匹配。</li><li><em>right_index</em> - 与右DataFrame的_left_index_具有相同的用法。</li><li><em>how</em> - 它是_left_, <em>right</em>, <em>outer_以及_inner_之中的一个，默认为内_inner</em>。 下面将介绍每种方法的用法。</li><li><em>sort</em> - 按照字典顺序通过连接键对结果DataFrame进行排序。默认为<code>True</code>，设置为<code>False</code>时，在很多情况下大大提高性能。</li></ul><h2 id="合并使用how的参数"><a class="markdownIt-Anchor" href="#合并使用how的参数"></a> 合并使用“how”的参数</h2><p>如何合并参数指定如何确定哪些键将被包含在结果表中。如果组合键没有出现在左侧或右侧表中，则连接表中的值将为<code>NA</code>。 这里是<code>how</code>选项和SQL等效名称的总结 -</p><p>合并方法</p><p>SQL等效</p><p>描述</p><p><code>left</code></p><p><code>LEFT OUTER JOIN</code></p><p>使用左侧对象的键</p><p><code>right</code></p><p><code>RIGHT OUTER JOIN</code></p><p>使用右侧对象的键</p><p><code>outer</code></p><p><code>FULL OUTER JOIN</code></p><p>使用键的联合</p><p><code>inner</code></p><p><code>INNER JOIN</code></p><p>使用键的交集</p><blockquote><p><strong>Pandas</strong>提供了各种工具(功能)，可以轻松地将<code>Series</code>，<code>DataFrame</code>和<code>Panel</code>对象组合在一起 pd.concat(objs,axis=0,join=‘outer’,join_axes=None, ignore_index=False)</p></blockquote><p>其中，</p><ul><li><em>objs</em> - 这是Series，DataFrame或Panel对象的序列或映射。</li><li><em>axis</em> - <code>&#123;0，1，...&#125;</code>，默认为<code>0</code>，这是连接的轴。</li><li><em>join</em> - <code>&#123;'inner', 'outer'&#125;</code>，默认<code>inner</code>。如何处理其他轴上的索引。联合的外部和交叉的内部。</li><li><em>ignore_index</em> − 布尔值，默认为<code>False</code>。如果指定为<code>True</code>，则不要使用连接轴上的索引值。结果轴将被标记为：<code>0，...，n-1</code>。</li><li><em>join_axes</em> - 这是Index对象的列表。用于其他<code>(n-1)</code>轴的特定索引，而不是执行内部/外部集逻辑。</li></ul><h3 id="代码举例"><a class="markdownIt-Anchor" href="#代码举例"></a> 代码举例</h3><p>import pandas as pd<br />import numpy as np</p><p>ipl_data = {‘Team’: [‘Riders’, ‘Riders’, ‘Devils’, ‘Devils’, ‘Kings’,<br />‘kings’, ‘Kings’, ‘Kings’, ‘Riders’, ‘Royals’, ‘Royals’, ‘Riders’],<br />‘Rank’: [1, 2, 2, 3, 3, 4, 1, 1, 2, 4, 1, 2],<br />‘Year’: [2014, 2015, 2014, 2015, 2014, 2015, 2016, 2017, 2016, 2014, 2015, 2017],<br />‘Points’: [876, 789, 863, 673, 741, 812, 756, 788, 694, 701, 804, 690]}<br />df = pd.DataFrame(ipl_data)<br />print(df)<br />print(df.groupby(‘Team’))<br />print(df.groupby(‘Team’).groups)  # 查看分组<br />print(df.groupby([‘Team’, ‘Year’]).groups)  # 多列分组<br />grouped = df.groupby(‘Year’)<br />for name, group in grouped:  # 遍历分组<br />print(name)<br />print(group)<br />print(grouped.get_group(2014))  # 选择分组<br />print(grouped[‘Points’].agg(np.mean))<br />print(grouped.agg(np.size))<br />print(&quot;-------------------------------&quot;)<br />grouped = df.groupby(‘Team’)<br />print(grouped[‘Points’].agg([np.sum, np.mean, np.std]))<br />score = lambda x: (x - x.mean()) / x.std() * 10<br />print(grouped.transform(score))<br />print(grouped.filter(lambda x: len(x) &gt;= 3))<br />print(&quot;-------------------------------------&quot;)<br />left = pd.DataFrame({<br />‘id’: [1, 2, 3, 4, 5],<br />‘Name’: [‘Alex’, ‘Amy’, ‘Allen’, ‘Alice’, ‘Ayoung’],<br />‘subject_id’: [‘sub1’, ‘sub2’, ‘sub4’, ‘sub6’, ‘sub5’]})<br />right = pd.DataFrame(<br />{‘id’: [1, 2, 3, 4, 5],<br />‘Name’: [‘Billy’, ‘Brian’, ‘Bran’, ‘Bryce’, ‘Betty’],<br />‘subject_id’: [‘sub2’, ‘sub4’, ‘sub3’, ‘sub6’, ‘sub5’]})<br />print(left)<br />print(&quot;========================================&quot;)<br />print(right)<br />print(pd.merge(left, right, on=‘id’))  # 在一个键上合并两个数据帧<br />print(pd.merge(left, right, on=[‘id’, ‘subject_id’]))  # 合并多个键上的两个数据框<br />‘’’<br />leftLEFT OUTER JOIN使用左侧对象的键<br />rightRIGHT OUTER JOIN使用右侧对象的键<br />outerFULL OUTER JOIN使用键的联合<br />innerINNER JOIN使用键的交集<br />‘’’<br />print(pd.merge(left, right, on=‘subject_id’, how=‘left’))  # Left Join<br />print(pd.merge(left, right, on=‘subject_id’, how=‘right’))  # Right Join<br />print(pd.merge(left, right, how=‘outer’, on=‘subject_id’))  # Outer Join<br />pd.merge(left, right, on=‘subject_id’, how=‘inner’)  # Inner Join<br />print(&quot;-----------------------------------------&quot;)<br />print(pd.concat([left, right]))<br />print(pd.concat([left, right], keys=[‘x’, ‘y’]))<br />rs = pd.concat([left, right],keys=[‘x’,‘y’],ignore_index=True)<br />print(pd.concat([left, right],axis=1))<br />print(left.append(right))</p><h3 id="代码-github地址httpsgithubcomshadowagnoypython_learn"><a class="markdownIt-Anchor" href="#代码-github地址httpsgithubcomshadowagnoypython_learn"></a> 代码 Github地址:<a href="https://github.com/shadowagnoy/python_learn/tree/master/cn/jsledd/pandas/group_join_concat.py">https://github.com/shadowagnoy/python_learn/</a></h3>]]></content>
      
      
      <categories>
          
          <category> 开发语言与技巧 </category>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> pandas </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python Pandas 对缺失数据的处理</title>
      <link href="2017/03/23/python-pandas-miss/"/>
      <url>2017/03/23/python-pandas-miss/</url>
      
        <content type="html"><![CDATA[<p>数据丢失(缺失)在现实生活中总是一个问题。 机器学习和数据挖掘等领域由于数据缺失导致的数据质量差，在模型预测的准确性上面临着严重的问题。 在这些领域，缺失值处理是使模型更加准确和有效的重点。 现在来看看如何处理使用_Pandas_的缺失值(如<code>NA</code>或<code>NaN</code>)。</p><h2 id="检查缺失值"><a class="markdownIt-Anchor" href="#检查缺失值"></a> 检查缺失值</h2><p>为了更容易地检测缺失值(以及跨越不同的数组<code>dtype</code>)，Pandas提供了<code>isnull()</code>和<code>notnull()</code>函数，它们也是Series和DataFrame对象的方法 -</p><h4 id="缺少数据的计算"><a class="markdownIt-Anchor" href="#缺少数据的计算"></a> 缺少数据的计算</h4><ul><li>在求和数据时，<code>NA</code>将被视为<code>0</code></li><li>如果数据全部是<code>NA</code>，那么结果将是<code>NA</code></li></ul><h2 id="清理填充缺少数据"><a class="markdownIt-Anchor" href="#清理填充缺少数据"></a> 清理/填充缺少数据</h2><p>_Pandas_提供了各种方法来清除缺失的值。<code>fillna()</code>函数可以通过几种方法用非空数据“填充”<code>NA</code>值，在下面的章节中将学习和使用。</p><h2 id="用标量值替换nan"><a class="markdownIt-Anchor" href="#用标量值替换nan"></a> 用标量值替换NaN</h2><p>以下程序显示如何用<code>0</code>替换<code>NaN</code>。</p><h2 id="填写na前进和后退"><a class="markdownIt-Anchor" href="#填写na前进和后退"></a> 填写NA前进和后退</h2><p>使用重构索引章节讨论的填充概念，来填补缺失的值。</p><h2 id="丢失缺少的值"><a class="markdownIt-Anchor" href="#丢失缺少的值"></a> 丢失缺少的值</h2><p>如果只想排除缺少的值，则使用<code>dropna</code>函数和<code>axis</code>参数。 默认情况下，<code>axis = 0</code>，即在行上应用，这意味着如果行内的任何值是<code>NA</code>，那么整个行被排除。</p><h2 id="替换丢失或通用值"><a class="markdownIt-Anchor" href="#替换丢失或通用值"></a> 替换丢失(或)通用值</h2><p>很多时候，必须用一些具体的值取代一个通用的值。可以通过应用替换方法来实现这一点。 用标量值替换<code>NA</code>是<code>fillna()</code>函数的等效行为</p><h3 id="代码举例"><a class="markdownIt-Anchor" href="#代码举例"></a> 代码举例</h3><p>import pandas as pd<br />import numpy as np</p><p>df = pd.DataFrame(np.random.randn(5, 3), index=[‘a’, ‘c’, ‘e’, ‘f’,<br />‘h’], columns=[‘one’, ‘two’, ‘three’])</p><p>df = df.reindex([‘a’, ‘b’, ‘c’, ‘d’, ‘e’, ‘f’, ‘g’, ‘h’])</p><p>print(df[‘one’].isnull())<br />print(df[‘one’].notnull())<br />print(df[‘one’].sum())<br />print(df.fillna(0))<br />print(df.fillna(method=‘pad’))  # pad/fill填充方法向前 bfill/backfill填充方法向后<br />print(df.dropna())<br />print(df.dropna(axis=1))</p><h3 id="代码-github地址httpsgithubcomshadowagnoypython_learn"><a class="markdownIt-Anchor" href="#代码-github地址httpsgithubcomshadowagnoypython_learn"></a> 代码 Github地址:<a href="https://github.com/shadowagnoy/python_learn/tree/master/cn/jsledd/pandas/miss_data.py">https://github.com/shadowagnoy/python_learn/</a></h3>]]></content>
      
      
      <categories>
          
          <category> 开发语言与技巧 </category>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> pandas </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python Pandas 统计聚合函数</title>
      <link href="2017/03/22/python-pandas-stat-agg/"/>
      <url>2017/03/22/python-pandas-stat-agg/</url>
      
        <content type="html"><![CDATA[<p>统计方法有助于理解和分析数据的行为。现在我们将学习一些统计函数，可以将这些函数应用到_Pandas_的对象上。</p><h2 id="pct_change函数"><a class="markdownIt-Anchor" href="#pct_change函数"></a> pct_change()函数</h2><p>系列，DatFrames和Panel都有<code>pct_change()</code>函数。此函数将每个元素与其前一个元素进行比较，并计算变化百分比。 默认情况下，<code>pct_change()</code>对列进行操作; 如果想应用到行上，那么可使用<code>axis = 1</code>参数。</p><h2 id="协方差"><a class="markdownIt-Anchor" href="#协方差"></a> 协方差</h2><p>协方差适用于系列数据。Series对象有一个方法<code>cov</code>用来计算序列对象之间的协方差。<code>NA</code>将被自动排除。</p><blockquote><p><strong>协方差</strong>（Covariance）在<a href="https://baike.baidu.com/item/%E6%A6%82%E7%8E%87%E8%AE%BA/829122">概率论</a>和<a href="https://baike.baidu.com/item/%E7%BB%9F%E8%AE%A1%E5%AD%A6/1175">统计学</a>中用于衡量两个变量的总体<a href="https://baike.baidu.com/item/%E8%AF%AF%E5%B7%AE/738024">误差</a>。而<a href="https://baike.baidu.com/item/%E6%96%B9%E5%B7%AE/3108412">方差</a>是协方差的一种特殊情况，即当两个变量是相同的情况。</p><p>协方差表示的是两个变量的总体的<a href="https://baike.baidu.com/item/%E8%AF%AF%E5%B7%AE/738024">误差</a>，这与只表示一个变量误差的<a href="https://baike.baidu.com/item/%E6%96%B9%E5%B7%AE/3108412">方差</a>不同。 如果两个<a href="https://baike.baidu.com/item/%E5%8F%98%E9%87%8F/5271">变量</a>的变化趋势一致，也就是说如果其中一个大于自身的期望值，另外一个也大于自身的期望值，那么两个变量之间的协方差就是正值。 如果两个变量的变化趋势相反，即其中一个大于自身的期望值，另外一个却小于自身的期望值，那么两个变量之间的协方差就是负值。</p></blockquote><h2 id="相关性"><a class="markdownIt-Anchor" href="#相关性"></a> 相关性</h2><p>相关性显示了任何两个数值(系列)之间的线性关系。有多种方法来计算<code>pearson</code>(默认)，<code>spearman</code>和<code>kendall</code>之间的相关性。</p><h2 id="数据排名"><a class="markdownIt-Anchor" href="#数据排名"></a> 数据排名</h2><p>数据排名为元素数组中的每个元素生成排名。在关系的情况下，分配平均等级。 <code>Rank</code>可选地使用一个默认为<code>true</code>的升序参数; 当错误时，数据被反向排序，也就是较大的值被分配较小的排序。 <code>Rank</code>支持不同的<code>tie-breaking</code>方法，用方法参数指定 -</p><ul><li><code>average</code> - 并列组平均排序等级</li><li><code>min</code> - 组中最低的排序等级</li><li><code>max</code> - 组中最高的排序等级</li><li><code>first</code> - 按照它们出现在数组中的顺序分配队列</li></ul><h3 id="代码举例"><a class="markdownIt-Anchor" href="#代码举例"></a> 代码举例</h3><p>import pandas as pd<br />import numpy as np</p><p>s = pd.Series([1, 2, 3, 4, 5, 4])<br />print(s.pct_change())</p><p>df = pd.DataFrame(np.random.randn(5, 2))<br />print(df.pct_change())  # 此函数将每个元素与其前一个元素进行比较，并计算变化百分比<br />s1 = pd.Series(np.random.randn(10))<br />s2 = pd.Series(np.random.randn(10))<br />print(s1.cov(s2))  # 协方差适用于系列数据。Series对象有一个方法cov用来计算序列对象之间的协方差。NA将被自动排除。<br />frame = pd.DataFrame(np.random.randn(10, 5), columns=[‘a’, ‘b’, ‘c’, ‘d’, ‘e’])<br />print(frame[‘a’].cov(frame[‘b’]))<br />print(frame.cov())  # 协方差方法计算所有列之间的协方差(cov)值<br />print(frame[‘a’].corr(frame[‘b’]))<br />print(frame.corr())  # pearson(默认)，spearman和kendall之间的相关性。<br />s = pd.Series(np.random.np.random.randn(5), index=list(‘abcde’))<br />s[‘d’] = s[‘b’]<br />‘’’<br />average - 并列组平均排序等级<br />min - 组中最低的排序等级<br />max - 组中最高的排序等级<br />first - 按照它们出现在数组中的顺序分配队列<br />‘’’<br />print(s.rank())  # 数据排名为元素数组中的每个元素生成排名<br />df = pd.DataFrame(np.random.randn(10, 4),<br />index=pd.date_range(‘1/1/2016’, periods=10),<br />columns=[‘A’, ‘B’, ‘C’, ‘D’])<br />print(&quot;----------------------------------------------------&quot;)<br />print(df.rolling(window=3).mean())  # 由于窗口大小为3(window)，前两个元素有空值，第三个元素的值将是n，n-1和n-2元素的平均值。这样也可以应用上面提到的各种函数了。<br />print(df.expanding(min_periods=3).mean())<br />print(df.ewm(com=0.5).mean())  # 加权<br />print(&quot;----------------------------------------------------&quot;)</p><p>print(df)<br />r = df.rolling(window=3, min_periods=1)<br />print®<br />print(r.aggregate(np.sum))  # 应用于全体数据<br />print(r[‘A’].aggregate(np.sum))  # 应用于单列<br />print(r[[‘A’, ‘B’]].aggregate(np.sum))  # 应用于多列<br />print(r[‘A’].aggregate([np.sum, np.mean]))  # 单列多函数<br />print(r[[‘A’, ‘B’]].aggregate([np.sum, np.mean]))  # 多列多函数<br />print(r.aggregate({‘A’: np.sum, ‘B’: np.mean}))  # 将不同的函数应用于DataFrame的不同列</p><h3 id="代码-github地址httpsgithubcomshadowagnoypython_learn"><a class="markdownIt-Anchor" href="#代码-github地址httpsgithubcomshadowagnoypython_learn"></a> 代码 Github地址:<a href="https://github.com/shadowagnoy/python_learn/tree/master/cn/jsledd/pandas/stat_agg_functions.py">https://github.com/shadowagnoy/python_learn/</a></h3>]]></content>
      
      
      <categories>
          
          <category> 开发语言与技巧 </category>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> pandas </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python Pandas索引和选择数据</title>
      <link href="2017/03/21/python-pandas-index-select/"/>
      <url>2017/03/21/python-pandas-index-select/</url>
      
        <content type="html"><![CDATA[<p>Python和NumPy索引运算符<code>&quot;[]&quot;</code>和属性运算符<code>&quot;.&quot;</code>。 可以在广泛的用例中快速轻松地访问_Pandas_数据结构。然而，由于要访问的数据类型不是预先知道的，所以直接使用标准运算符具有一些优化限制。对于生产环境的代码，我们建议利用本章介绍的优化_Pandas_数据访问方法。 _Pandas_现在支持三种类型的多轴索引; 这三种类型在下表中提到 -</p><p>编号</p><p>索引</p><p>描述</p><p>1</p><p><code>.loc()</code></p><p>基于标签</p><p>2</p><p><code>.iloc()</code></p><p>基于整数</p><p>3</p><p><code>.ix()</code></p><p>基于标签和整数</p><h2 id="loc"><a class="markdownIt-Anchor" href="#loc"></a> .loc()</h2><p>_Pandas_提供了各种方法来完成基于标签的索引。 切片时，也包括起始边界。整数是有效的标签，但它们是指标签而不是位置。 <code>.loc()</code>具有多种访问方式，如 -</p><ul><li>单个标量标签</li><li>标签列表</li><li>切片对象</li><li>一个布尔数组</li></ul><p><code>loc</code>需要两个单/列表/范围运算符，用<code>&quot;,&quot;</code>分隔。第一个表示行，第二个表示列。</p><h2 id="iloc"><a class="markdownIt-Anchor" href="#iloc"></a> .iloc()</h2><p>_Pandas_提供了各种方法，以获得纯整数索引。像python和numpy一样，第一个位置是基于<code>0</code>的索引。 各种访问方式如下 -</p><ul><li>整数</li><li>整数列表</li><li>系列值</li></ul><h2 id="ix"><a class="markdownIt-Anchor" href="#ix"></a> .ix()</h2><p>除了基于纯标签和整数之外，_Pandas_还提供了一种使用<code>.ix()</code>运算符进行选择和子集化对象的混合方法。</p><h2 id="使用符号"><a class="markdownIt-Anchor" href="#使用符号"></a> 使用符号</h2><p>使用多轴索引从Pandas对象获取值可使用以下符号 -</p><p>对象</p><p>索引</p><p>描述</p><p>Series</p><p><code>s.loc[indexer]</code></p><p>标量值</p><p>DataFrame</p><p><code>df.loc[row_index,col_index]</code></p><p>标量对象</p><p>Panel</p><p><code>p.loc[item_index,major_index, minor_index]</code></p><p>p.loc[item_index,major_index, minor_index]</p><blockquote><p>注意 - <code>.iloc()</code>和<code>.ix()</code>应用相同的索引选项和返回值。</p></blockquote><p>现在来看看如何在DataFrame对象上执行每个操作。这里使用基本索引运算符<code>[]</code> -</p><h2 id="属性访问"><a class="markdownIt-Anchor" href="#属性访问"></a> 属性访问</h2><p>可以使用属性运算符<code>.</code>来选择列。</p><h3 id="代码举例"><a class="markdownIt-Anchor" href="#代码举例"></a> 代码举例</h3><p>import pandas as pd<br />import numpy as np</p><p>df = pd.DataFrame(np.random.randn(8, 4),<br />index=[‘a’, ‘b’, ‘c’, ‘d’, ‘e’, ‘f’, ‘g’, ‘h’], columns=[‘A’, ‘B’, ‘C’, ‘D’])</p><p>print(df.loc[:, ‘A’])  # loc需要两个单/列表/范围运算符，用&quot;,“分隔。第一个表示行，第二个表示列<br />print(df.loc[:, [‘A’, ‘C’]])<br />print(df.loc[[‘a’, ‘b’, ‘f’, ‘h’], [‘A’, ‘C’]])<br />print(df.loc[‘a’:‘h’])<br />print(df.loc[‘a’] &gt; 0)<br />print(”-------------------------------------&quot;)<br />print(df.iloc[:4])  # 第一个位置是基于0的索引<br />print(df.iloc[1:5, 2:4])<br />print(df.iloc[[1, 3, 5], [1, 3]])<br />print(df.iloc[1:3, :])<br />print(df.ix[:4])  # 选择和子集化对象的混合方法<br />print(df.ix[:, ‘A’])<br />print(df[[‘A’, ‘B’]])<br />print(df[2:2])<br />print(df.A)  # 可以使用属性运算符.来选择列</p><h3 id="代码-github地址httpsgithubcomshadowagnoypython_learn"><a class="markdownIt-Anchor" href="#代码-github地址httpsgithubcomshadowagnoypython_learn"></a> 代码 Github地址:<a href="https://github.com/shadowagnoy/python_learn/tree/master/cn/jsledd/pandas/selecting_data.py">https://github.com/shadowagnoy/python_learn/</a></h3>]]></content>
      
      
      <categories>
          
          <category> 开发语言与技巧 </category>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> pandas </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python Pandas选项和自定义</title>
      <link href="2017/03/20/python-pandas-customization/"/>
      <url>2017/03/20/python-pandas-customization/</url>
      
        <content type="html"><![CDATA[<p>Pandas提供API来自定义其行为的某些方面，大多使用来显示。 API由五个相关函数组成。它们分别是 -</p><ul><li><em>get_option()</em></li><li><em>set_option()</em></li><li><em>reset_option()</em></li><li><em>describe_option()</em></li><li><em>option_context()</em></li></ul><p>现在来了解函数是如何工作的。</p><h2 id="get_optionparam"><a class="markdownIt-Anchor" href="#get_optionparam"></a> get_option(param)</h2><p><code>get_option(param)</code>需要一个参数，并返回下面输出中给出的值 - <code>get_option</code>需要一个参数，并返回下面输出中给出的值 - <strong>display.max_rows</strong> 显示默认值。解释器读取此值并显示此值作为显示上限的行。 <strong>display.max_columns</strong> 显示默认值，解释器读取此值并显示此值作为显示上限的列。</p><h2 id="set_optionparamvalue"><a class="markdownIt-Anchor" href="#set_optionparamvalue"></a> set_option(param,value)</h2><p><code>set_option</code>需要两个参数，并将该值设置为指定的参数值</p><h2 id="reset_optionparam"><a class="markdownIt-Anchor" href="#reset_optionparam"></a> reset_option(param)</h2><p><code>reset_option</code>接受一个参数，并将该值设置为默认值。</p><h2 id="describe_optionparam"><a class="markdownIt-Anchor" href="#describe_optionparam"></a> describe_option(param)</h2><p><code>describe_option</code>打印参数的描述。</p><h2 id="option_context"><a class="markdownIt-Anchor" href="#option_context"></a> option_context()</h2><p><code>option_context</code>上下文管理器用于临时设置语句中的选项。当退出使用块时，选项值将自动恢复 - 常用参数，请参考下表 -</p><p>编号</p><p>参数</p><p>描述</p><p>1</p><p><code>display.max_rows</code></p><p>要显示的最大行数</p><p>2</p><p><code>display.max_columns</code></p><p>要显示的最大列数</p><p>3</p><p><code>display.expand_frame_repr</code></p><p>显示数据帧以拉伸页面</p><p>4</p><p><code>display.max_colwidth</code></p><p>显示最大列宽</p><p>5</p><p><code>display.precision</code></p><p>显示十进制数的精度</p><p>import pandas as pd</p><p>print(&quot;display.max_rows = &quot;, pd.get_option(“display.max_rows”))<br />print(&quot;display.max_columns = &quot;, pd.get_option(“display.max_columns”))<br />pd.set_option(“display.max_rows”, 80)<br />pd.reset_option(“display.max_rows”)<br />print(&quot;after set display.max_rows = &quot;, pd.get_option(“display.max_rows”))<br />print(pd.describe_option(“display.max_rows”))<br />with pd.option_context(“display.max_rows”, 10):<br />print(pd.get_option(“display.max_rows”))</p><h3 id="代码-github地址httpsgithubcomshadowagnoypython_learn"><a class="markdownIt-Anchor" href="#代码-github地址httpsgithubcomshadowagnoypython_learn"></a> 代码 Github地址:<a href="https://github.com/shadowagnoy/python_learn/tree/master/cn/jsledd/pandas/customization.py">https://github.com/shadowagnoy/python_learn/</a></h3>]]></content>
      
      
      <categories>
          
          <category> 开发语言与技巧 </category>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> pandas </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python Pandas字符串和文本数据</title>
      <link href="2017/03/19/python-pandas-text-data/"/>
      <url>2017/03/19/python-pandas-text-data/</url>
      
        <content type="html"><![CDATA[<p>_Pandas_提供了一组字符串函数，可以方便地对字符串数据进行操作。 最重要的是，这些函数忽略(或排除)丢失/NaN值。 几乎这些方法都使用Python字符串函数(请参阅： <a href="http://docs.python.org/3/library/stdtypes.html#string-methods">http://docs.python.org/3/library/stdtypes.html#string-methods</a> )。 因此，将Series对象转换为String对象，然后执行该操作。 下面来看看每个操作的执行和说明。</p><p>编号</p><p>函数</p><p>描述</p><p>1</p><p><code>lower()</code></p><p>将<code>Series/Index</code>中的字符串转换为小写。</p><p>2</p><p><code>upper()</code></p><p>将<code>Series/Index</code>中的字符串转换为大写。</p><p>3</p><p><code>len()</code></p><p>计算字符串长度。</p><p>4</p><p><code>strip()</code></p><p>帮助从两侧的系列/索引中的每个字符串中删除空格(包括换行符)。</p><p>5</p><p><code>split(' ')</code></p><p>用给定的模式拆分每个字符串。</p><p>6</p><p><code>cat(sep=' ')</code></p><p>使用给定的分隔符连接系列/索引元素。</p><p>7</p><p><code>get_dummies()</code></p><p>返回具有单热编码值的数据帧(DataFrame)。</p><p>8</p><p><code>contains(pattern)</code></p><p>如果元素中包含子字符串，则返回每个元素的布尔值<code>True</code>，否则为<code>False</code>。</p><p>9</p><p><code>replace(a,b)</code></p><p>将值<code>a</code>替换为值<code>b</code>。</p><p>10</p><p><code>repeat(value)</code></p><p>重复每个元素指定的次数。</p><p>11</p><p><code>count(pattern)</code></p><p>返回模式中每个元素的出现总数。</p><p>12</p><p><code>startswith(pattern)</code></p><p>如果系列/索引中的元素以模式开始，则返回<code>true</code>。</p><p>13</p><p><code>endswith(pattern)</code></p><p>如果系列/索引中的元素以模式结束，则返回<code>true</code>。</p><p>14</p><p><code>find(pattern)</code></p><p>返回模式第一次出现的位置。</p><p>15</p><p><code>findall(pattern)</code></p><p>返回模式的所有出现的列表。</p><p>16</p><p><code>swapcase</code></p><p>变换字母大小写。</p><p>17</p><p><code>islower()</code></p><p>检查系列/索引中每个字符串中的所有字符是否小写，返回布尔值</p><p>18</p><p><code>isupper()</code></p><p>检查系列/索引中每个字符串中的所有字符是否大写，返回布尔值</p><p>19</p><p><code>isnumeric()</code></p><p>检查系列/索引中每个字符串中的所有字符是否为数字，返回布尔值。</p><p>代码举例：</p><p>import pandas as pd<br />import numpy as np</p><p>s = pd.Series([‘Tom’, ‘William Rick’, ‘John’, ‘Alber@t’, np.nan, ‘1234’, ‘SteveMinsu’])<br />print(s.str.lower())<br />print(s.str.upper())<br />print(s.str.len())<br />print(s.str.strip())<br />print(s.str.split(’ ‘))<br />print(s.str.cat(sep=’ &lt;=&gt; ‘))<br />print(s.str.get_dummies())<br />print(s.str.contains(’ ‘))<br />print(s.str.replace(’@’, ‘$’))<br />print(s.str.repeat(2))<br />print(s.str.count(‘m’))<br />print(s.str.startswith(‘T’))<br />print(s.str.endswith(‘t’))<br />print(s.str.find(‘e’))<br />print(s.str.findall(‘e’))<br />print(s.str.swapcase())<br />print(s.str.islower())<br />print(s.str.isupper())<br />print(s.str.isnumeric())</p><h3 id="代码-github地址httpsgithubcomshadowagnoypython_learn"><a class="markdownIt-Anchor" href="#代码-github地址httpsgithubcomshadowagnoypython_learn"></a> 代码 Github地址:<a href="https://github.com/shadowagnoy/python_learn/tree/master/cn/jsledd/pandas/text_data.py">https://github.com/shadowagnoy/python_learn/</a></h3>]]></content>
      
      
      <categories>
          
          <category> 开发语言与技巧 </category>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> pandas </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python Pandas之迭代和排序</title>
      <link href="2017/03/18/python-pandas-interation-sort/"/>
      <url>2017/03/18/python-pandas-interation-sort/</url>
      
        <content type="html"><![CDATA[<p><code>Pandas</code>对象之间的基本迭代的行为取决于类型。当迭代一个系列时，它被视为数组式，基本迭代产生这些值。其他数据结构，如：<code>DataFrame</code>和<code>Panel</code>，遵循类似惯例迭代对象的键。 简而言之，基本迭代(对于<code>i</code>在对象中)产生 -</p><ul><li><em>Series</em> - 值</li><li><em>DataFrame</em> - 列标签</li><li><em>Pannel</em> - 项目标签</li></ul><h2 id="迭代dataframe"><a class="markdownIt-Anchor" href="#迭代dataframe"></a> 迭代DataFrame</h2><p>迭代<code>DataFrame</code>提供列名 要遍历数据帧(DataFrame)中的行，可以使用以下函数 -</p><ul><li><code>iteritems()</code> - 迭代<code>(key，value)</code>对</li><li><code>iterrows()</code> - 将行迭代为(索引，系列)对</li><li><code>itertuples()</code> - 以<code>namedtuples</code>的形式迭代行</li></ul><p><strong>iteritems()</strong> 将每个列作为键，将值与值作为键和列值迭代为Series对象。 <strong>iterrows()</strong> <code>iterrows()</code>返回迭代器，产生每个索引值以及包含每行数据的序列 <strong>itertuples()</strong> <code>itertuples()</code>方法将为<code>DataFrame</code>中的每一行返回一个产生一个命名元组的迭代器。元组的第一个元素将是行的相应索引值，而剩余的值是行值。</p><h2 id="pandas-排序"><a class="markdownIt-Anchor" href="#pandas-排序"></a> <em>Pandas 排序</em></h2><p>_Pandas_有两种排序方式，它们分别是 -</p><ul><li>按标签</li><li>按实际值</li></ul><h2 id="按标签排序"><a class="markdownIt-Anchor" href="#按标签排序"></a> 按标签排序</h2><p>使用<code>sort_index()</code>方法，通过传递<code>axis</code>参数和排序顺序，可以对<code>DataFrame</code>进行排序。 默认情况下，按照升序对行标签进行排序</p><h2 id="排序顺序"><a class="markdownIt-Anchor" href="#排序顺序"></a> 排序顺序</h2><p>通过将布尔值传递给升序参数，可以控制排序顺序。 来看看下面的例子来理解一下。</p><h2 id="按列排列"><a class="markdownIt-Anchor" href="#按列排列"></a> 按列排列</h2><p>通过传递<code>axis</code>参数值为<code>0</code>或<code>1</code>，可以对列标签进行排序。 默认情况下，<code>axis = 0</code>，逐行排列。来看看下面的例子来理解这个概念。</p><h2 id="按值排序"><a class="markdownIt-Anchor" href="#按值排序"></a> 按值排序</h2><p>像索引排序一样，<code>sort_values()</code>是按值排序的方法。它接受一个<code>by</code>参数，它将使用要与其排序值的<code>DataFrame</code>的列名称。</p><h2 id="排序算法"><a class="markdownIt-Anchor" href="#排序算法"></a> 排序算法</h2><p><code>sort_values()</code>提供了从<code>mergeesort</code>，<code>heapsort</code>和<code>quicksort</code>中选择算法的一个配置。<code>Mergesort</code>是唯一稳定的算法。</p><h3 id="代码举例"><a class="markdownIt-Anchor" href="#代码举例"></a> 代码举例：</h3><p>import pandas as pd<br />import numpy as np</p><p>N = 20</p><p>df = pd.DataFrame({<br />‘A’: pd.date_range(start=‘2016-01-01’, periods=N, freq=‘D’),<br />‘x’: np.linspace(0, stop=N - 1, num=N),<br />‘y’: np.random.rand(N),<br />‘C’: np.random.choice([‘Low’, ‘Medium’, ‘High’], N).tolist(),<br />‘D’: np.random.normal(100, 10, size=(N)).tolist()<br />})</p><p>for col in df:<br />print(col)<br />df = pd.DataFrame(np.random.randn(4, 3), columns=[‘col1’, ‘col2’, ‘col3’])<br />for key, value in df.iteritems():  # 迭代(key，value)对<br />print(key, value)<br />for row_index, row in df.iterrows():  # 将行迭代为(索引，系列)对<br />print(row_index, row)<br />for row in df.itertuples():  # 以namedtuples的形式迭代行<br />print(row)<br />print(&quot;---------------------------------------------------------&quot;)<br />unsorted_df = pd.DataFrame(np.random.randn(10, 2), index=[1, 4, 6, 2, 3, 5, 9, 8, 0, 7], columns=[‘col2’, ‘col1’])<br />sorted_df = unsorted_df.sort_index()<br />print(sorted_df)<br />print(unsorted_df.sort_index())  # 按标签排序<br />print(unsorted_df.sort_index(ascending=False))  # 按标签排序<br />print(unsorted_df.sort_index(axis=1))<br />print(unsorted_df.sort_values(by=‘col1’))  # 按值排序<br />print(unsorted_df.sort_values(by=[‘col1’, ‘col2’]))<br />print(unsorted_df.sort_values(by=‘col1’, kind=‘mergesort’))  # mergeesort，heapsort和quicksort 其中Mergesort 是唯一稳定的</p><h3 id="代码-github地址httpsgithubcomshadowagnoypython_learn"><a class="markdownIt-Anchor" href="#代码-github地址httpsgithubcomshadowagnoypython_learn"></a> 代码 Github地址:<a href="https://github.com/shadowagnoy/python_learn/tree/master/cn/jsledd/pandas/iteration_sort.py">https://github.com/shadowagnoy/python_learn/</a></h3>]]></content>
      
      
      <categories>
          
          <category> 开发语言与技巧 </category>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> pandas </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python Pandas 重建索引</title>
      <link href="2017/03/17/python-pandas-reindex/"/>
      <url>2017/03/17/python-pandas-reindex/</url>
      
        <content type="html"><![CDATA[<p>重新索引会更改DataFrame的行标签和列标签。重新索引意味着符合数据以匹配特定轴上的一组给定的标签。 可以通过索引来实现多个操作 -</p><ul><li>重新排序现有数据以匹配一组新的标签。</li><li>在没有标签数据的标签位置插入缺失值(NA)标记。</li></ul><p>import pandas as pd<br />import numpy as np</p><p>N = 20</p><p>df = pd.DataFrame({<br />‘A’: pd.date_range(start=‘2016-01-01’, periods=N, freq=‘D’),<br />‘x’: np.linspace(0, stop=N - 1, num=N),<br />‘y’: np.random.rand(N),<br />‘C’: np.random.choice([‘Low’, ‘Medium’, ‘High’], N).tolist(),<br />‘D’: np.random.normal(100, 10, size=(N)).tolist()<br />})<br />print(df)<br /># reindex the DataFrame<br />df_reindexed = df.reindex(index=[0, 2, 5], columns=[‘A’, ‘C’, ‘B’])<br />print(df_reindexed)<br />df1 = pd.DataFrame(np.random.randn(10, 3), columns=[‘col1’, ‘col2’, ‘col3’])<br />df2 = pd.DataFrame(np.random.randn(7, 3), columns=[‘col1’, ‘col2’, ‘col3’])<br />print(df1)<br />print(df2.reindex_like(df1, method=‘ffill’))  # pad/ffill - 向前填充值 bfill/backfill - 向后填充值 nearest - 从最近的索引值填充<br />print(df2.reindex_like(df1, method=‘bfill’, limit=1))  # pad/ffill - 向前填充值 bfill/backfill - 向后填充值 nearest - 从最近的索引值填充<br />print(df2.rename(columns={‘col1’: ‘c1’, ‘col2’: ‘c2’}, index={0: ‘apple’, 1: ‘banana’, 2: ‘durian’}))</p><h3 id="代码-github地址httpsgithubcomshadowagnoypython_learn"><a class="markdownIt-Anchor" href="#代码-github地址httpsgithubcomshadowagnoypython_learn"></a> 代码 Github地址:<a href="https://github.com/shadowagnoy/python_learn/tree/master/cn/jsledd/pandas/reindex.py">https://github.com/shadowagnoy/python_learn/</a></h3>]]></content>
      
      
      <categories>
          
          <category> 开发语言与技巧 </category>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> pandas </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python Pandas函数应用</title>
      <link href="2017/03/16/python-pandas-function/"/>
      <url>2017/03/16/python-pandas-function/</url>
      
        <content type="html"><![CDATA[<p>要将自己或其他库的函数应用于_Pandas_对象，应该了解三种重要的方法。以下讨论了这些方法。 使用适当的方法取决于函数是否期望在整个<code>DataFrame</code>，行或列或元素上进行操作。</p><ul><li>表格函数应用：<code>pipe()</code></li><li>行或列函数应用：<code>apply()</code></li><li>元素函数应用：<code>applymap()</code></li></ul><h2 id="表格函数应用"><a class="markdownIt-Anchor" href="#表格函数应用"></a> 表格函数应用</h2><p>可以通过将函数和适当数量的参数作为管道参数来执行自定义操作。 因此，对整个DataFrame执行操作</p><h2 id="行或列智能函数应用"><a class="markdownIt-Anchor" href="#行或列智能函数应用"></a> 行或列智能函数应用</h2><p>可以使用<code>apply()</code>方法沿<code>DataFrame</code>或<code>Panel</code>的轴应用任意函数，它与描述性统计方法一样，采用可选的轴参数。 默认情况下，操作按列执行，将每列列为数组。</p><h2 id="元素智能函数应用"><a class="markdownIt-Anchor" href="#元素智能函数应用"></a> 元素智能函数应用</h2><p>并不是所有的函数都可以向量化(也不是返回另一个数组的NumPy数组，也不是任何值)，在DataFrame上的方法<code>applymap()</code>和类似地在Series上的<code>map()</code>接受任何Python函数，并且返回单个值。 代码实例：</p><p>import pandas as pd<br />import numpy as np</p><p>df = pd.DataFrame(np.random.randn(5, 3), columns=[‘col1’, ‘col2’, ‘col3’])<br />print(df.pipe(lambda x, y: x + y, 20))  # df.pipe(adder, 20)<br />print(df.apply(np.mean, axis=1))  # 按行执行<br />print(df.apply(lambda x: x.max() - x.min()))  # 默认按列执行<br />print(df[‘col1’].map(lambda x: x * 100))<br />print(df.applymap(lambda x: x * 100))</p><h3 id="代码-github地址httpsgithubcomshadowagnoypython_learn"><a class="markdownIt-Anchor" href="#代码-github地址httpsgithubcomshadowagnoypython_learn"></a> 代码 Github地址:<a href="https://github.com/shadowagnoy/python_learn/tree/master/cn/jsledd/pandas/function_application.py">https://github.com/shadowagnoy/python_learn/</a></h3>]]></content>
      
      
      <categories>
          
          <category> 开发语言与技巧 </category>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> pandas </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python Pandas之描述性统计</title>
      <link href="2017/03/15/python-pandas-e4-b9-8b-e6-8f-8f-e8-bf-b0-e6-80-a7-e7-bb-9f-e8-ae-a1/"/>
      <url>2017/03/15/python-pandas-e4-b9-8b-e6-8f-8f-e8-bf-b0-e6-80-a7-e7-bb-9f-e8-ae-a1/</url>
      
        <content type="html"><![CDATA[<p>有很多方法用来集体计算<code>DataFrame</code>的描述性统计信息和其他相关操作.</p><h2 id="函数和说明"><a class="markdownIt-Anchor" href="#函数和说明"></a> 函数和说明</h2><p>下面来了解Python Pandas中描述性统计信息的函数，下表列出了重要函数 -</p><p>编号</p><p>函数</p><p>描述</p><p>1</p><p><code>count()</code></p><p>非空观测数量</p><p>2</p><p><code>sum()</code></p><p>所有值之和</p><p>3</p><p><code>mean()</code></p><p>所有值的平均值</p><p>4</p><p><code>median()</code></p><p>所有值的中位数</p><p>5</p><p><code>mode()</code></p><p>值的模值</p><p>6</p><p><code>std()</code></p><p>值的标准偏差</p><p>7</p><p><code>min()</code></p><p>所有值中的最小值</p><p>8</p><p><code>max()</code></p><p>所有值中的最大值</p><p>9</p><p><code>abs()</code></p><p>绝对值</p><p>10</p><p><code>prod()</code></p><p>数组元素的乘积</p><p>11</p><p><code>cumsum()</code></p><p>累计总和</p><p>12</p><p><code>cumprod()</code></p><p>累计乘积</p><blockquote><p>注 - 由于DataFrame是异构数据结构。通用操作不适用于所有函数。</p><ul><li>类似于：<code>sum()</code>，<code>cumsum()</code>函数能与数字和字符(或)字符串数据元素一起工作，不会产生任何错误。字符聚合从来都比较少被使用，虽然这些函数不会引发任何异常。</li><li>由于这样的操作无法执行，因此，当DataFrame包含字符或字符串数据时，像<code>abs()</code>，<code>cumprod()</code>这样的函数会抛出异常。</li></ul></blockquote><h3 id="代码举例"><a class="markdownIt-Anchor" href="#代码举例"></a> 代码举例：</h3><p>import pandas as pd<br />import numpy as np</p><p># Create a Dictionary of series<br />d = {‘Name’: pd.Series([‘Tom’, ‘James’, ‘Ricky’, ‘Vin’, ‘Steve’, ‘Minsu’, ‘Jack’,<br />‘Lee’, ‘David’, ‘Gasper’, ‘Betina’, ‘Andres’]),<br />‘Age’: pd.Series([25, 26, 25, 23, 30, 29, 23, 34, 40, 30, 51, 46]),<br />‘Rating’: pd.Series([4.23, 3.24, 3.98, 2.56, 3.20, 4.6, 3.8, 3.78, 2.98, 4.80, 4.10, 3.65])}</p><p># Create a DataFrame<br />df = pd.DataFrame(d)<br />print(df.sum())  # 请求轴的值的总和。 默认情况下，轴为索引(axis=0)<br />print(df.sum(1))<br />print(df.mean())  # 平均值<br />print(df.std())  # 数字列的Bressel标准偏差<br />print(df.describe())  # 汇总数据<br />print(df.describe(include=[‘number’]))  # object - 汇总字符串列,number - 汇总数字列,all - 将所有列汇总在一起(不应将其作为列表值传递)</p><h3 id="代码-github地址httpsgithubcomshadowagnoypython_learn"><a class="markdownIt-Anchor" href="#代码-github地址httpsgithubcomshadowagnoypython_learn"></a> 代码 Github地址:<a href="https://github.com/shadowagnoy/python_learn/tree/master/cn/jsledd/pandas/descriptivestatistics.py">https://github.com/shadowagnoy/python_learn/</a></h3>]]></content>
      
      
      <categories>
          
          <category> 开发语言与技巧 </category>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> pandas </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python Pandas之Series和DataFrame 的基本属性和方法</title>
      <link href="2017/03/14/python-pandas-series-dataframe/"/>
      <url>2017/03/14/python-pandas-series-dataframe/</url>
      
        <content type="html"><![CDATA[<h2 id="series基本功能"><a class="markdownIt-Anchor" href="#series基本功能"></a> Series基本功能</h2><p>编号</p><p>属性或方法</p><p>描述</p><p>1</p><p><code>axes</code></p><p>返回行轴标签列表。</p><p>2</p><p><code>dtype</code></p><p>返回对象的数据类型(<code>dtype</code>)。</p><p>3</p><p><code>empty</code></p><p>如果系列为空，则返回<code>True</code>。</p><p>4</p><p><code>ndim</code></p><p>返回底层数据的维数，默认定义：<code>1</code>。</p><p>5</p><p><code>size</code></p><p>返回基础数据中的元素数。</p><p>6</p><p><code>values</code></p><p>将系列作为<code>ndarray</code>返回。</p><p>7</p><p><code>head()</code></p><p>返回前<code>n</code>行。</p><p>8</p><p><code>tail()</code></p><p>返回最后<code>n</code>行。</p><h2 id="dataframe基本功能"><a class="markdownIt-Anchor" href="#dataframe基本功能"></a> DataFrame基本功能</h2><p>下面来看看数据帧(DataFrame)的基本功能有哪些？下表列出了DataFrame基本功能的重要属性或方法。</p><p>编号</p><p>属性或方法</p><p>描述</p><p>1</p><p><code>T</code></p><p>转置行和列。</p><p>2</p><p><code>axes</code></p><p>返回一个列，行轴标签和列轴标签作为唯一的成员。</p><p>3</p><p><code>dtypes</code></p><p>返回此对象中的数据类型(<code>dtypes</code>)。</p><p>4</p><p><code>empty</code></p><p>如果<code>NDFrame</code>完全为空[无项目]，则返回为<code>True</code>; 如果任何轴的长度为<code>0</code>。</p><p>5</p><p><code>ndim</code></p><p>轴/数组维度大小。</p><p>6</p><p><code>shape</code></p><p>返回表示<code>DataFrame</code>的维度的元组。</p><p>7</p><p><code>size</code></p><p><code>NDFrame</code>中的元素数。</p><p>8</p><p><code>values</code></p><p>NDFrame的Numpy表示。</p><p>9</p><p><code>head()</code></p><p>返回开头前<code>n</code>行。</p><p>10</p><p><code>tail()</code></p><p>返回最后<code>n</code>行。</p><p><strong>代码示例：</strong></p><p>import pandas as pd<br />import numpy as np</p><p>s = pd.Series(np.random.randn(4))<br />print(s.axes)  # Series 的标签列表<br />print(s.empty)  # 判断是不是空值<br />print(s.ndim)  # 判断数据维度<br />print(s.size)  # 判断元素个数<br />print(s.values)  # 返回数据值<br />print(s.head(2))  # 小样品提取 开始2行 默认5<br />print(s.tail(2))  # 小样品提取 末尾2行 默认5<br />d = {‘Name’: pd.Series([‘Tom’, ‘James’, ‘Ricky’, ‘Vin’, ‘Steve’, ‘Minsu’, ‘Jack’]),<br />‘Age’: pd.Series([25, 26, 25, 23, 30, 29, 23]),<br />‘Rating’: pd.Series([4.23, 3.24, 3.98, 2.56, 3.20, 4.6, 3.8])}</p><p>df = pd.DataFrame(d)<br />print(df.T)  # 行列装换<br />print(df.axes)  # 行轴标签和列轴标签列表<br />print(df.dtypes)  # 数据类型<br />print(df.shape)</p><h3 id="代码-github地址httpsgithubcomshadowagnoypython_learn"><a class="markdownIt-Anchor" href="#代码-github地址httpsgithubcomshadowagnoypython_learn"></a> 代码 Github地址:<a href="https://github.com/shadowagnoy/python_learn/tree/master/cn/jsledd/pandas/basic_functionality.py">https://github.com/shadowagnoy/python_learn/</a></h3>]]></content>
      
      
      <categories>
          
          <category> 开发语言与技巧 </category>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> DataFrame </tag>
            
            <tag> panda </tag>
            
            <tag> Series </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python Pandas之DataFrame</title>
      <link href="2017/03/13/python-pandas-dataframe/"/>
      <url>2017/03/13/python-pandas-dataframe/</url>
      
        <content type="html"><![CDATA[<p>数据帧(DataFrame)是二维数据结构，即数据以行和列的表格方式排列。 数据帧(DataFrame)的功能特点：</p><ul><li>潜在的列是不同的类型</li><li>大小可变</li><li>标记轴(行和列)</li><li>可以对行和列执行算术运算</li></ul><h2 id="pandasdataframe"><a class="markdownIt-Anchor" href="#pandasdataframe"></a> pandas.DataFrame</h2><blockquote><p>_pandas_中的<code>DataFrame</code>可以使用以下构造函数创建 - pandas.DataFrame( data, index, columns, dtype, copy)</p></blockquote><p>Python</p><p>构造函数的参数如下 -</p><p>编号</p><p>参数</p><p>描述</p><p>1</p><p><code>data</code></p><p>数据采取各种形式，如:<code>ndarray</code>，<code>series</code>，<code>map</code>，<code>lists</code>，<code>dict</code>，<code>constant</code>和另一个<code>DataFrame</code>。</p><p>2</p><p><code>index</code></p><p>对于行标签，要用于结果帧的索引是可选缺省值<code>np.arrange(n)</code>，如果没有传递索引值。</p><p>3</p><p><code>columns</code></p><p>对于列标签，可选的默认语法是 - <code>np.arange(n)</code>。 这只有在没有索引传递的情况下才是这样。</p><p>4</p><p><code>dtype</code></p><p>每列的数据类型。</p><p>5</p><p><code>copy</code></p><p>如果默认值为<code>False</code>，则此命令(或任何它)用于复制数据。</p><h2 id="创建dataframe"><a class="markdownIt-Anchor" href="#创建dataframe"></a> 创建DataFrame</h2><p>Pandas数据帧(<em>DataFrame</em>)可以使用各种输入创建，如 -</p><ul><li>列表</li><li>字典</li><li>系列</li><li>Numpy ndarrays</li><li>另一个数据帧(<em>DataFrame</em>)</li></ul><p>import pandas as pd</p><p>df = pd.DataFrame()  # 创建一个空的dataframe<br />data = [1, 2, 3, 4, 5]<br />df1 = pd.DataFrame(data)<br />print(df1)  # 使用单列表创建<br />data = [[‘Alex’, 10], [‘Bob’, 12], [‘Clarke’, 13]]<br />df2 = pd.DataFrame(data, columns=[‘Name’, ‘Age’])<br />print(df2)  # 使用列表的列表创建<br />data = {‘Name’: [‘Tom’, ‘Jack’, ‘Steve’, ‘Ricky’], ‘Age’: [28, 34, 29, 42]}<br />df3 = pd.DataFrame(data)<br />print(df3)  # 从ndarrays/Lists的字典来创建DataFrame<br />df4 = pd.DataFrame(data, index=[‘rank1’, ‘rank2’, ‘rank3’, ‘rank4’])<br />print(df4)  # 创建一个索引的数据帧(DataFrame)<br />data = [{‘a’: 1, ‘b’: 2}, {‘a’: 5, ‘b’: 10, ‘c’: 20}]<br />print(pd.DataFrame(data))  # 字典列表 创建<br />print(pd.DataFrame(data, index=[‘first’, ‘second’]))<br />df5 = pd.DataFrame(data, index=[‘first’, ‘second’], columns=[‘a’, ‘b1’])<br />print(df5)  # 列不存在 附加上 NaN<br />d = {‘one’: pd.Series([1, 2, 3], index=[‘a’, ‘b’, ‘c’]),<br />‘two’: pd.Series([1, 2, 3, 4], index=[‘a’, ‘b’, ‘c’, ‘d’])}<br />df6 = pd.DataFrame(d)<br />print(df6)  # 字典的系列<br />print(&quot;-----------------------------------------------&quot;)<br />print(df6[‘one’])  # 选择列<br />df6[‘three’] = pd.Series([10, 20, 30], index=[‘a’, ‘b’, ‘c’])  # 列添加<br />df6[‘four’] = df6[‘one’] + df6[‘three’]  # 列组合添加<br />print(df6)<br />del (df6[‘four’])  # 列删除<br />df6.pop(‘three’)  # 列弹出<br />print(df6)<br />print(&quot;-----------------------------------------------&quot;)<br />print(df6.loc[‘b’])  # 行选择<br />print(df6.iloc[2])  # 按整数位置选择<br />print(print(df6[2:4]))  # 使用切片选择行<br />df7 = pd.DataFrame([[1, 2], [3, 4]], columns=[‘a’, ‘b’])<br />df8 = pd.DataFrame([[5, 6], [7, 8]], columns=[‘a’, ‘b’])<br />print(df7.append(df8))  # 附加行<br />print(df6.drop(‘a’))  # 删除行</p><h3 id="代码-github地址httpsgithubcomshadowagnoypython_learn"><a class="markdownIt-Anchor" href="#代码-github地址httpsgithubcomshadowagnoypython_learn"></a> 代码 Github地址:<a href="https://github.com/shadowagnoy/python_learn/tree/master/cn/jsledd/pandas/dataFrame.py">https://github.com/shadowagnoy/python_learn/</a></h3>]]></content>
      
      
      <categories>
          
          <category> 开发语言与技巧 </category>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> pandas </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python Pandas之Series</title>
      <link href="2017/03/12/python-pandas-series/"/>
      <url>2017/03/12/python-pandas-series/</url>
      
        <content type="html"><![CDATA[<p>系列(<code>Series</code>)是能够保存任何类型的数据(整数，字符串，浮点数，Python对象等)的一维标记数组。轴标签统称为索引。</p><h2 id="pandasseries"><a class="markdownIt-Anchor" href="#pandasseries"></a> pandas.Series</h2><blockquote><p>_Pandas_系列可以使用以下构造函数创建 - <code>pandas.Series( data, index, dtype, copy)。</code></p></blockquote><p>Python</p><p>构造函数的参数如下 -</p><p>编号</p><p>参数</p><p>描述</p><p>1</p><p><code>data</code></p><p>数据采取各种形式，如：<code>ndarray</code>，<code>list</code>，<code>constants</code></p><p>2</p><p><code>index</code></p><p>索引值必须是唯一的和散列的，与数据的长度相同。 默认<code>np.arange(n)</code>如果没有索引被传递。</p><p>3</p><p><code>dtype</code></p><p><code>dtype</code>用于数据类型。如果没有，将推断数据类型</p><p>4</p><p><code>copy</code></p><p>复制数据，默认为<code>false</code>。</p><p>可以使用各种输入创建一个系列，如 -</p><ul><li>数组</li><li>字典</li><li>标量值或常数</li></ul><h3 id="代码举例"><a class="markdownIt-Anchor" href="#代码举例"></a> 代码举例：</h3><p>import pandas as pd<br />import numpy as np</p><p>print(pd.Series())  # 创建空的系列 默认Series([], dtype: float64)<br />data = np.array([‘a’, ‘b’, ‘c’, ‘d’])<br />se1 = pd.Series(data)<br />print(se1)  # 从ndarray 中创建，默认索引是从0开始的整数<br />se2 = pd.Series(data=data, index=[‘A’, ‘B’, ‘C’, ‘D’])<br />print()  # 传递了索引值<br />data = {‘a’: 0., ‘b’: 1., ‘c’: 2.}<br />print(pd.Series(data))  # 从字典中创建一个系列<br />print(pd.Series(5, index=[‘A’, ‘B’, ‘C’, ‘D’]))  # 数据是标量值，则必须提供索引<br />print(se1[0])  # 指定位置的元素<br />print(se1[:2])  # 该索引向前的所有项目被提取<br />print(se1[-3:])  # 该索引的最后三个元素<br />print(se2[‘A’])  # 使用标签值检索A索引<br />print(se2[[‘A’, ‘B’]])  # 使用标签值检索A,B索引</p><h3 id="代码-github地址httpsgithubcomshadowagnoypython_learn"><a class="markdownIt-Anchor" href="#代码-github地址httpsgithubcomshadowagnoypython_learn"></a> 代码 Github地址:<a href="https://github.com/shadowagnoy/python_learn/tree/master/cn/jsledd/pandas/series.py">https://github.com/shadowagnoy/python_learn/</a></h3>]]></content>
      
      
      <categories>
          
          <category> 开发语言与技巧 </category>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> pandas </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python Pandas数据结构</title>
      <link href="2017/03/11/python-pandas-structures/"/>
      <url>2017/03/11/python-pandas-structures/</url>
      
        <content type="html"><![CDATA[<p>_Pandas_处理以下三个数据结构 -</p><ul><li>系列(<code>Series</code>)</li><li>数据帧(<code>DataFrame</code>)</li><li>面板(<code>Panel</code>)</li></ul><p>这些数据结构构建在_Numpy_数组之上，这意味着它们很快。</p><h2 id="维数和描述"><a class="markdownIt-Anchor" href="#维数和描述"></a> 维数和描述</h2><p>考虑这些数据结构的最好方法是，较高维数据结构是其较低维数据结构的容器。 例如，<code>DataFrame</code>是<code>Series</code>的容器，<code>Panel</code>是<code>DataFrame</code>的容器。</p><p>数据结构</p><p>维数</p><p>描述</p><p>系列</p><p>1</p><p><code>1</code>D标记均匀数组，大小不变。</p><p>数据帧</p><p>2</p><p>一般<code>2</code>D标记，大小可变的表结构与潜在的异质类型的列。</p><p>面板</p><p>3</p><p>一般<code>3</code>D标记，大小可变数组。</p><p>构建和处理两个或更多个维数组是一项繁琐的任务，用户在编写函数时要考虑数据集的方向。 但是使用_Pandas_数据结构，减少了用户的思考。 例如，使用表格数据(<code>DataFrame</code>)，在语义上更有用于考虑索引(行)和列，而不是轴<code>0</code>和轴<code>1</code>。 <strong>可变性</strong> 所有_Pandas_数据结构是值可变的(可以更改)，除了系列都是大小可变的。系列是大小不变的。</p><blockquote><p>注 - <code>DataFrame</code>被广泛使用，是最重要的数据结构之一。面板使用少得多。</p></blockquote><h2 id="系列"><a class="markdownIt-Anchor" href="#系列"></a> 系列</h2><p>系列是具有均匀数据的一维数组结构。例如，以下系列是整数：<code>10</code>,<code>23</code>,<code>56</code>，<code>...</code>的集合。 <img src="http://www.yiibai.com/uploads/images/201710/3110/493141059_40874.png" alt="" /> <strong>关键点</strong></p><ul><li>均匀数据</li><li>尺寸大小不变</li><li>数据的值可变</li></ul><h2 id="数据帧"><a class="markdownIt-Anchor" href="#数据帧"></a> 数据帧</h2><p>数据帧(<em>DataFrame</em>)是一个具有异构数据的二维数组。 例如，</p><p>姓名</p><p>年龄</p><p>性别</p><p>等级</p><p>Maxsu</p><p>25</p><p>男</p><p>4.45</p><p>Katie</p><p>34</p><p>女</p><p>2.78</p><p>Vina</p><p>46</p><p>女</p><p>3.9</p><p>Lia</p><p>女</p><p>x女</p><p>4.6</p><p>上表表示具有整体绩效评级组织的销售团队的数据。数据以行和列表示。每列表示一个属性，每行代表一个人。 <strong>列的数据类型</strong> 上面数据帧中四列的数据类型如下：</p><p>列</p><p>类型</p><p>姓名</p><p>字符串</p><p>年龄</p><p>整数</p><p>性别</p><p>字符串</p><p>等级</p><p>浮点型</p><p><strong>关键点</strong></p><ul><li>异构数据</li><li>大小可变</li><li>数据可变</li></ul><h2 id="面板"><a class="markdownIt-Anchor" href="#面板"></a> 面板</h2><p>面板是具有异构数据的三维数据结构。在图形表示中很难表示面板。但是一个面板可以说明为<code>DataFrame</code>的容器。 <strong>关键点</strong></p><ul><li>异构数据</li><li>大小可变</li><li>数据可变</li></ul>]]></content>
      
      
      <categories>
          
          <category> 开发语言与技巧 </category>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> pandas </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python科学计算库Numpy之 线性代数</title>
      <link href="2017/03/10/python-numpy-linearalgebra/"/>
      <url>2017/03/10/python-numpy-linearalgebra/</url>
      
        <content type="html"><![CDATA[<h1 id="numpy-线性代数"><a class="markdownIt-Anchor" href="#numpy-线性代数"></a> NumPy - 线性代数</h1><p>NumPy 包包含<code>numpy.linalg</code>模块，提供线性代数所需的所有功能。 此模块中的一些重要功能如下表所述。</p><p>序号</p><p>函数及描述</p><ol><li></li></ol><p><code>dot</code> 两个数组的点积</p><ol start="2"><li></li></ol><p><code>vdot</code> 两个向量的点积</p><ol start="3"><li></li></ol><p><code>inner</code> 两个数组的内积</p><ol start="4"><li></li></ol><p><code>matmul</code> 两个数组的矩阵积</p><ol start="5"><li></li></ol><p><code>determinant</code> 数组的行列式</p><ol start="6"><li></li></ol><p><code>solve</code> 求解线性矩阵方程</p><ol start="7"><li></li></ol><p><code>inv</code> 寻找矩阵的乘法逆矩阵</p><h2 id="numpydot"><a class="markdownIt-Anchor" href="#numpydot"></a> <code>numpy.dot()</code></h2><p>此函数返回两个数组的点积。 对于二维向量，其等效于矩阵乘法。 对于一维数组，它是向量的内积。 对于 N 维数组，它是<code>a</code>的最后一个轴上的和与<code>b</code>的倒数第二个轴的乘积。</p><h2 id="numpyvdot"><a class="markdownIt-Anchor" href="#numpyvdot"></a> <code>numpy.vdot()</code></h2><p>此函数返回两个向量的点积。 如果第一个参数是复数，那么它的共轭复数会用于计算。 如果参数<code>id</code>是多维数组，它会被展开</p><h2 id="numpyinner"><a class="markdownIt-Anchor" href="#numpyinner"></a> <code>numpy.inner()</code></h2><p>此函数返回一维数组的向量内积。 对于更高的维度，它返回最后一个轴上的和的乘积。</p><h2 id="numpymatmul"><a class="markdownIt-Anchor" href="#numpymatmul"></a> <code>numpy.matmul</code></h2><p><code>numpy.matmul()</code>函数返回两个数组的矩阵乘积。 虽然它返回二维数组的正常乘积，但如果任一参数的维数大于2，则将其视为存在于最后两个索引的矩阵的栈，并进行相应广播。 另一方面，如果任一参数是一维数组，则通过在其维度上附加 1 来将其提升为矩阵，并在乘法之后被去除。</p><h2 id="numpylinalgdet"><a class="markdownIt-Anchor" href="#numpylinalgdet"></a> <code>numpy.linalg.det()</code></h2><p>行列式在线性代数中是非常有用的值。 它从方阵的对角元素计算。 对于 2×2 矩阵，它是左上和右下元素的乘积与其他两个的乘积的差。 换句话说，对于矩阵<code>[[a，b]，[c，d]]</code>，行列式计算为<code>ad-bc</code>。 较大的方阵被认为是 2×2 矩阵的组合。 <code>numpy.linalg.det()</code>函数计算输入矩阵的行列式</p><h2 id="numpylinalgsolve"><a class="markdownIt-Anchor" href="#numpylinalgsolve"></a> <code>numpy.linalg.solve()</code></h2><p><code>numpy.linalg.solve()</code>函数给出了矩阵形式的线性方程的解</p><h2 id="numpylinalginv"><a class="markdownIt-Anchor" href="#numpylinalginv"></a> <code>numpy.linalg.inv()</code></h2><p>我们使用<code>numpy.linalg.inv()</code>函数来计算矩阵的逆。 矩阵的逆是这样的，如果它乘以原始矩阵，则得到单位矩阵</p><h3 id="代码举例"><a class="markdownIt-Anchor" href="#代码举例"></a> 代码举例：</h3><p>import numpy as np</p><p>a = np.array([[1, 2], [3, 4]])<br />b = np.array([[11, 12], [13, 14]])<br />print(np.dot(a, b))  # 数组的点积 [[1*11+2*13, 1*12+2*14],[3*11+4*13, 3*12+4*14]]<br />print(np.vdot(a, b))  # np.vdot(a,b) 1*11 + 2*12 + 3*13 + 4*14 = 130<br />print(np.inner(np.array([1, 2, 3]), np.array([0, 1, 0])))  # 一维数组的向量内积<br />print(np.inner(a, b))  # 数组的向量内积 1*11+2*12, 1*13+2*14  3*11+4*12, 3*13+4*14<br />print(np.matmul(a, b))  # 对于二维数组，它就是矩阵乘法<br />b = [1, 2]<br />print(np.matmul(a, b))  # 二维和一维运算,任一参数是一维数组，则通过在其维度上附加 1 来将其提升为矩阵，并在乘法之后被去除<br />c = np.arange(8).reshape(2, 2, 2)<br />b = np.arange(4).reshape(2, 2)<br />print(np.matmul(c, b))  # 将其视为存在于最后两个索引的矩阵的栈，并进行相应广播<br />print(np.linalg.det(a))  # 对于 2×2 矩阵，它是左上和右下元素的乘积与其他两个的乘积的差 行列式计算为1*4-2*3<br />d = np.array([[6, 1, 1], [4, -2, 5], [2, 8, 7]])<br />print(np.linalg.det(d))  # 6*(-2*7 - 5*8) - 1*(4*7 - 5*2) + 1*(4*8 - -2*2)<br />‘’’<br />线性方程<br />x + y + z = 6<br />2y + 5z = -4<br />2x + 5y - z = 27<br />未知数的系数写下来，排列成一个矩阵A [[1,1,1],[0,2,5],[2,5,-1]]<br />常数项构成一个一维数组(向量) B:[6,-4,27]<br />未知向量 X:[x,y,z]<br />方程变成 AX=B 或 A^(-1)B<br />带入矩阵参数a指的是系数矩阵，参数b指的是常数项矩阵<br />‘’’<br />A = np.array([[1, 1, 1], [0, 2, 5], [2, 5, -1]])<br />B = [6, -4, 27]<br />print(np.linalg.solve(A, B))<br />y = np.linalg.inv(A)  # 矩阵A的逆<br />print(np.dot(y, B))  # solve dot 关系</p><h3 id="代码-github地址httpsgithubcomshadowagnoypython_learn"><a class="markdownIt-Anchor" href="#代码-github地址httpsgithubcomshadowagnoypython_learn"></a> 代码 Github地址:<a href="https://github.com/shadowagnoy/python_learn/blob/master/cn/jsledd/numpy/linearalgebra.py">https://github.com/shadowagnoy/python_learn/</a></h3><h3 id="参考文档httpsdocsscipyorgdocnumpyreferenceroutineshtml"><a class="markdownIt-Anchor" href="#参考文档httpsdocsscipyorgdocnumpyreferenceroutineshtml"></a> 参考文档：<a href="https://docs.scipy.org/doc/numpy/reference/routines.html">https://docs.scipy.org/doc/numpy/reference/routines.html</a></h3><h3 id="参考文档httpswwwtutorialspointcomnumpyindexhtm"><a class="markdownIt-Anchor" href="#参考文档httpswwwtutorialspointcomnumpyindexhtm"></a> 参考文档：<a href="https://www.tutorialspoint.com/numpy/index.htm">https://www.tutorialspoint.com/numpy/index.htm</a></h3>]]></content>
      
      
      <categories>
          
          <category> 开发语言与技巧 </category>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> numpy </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python科学计算库Numpy之 矩阵库</title>
      <link href="2017/03/09/python-numpy-matrix/"/>
      <url>2017/03/09/python-numpy-matrix/</url>
      
        <content type="html"><![CDATA[<h1 id="numpy-矩阵库"><a class="markdownIt-Anchor" href="#numpy-矩阵库"></a> NumPy - 矩阵库</h1><p>NumPy 包包含一个 Matrix库<code>numpy.matlib</code>。此模块的函数返回矩阵而不是返回<code>ndarray</code>对象</p><h3 id="代码举例"><a class="markdownIt-Anchor" href="#代码举例"></a> 代码举例：</h3><p>import numpy.matlib<br />import numpy as np</p><p>print(np.matlib.empty((2, 2)))  # 填充为随机数据<br />print(np.matlib.zeros((2, 2)))<br />print(np.matlib.ones((2, 2)))<br />print(np.matlib.eye(n=3, M=4, k=0, dtype=float))<br />print(np.matlib.identity(5, dtype=float))<br />print(np.matlib.rand(3, 3))<br />i = np.matrix(‘1,2;3,4’)<br />print(np.asarray(i))<br />print(np.asmatrix(i))</p><h3 id="代码-github地址httpsgithubcomshadowagnoypython_learn"><a class="markdownIt-Anchor" href="#代码-github地址httpsgithubcomshadowagnoypython_learn"></a> 代码 Github地址:<a href="https://github.com/shadowagnoy/python_learn/blob/master/cn/jsledd/numpy/matrixlibrary.py">https://github.com/shadowagnoy/python_learn/</a></h3><h3 id="参考文档httpsdocsscipyorgdocnumpyreferenceroutineshtml"><a class="markdownIt-Anchor" href="#参考文档httpsdocsscipyorgdocnumpyreferenceroutineshtml"></a> 参考文档：<a href="https://docs.scipy.org/doc/numpy/reference/routines.html">https://docs.scipy.org/doc/numpy/reference/routines.html</a></h3><h3 id="参考文档httpswwwtutorialspointcomnumpyindexhtm"><a class="markdownIt-Anchor" href="#参考文档httpswwwtutorialspointcomnumpyindexhtm"></a> 参考文档：<a href="https://www.tutorialspoint.com/numpy/index.htm">https://www.tutorialspoint.com/numpy/index.htm</a></h3>]]></content>
      
      
      <categories>
          
          <category> 开发语言与技巧 </category>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> numpy </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python科学计算库Numpy之 复制和视图</title>
      <link href="2017/03/09/python-numpy-copy-view/"/>
      <url>2017/03/09/python-numpy-copy-view/</url>
      
        <content type="html"><![CDATA[<h1 id="numpy-副本和视图"><a class="markdownIt-Anchor" href="#numpy-副本和视图"></a> NumPy - 副本和视图</h1><p>在执行函数时，其中一些返回输入数组的副本，而另一些返回视图。 当内容物理存储在另一个位置时，称为<strong>副本</strong>。 另一方面，如果提供了相同内存内容的不同视图，我们将其称为<strong>视图</strong>。</p><h2 id="无复制"><a class="markdownIt-Anchor" href="#无复制"></a> 无复制</h2><p>简单的赋值不会创建数组对象的副本。 相反，它使用原始数组的相同<code>id()</code>来访问它。 <code>id()</code>返回 Python 对象的通用标识符，类似于 C 中的指针。 此外，一个数组的任何变化都反映在另一个数组上。 例如，一个数组的形状改变也会改变另一个数组的形状。</p><h2 id="视图或浅复制"><a class="markdownIt-Anchor" href="#视图或浅复制"></a> 视图或浅复制</h2><p>NumPy 拥有<code>ndarray.view()</code>方法，它是一个新的数组对象，并可查看原始数组的相同数据。 与前一种情况不同，新数组的维数更改不会更改原始数据的维数 <strong>切片属于视图</strong></p><h2 id="深复制"><a class="markdownIt-Anchor" href="#深复制"></a> 深复制</h2><p><code>ndarray.copy()</code>函数创建一个深层副本。 它是数组及其数据的完整副本，不与原始数组共享。</p><p>import numpy as np</p><p>a = np.arange(6)<br />b = a<br />b.shape = 3, 2<br />print(a)<br />print(id(a) == id(b))  # 直接使用 =  复制 a和b 完全一致<br />c = a.view()<br />print(id(a) == id©)  # 浅复制 它是一个新的数组对象，并可查看原始数组的相同数据。 与前一种情况不同，新数组的维数更改不会更改原始数据的维数。<br />c[[0, 0]] = 20<br />print(a)  # 浅复制 共享同一套数据  创建视图<br />d = a.copy()<br />print(id(a) == id(d))<br />d[[1, 1]] = 30<br />print(a)  # ndarray.copy()函数创建一个深层副本。 它是数组及其数据的完整副本，不与原始数组共享<br />s = a[:, :2]  # !!! 切片属于浅复制 创建视图<br />s[[1, 1]] = 40<br />print(a)</p>]]></content>
      
      
      <categories>
          
          <category> 开发语言与技巧 </category>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> numpy </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python科学计算库Numpy之 排序、搜索和计数函数</title>
      <link href="2017/03/08/python-numpy-sort-search-count/"/>
      <url>2017/03/08/python-numpy-sort-search-count/</url>
      
        <content type="html"><![CDATA[<h1 id="numpy-排序-搜索和计数函数"><a class="markdownIt-Anchor" href="#numpy-排序-搜索和计数函数"></a> NumPy - 排序、搜索和计数函数</h1><p>NumPy中提供了各种排序相关功能。 这些排序函数实现不同的排序算法，每个排序算法的特征在于执行速度，最坏情况性能，所需的工作空间和算法的稳定性。 下表显示了三种排序算法的比较。</p><p>种类</p><p>速度</p><p>最坏情况</p><p>工作空间</p><p>稳定性</p><p><code>'quicksort'</code>（快速排序）</p><p>1</p><p><code>O(n^2)</code></p><p>0</p><p>否</p><p><code>'mergesort'</code>（归并排序）</p><p>2</p><p><code>O(n*log(n))</code></p><p>~n/2</p><p>是</p><p><code>'heapsort'</code>（堆排序）</p><p>3</p><p><code>O(n*log(n))</code></p><p>0</p><p>否</p><h2 id="numpysorta-axis-kind-order"><a class="markdownIt-Anchor" href="#numpysorta-axis-kind-order"></a> <code>numpy.sort(a, axis, kind, order)</code></h2><p>序号</p><p>参数及描述</p><ol><li></li></ol><p><code>a</code> 要排序的数组</p><ol start="2"><li></li></ol><p><code>axis</code> 沿着它排序数组的轴，如果没有数组会被展开，沿着最后的轴排序</p><ol start="3"><li></li></ol><p><code>kind</code> 默认为<code>'quicksort'</code>（快速排序）</p><ol start="4"><li></li></ol><p><code>order</code> 如果数组包含字段，则是要排序的字段</p><h3 id="代码举例"><a class="markdownIt-Anchor" href="#代码举例"></a> 代码举例：</h3><p>import numpy as np</p><p>a = np.array([[3, 7], [9, 1]])<br />print(np.sort(a))<br />print(np.sort(a, axis=0))<br />dt = np.dtype([(‘name’, ‘S10’), (‘age’, int)])<br />a = np.array([(“raju”, 21), (“anil”, 25), (“ravi”, 17), (“amar”, 27)], dtype=dt)<br />print(np.sort(a, order=‘age’))</p><p>x = np.array([3, 1, 2])<br />print(x[np.argsort(x)])  # numpy.argsort()函数对输入数组沿给定轴执行间接排序，并使用指定排序类型返回数据的索引数组。 这个索引数组用于构造排序后的数组<br />nm = (‘raju’, ‘anil’, ‘ravi’, ‘amar’)<br />dv = (‘f.y.’, ‘s.y.’, ‘s.y.’, ‘f.y.’)<br />ind = np.lexsort((dv, nm))<br /># 函数使用键序列执行间接排序。 键可以看作是电子表格中的一列。 该函数返回一个索引数组，使用它可以获得排序数据。 注意，最后一个键恰好是 sort 的主键<br />print([nm[i] + &quot;, &quot; + dv[i] for i in ind])<br />a = np.array([[30, 17, 70], [80, 0, 10], [50, 90, 60]])<br />‘’’<br />numpy.argmax() 和 numpy.argmin()<br />这两个函数分别沿给定轴返回最大和最小元素的索引。<br />‘’’<br />print(np.argmax(a))<br />print(np.argmax(a, axis=0))<br />print(np.nonzero(a))  # 函数返回输入数组中非零元素的索引<br />print(a[np.where(a &gt; 40)])  # where()函数返回输入数组中满足给定条件的元素的索引<br />print(np.extract(np.mod(a, 2) == 0, a))  # where()函数返回输入数组中满足给定条件的元素的索引<br />print(a.flatten())</p><h3 id="代码-github地址httpsgithubcomshadowagnoypython_learn"><a class="markdownIt-Anchor" href="#代码-github地址httpsgithubcomshadowagnoypython_learn"></a> 代码 Github地址:<a href="https://github.com/shadowagnoy/python_learn/blob/master/cn/jsledd/numpy/sliceandindex.py">https://github.com/shadowagnoy/python_learn/</a></h3><h3 id="参考文档httpsdocsscipyorgdocnumpyreferenceroutineshtml"><a class="markdownIt-Anchor" href="#参考文档httpsdocsscipyorgdocnumpyreferenceroutineshtml"></a> 参考文档：<a href="https://docs.scipy.org/doc/numpy/reference/routines.html">https://docs.scipy.org/doc/numpy/reference/routines.html</a></h3><h3 id="参考文档httpswwwtutorialspointcomnumpyindexhtm"><a class="markdownIt-Anchor" href="#参考文档httpswwwtutorialspointcomnumpyindexhtm"></a> 参考文档：<a href="https://www.tutorialspoint.com/numpy/index.htm">https://www.tutorialspoint.com/numpy/index.htm</a></h3>]]></content>
      
      
      <categories>
          
          <category> 开发语言与技巧 </category>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> numpy </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python科学计算库Numpy之 统计函数</title>
      <link href="2017/03/07/python-numpy-stst/"/>
      <url>2017/03/07/python-numpy-stst/</url>
      
        <content type="html"><![CDATA[<h1 id="numpy-统计函数"><a class="markdownIt-Anchor" href="#numpy-统计函数"></a> NumPy - 统计函数</h1><p>NumPy 有很多有用的统计函数，用于从数组中给定的元素中查找最小，最大，百分标准差和方差等.</p><h3 id="代码举例"><a class="markdownIt-Anchor" href="#代码举例"></a> 代码举例：</h3><p>import numpy as np</p><p>a = np.array([[3, 7, 5], [8, 4, 3], [2, 4, 9]])<br />‘’’<br />numpy.amin() 和 numpy.amax()<br />这些函数从给定数组中的元素沿指定轴返回最小值和最大值<br />‘’’<br />print(np.amin(a, axis=0))<br />print(np.ptp(a, axis=1))  # numpy.ptp()函数返回沿轴的值的范围（最大值 - 最小值）<br />a = np.array([[30, 40, 70], [80, 20, 10], [50, 90, 60]])<br />print(np.percentile(a, 50))<br />print(np.percentile(a, 50, axis=1))  # 分位数是统计中使用的度量，表示小于这个值得观察值占某个百分比<br />print(np.median(a, axis=0))  # 中值定义为将数据样本的上半部分与下半部分分开的值<br />print(np.mean(a, axis=0))  # 算术平均值是沿轴的元素的总和除以元素的数量<br />a = np.array([1, 2, 3, 4])<br />print(np.average(a))  # 加权平均值 不指定权重时相当于 mean 函数<br />wts = np.array([4, 3, 2, 1])<br />print(np.average(a, weights=wts))<br />print(np.average([1, 2, 3, 4], weights=[4, 3, 2, 1], returned=True))  # 如果 returned 参数设为 true，则返回权重的和<br />a = np.arange(6).reshape(3, 2)<br />print(a)<br />wt = np.array([3, 5])<br />print(np.average(a, axis=1, weights=wt))<br />print(np.std([1, 2, 3, 4]))  # 标准差是与均值的偏差的平方的平均值的平方根 公式:std = sqrt(mean((x - x.mean())<strong>2))<br />print(np.var([1, 2, 3, 4]))  # 方差是偏差的平方的平均值，即mean((x - x.mean())</strong> 2)。 换句话说，标准差是方差的平方根</p><h3 id="代码-github地址httpsgithubcomshadowagnoypython_learn"><a class="markdownIt-Anchor" href="#代码-github地址httpsgithubcomshadowagnoypython_learn"></a> 代码 Github地址:<a href="https://github.com/shadowagnoy/python_learn/blob/master/cn/jsledd/numpy/statisticalfunctions.py">https://github.com/shadowagnoy/python_learn/</a></h3><h3 id="参考文档httpsdocsscipyorgdocnumpyreferenceroutineshtml"><a class="markdownIt-Anchor" href="#参考文档httpsdocsscipyorgdocnumpyreferenceroutineshtml"></a> 参考文档：<a href="https://docs.scipy.org/doc/numpy/reference/routines.html">https://docs.scipy.org/doc/numpy/reference/routines.html</a></h3><h3 id="参考文档httpswwwtutorialspointcomnumpyindexhtm"><a class="markdownIt-Anchor" href="#参考文档httpswwwtutorialspointcomnumpyindexhtm"></a> 参考文档：<a href="https://www.tutorialspoint.com/numpy/index.htm">https://www.tutorialspoint.com/numpy/index.htm</a></h3>]]></content>
      
      
      <categories>
          
          <category> 开发语言与技巧 </category>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> numpy </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mongodb 分片+副本集 身份认证和角色创建</title>
      <link href="2017/03/07/mongodb-shard-user/"/>
      <url>2017/03/07/mongodb-shard-user/</url>
      
        <content type="html"><![CDATA[<blockquote><h2 id="简介"><a class="markdownIt-Anchor" href="#简介"></a> 简介：</h2></blockquote><p>mongodb 数据库分片+副本集 搭建完成以后，就可以正常使用，但是有数据安全问题，所以最好设置安全验证。</p><blockquote><h2 id="1创建超级管理员和普通用户"><a class="markdownIt-Anchor" href="#1创建超级管理员和普通用户"></a> 1.创建超级管理员和普通用户</h2></blockquote><p>超级管理员：可管理所有的数据库。 普通用户：某个数据库的管理员。 开启数据库登录认证之前必须要创建一个超级数据库管理员了，否则无法对数据库进行操作。 如何创建用户和数据库授权，请参考Mongodb官方文档。参考地址： <a href="https://docs.mongodb.com/manual/core/security-users/">https://docs.mongodb.com/manual/core/security-users/</a> <a href="https://docs.mongodb.com/manual/tutorial/create-users/">https://docs.mongodb.com/manual/tutorial/create-users/</a></p><h3 id="11数据库角色介绍"><a class="markdownIt-Anchor" href="#11数据库角色介绍"></a> 1.1.数据库角色介绍</h3><p>MongoDB基本的角色 1.数据库用户角色Database UserRoles：read、readWrite; 2.数据库管理角色DatabaseAdministrator Role：dbAdmin、dbOwner、userAdmin； 3.集群管理角色 ClusterAdministartor Roles：clusterAdmin、clusterManager、clusterMonitor、hostManager； 4.备份恢复角色Backup andRestoration Roles：backup、restore； 5.所有数据库角色All-DatabaseRoles：readAnyDatabase、readWriteAnyDatabase、userAdminAnyDatabase、dbAdminAnyDatabase 6.超级用户角色Superuser Roels：root //这里还有几个角色间接或直接提供了系统超级用户的访问（dbOwner 、userAdmin、userAdminAnyDatabase） 其中MongoDB默认是没有开启用户认证的，也就是说游客也拥有超级管理员的权限。userAdminAnyDatabase：有分配角色和用户的权限，但没有查写的权限   具体角色：   Read：允许用户读取指定数据库 readWrite：允许用户读写指定数据库 dbAdmin：允许用户在指定数据库中执行管理函数，如索引创建、删除，查看统计或访问system.profile userAdmin：允许用户向system.users集合写入，可以找指定数据库里创建、删除和管理用户 clusterAdmin：只在admin数据库中可用，赋予用户所有分片和复制集相关函数的管理权限。 readAnyDatabase：只在admin数据库中可用，赋予用户所有数据库的读权限 readWriteAnyDatabase：只在admin数据库中可用，赋予用户所有数据库的读写权限 userAdminAnyDatabase：只在admin数据库中可用，赋予用户所有数据库的userAdmin权限 dbAdminAnyDatabase：只在admin数据库中可用，赋予用户所有数据库的dbAdmin权限。 root：只在admin数据库中可用。超级账号，超级权限 参考文档地址： <a href="https://docs.mongodb.com/manual/reference/built-in-roles/#all-database-roles">https://docs.mongodb.com/manual/reference/built-in-roles/#all-database-roles</a></p><h3 id="12创建管理员用户"><a class="markdownIt-Anchor" href="#12创建管理员用户"></a> 1.2.创建管理员用户</h3><h4 id="创建超级管理员角色用户"><a class="markdownIt-Anchor" href="#创建超级管理员角色用户"></a> 创建超级管理员角色用户</h4><p>在创建数据库超级管理员用户，必须进入到admin数据库下才能创建超级管理员用户。</p><p>[hadoop@new-cdh12 ~]$ Tools/mongodb/bin/mongo new-cdh9:28885<br />MongoDB shell version: 3.2.12<br />connecting to: new-cdh9:28885/test<br />mongos&gt; use admin<br />switched to db admin<br />mongos&gt; db<br />admin<br />mongos&gt; db.createUser({user:‘root’,pwd:’!@cmcc1234’,roles:[{role:‘root’,db:‘admin’}]})<br />Successfully added user: {<br />“user” : “root”,<br />“roles” : [<br />{<br />“role” : “root”,<br />“db” : “admin”<br />}<br />]<br />}<br />mongos&gt;</p><h3 id="13配置用户认证"><a class="markdownIt-Anchor" href="#13配置用户认证"></a> 1.3.配置用户认证</h3><h4 id="131生成keyfile"><a class="markdownIt-Anchor" href="#131生成keyfile"></a> 1.3.1.生成keyfile</h4><p>openssl rand -base64 741 &gt; /hadoop/Tools/mongodb/mongodb-keyfile chmod 600 mongodb-keyfile</p><h4 id="132修改配置文件"><a class="markdownIt-Anchor" href="#132修改配置文件"></a> 1.3.2.修改配置文件</h4><p>除mongos 所有节点的配置文件加上如下内容</p><p>security:<br />keyFile: /hadoop/Tools/mongodb/mongodb-keyfile<br />clusterAuthMode: keyFile<br />authorization: enabled</p><p>mongos 不需要加</p><p>authorization: enabled</p><h4 id="14-创建普通数据库管理员角色用户"><a class="markdownIt-Anchor" href="#14-创建普通数据库管理员角色用户"></a> 1.4 创建普通数据库管理员角色用户</h4><p>[hadoop@new-cdh9 ~]$ Tools/mongodb/bin/mongo new-cdh9:28885<br />MongoDB shell version: 3.2.12<br />connecting to: new-cdh9:28885/test<br />mongos&gt; show collectionsl<br />2017-03-07T14:08:02.562+0800 E QUERY    [thread1] Error: don’t know how to show [collectionsl] :<br />shellHelper.show@src/mongo/shell/utils.js:865:11<br />shellHelper@src/mongo/shell/utils.js:651:15<br />@(shellhelp2):1:1</p><p>mongos&gt; show collections;<br />2017-03-07T14:08:04.948+0800 E QUERY    [thread1] Error: listCollections failed: {<br />“ok” : 0,<br />“errmsg” : “not authorized on test to execute command { listCollections: 1.0, filter: {} }”,<br />“code” : 13<br />} :<br />_getErrorWithCode@src/mongo/shell/utils.js:25:13<br />DB.prototype._getCollectionInfosCommand@src/mongo/shell/db.js:773:1<br />DB.prototype.getCollectionInfos@src/mongo/shell/db.js:785:19<br />DB.prototype.getCollectionNames@src/mongo/shell/db.js:796:16<br />shellHelper.show@src/mongo/shell/utils.js:754:9<br />shellHelper@src/mongo/shell/utils.js:651:15<br />@(shellhelp2):1:1</p><p>mongos&gt; use admin<br />switched to db admin<br />mongos&gt; db.auth(“root”,&quot;!@cmcc1234&quot;)<br />1<br />mongos&gt; show collections;<br />system.users<br />system.version<br />mongos&gt; use family<br />switched to db family<br />mongos&gt; db.createUser({user:‘family’,pwd:‘cmcc1234’,roles:[‘dbAdmin’]})<br />Successfully added user: { “user” : “family”, “roles” : [ “dbAdmin” ] }<br />mongos&gt; db.createUser({user:‘familyadmin’,pwd:‘cmcc1234’,roles:[‘userAdmin’]})<br />Successfully added user: { “user” : “familyadmin”, “roles” : [ “userAdmin” ] }<br />mongos&gt;</p><p>创建两个普通用户，权限分别是： dbAdmin：允许用户在指定数据库中执行管理函数，如索引创建、删除，查看统计或访问system.profile userAdmin：允许用户向system.users集合写入，可以找指定数据库里创建、删除和管理用户 end</p>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
          <category> mongodb </category>
          
      </categories>
      
      
        <tags>
            
            <tag> keyFile </tag>
            
            <tag> mongod </tag>
            
            <tag> 分片 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python科学计算库Numpy之 算数操作</title>
      <link href="2017/03/07/python-numpy-math/"/>
      <url>2017/03/07/python-numpy-math/</url>
      
        <content type="html"><![CDATA[<h1 id="numpy-算数函数"><a class="markdownIt-Anchor" href="#numpy-算数函数"></a> NumPy - 算数函数</h1><p>很容易理解的是，NumPy 包含大量的各种数学运算功能。 NumPy 提供标准的三角函数，算术运算的函数，复数处理函数等。</p><p>import numpy as np</p><p>a = np.array([0, 30, 45, 60, 90])<br />print(np.sin(a * np.pi / 180))  # 不同角度的正弦值<br />print(np.cos(a * np.pi / 180))  # 数组中角度的余弦值<br />print(np.tan(a * np.pi / 180))  # 数组中角度的正切值<br />‘’’<br />arcsin，arccos，和arctan函数返回给定角度的sin，cos和tan的反三角函数。 这些函数的结果可以通过numpy.degrees()函数通过将弧度制转换为角度制来验证<br />‘’’<br />print(np.degrees(np.arcsin(np.sin(a * np.pi / 180))))  # 计算角度的反正弦 转化为角度制<br />print(np.degrees(np.arccos(np.cos(a * np.pi / 180))))  # 计算角度的反余弦 转化为角度制<br />print(np.degrees(np.arctan(np.tan(a * np.pi / 180))))  # 计算角度的反正切 转化为角度制<br />a = np.array([1.0, 5.55, 123, 0.567, 25.532])<br />print(np.around(a))<br />print(np.around(a, decimals=1))  # decimals 要舍入的小数位数。 默认值为0。 如果为负，整数将四舍五入到小数点左侧的位置<br />print(np.around(a, decimals=-1))<br />a = np.array([-1.7, 1.5, -0.2, 0.6, 10])<br />print(np.floor(a))  # 函数返回不大于输入参数的最大整数。 即标量x 的下限是最大的整数i ，使得i &lt;= x。 注意在Python中，向下取整总是从 0 舍入<br />print(np.ceil(a))  # 输入值的上限，即，标量x的上限是最小的整数i ，使得i&gt; = x<br />a = np.arange(9, dtype=np.float_).reshape(3, 3)<br />b = np.array([10, 10, 10])<br />print(np.add(a, b))<br />print(np.subtract(a, b))<br />print(np.multiply(a, b))<br />print(np.divide(a, b))<br />b = np.array([100], dtype=int)<br />print(np.reciprocal(b))  # 倒数<br />a = np.array([10, 100, 1000])<br />print(np.power(a, 2))<br />b = np.array([1, 2, 3])<br />print(np.power(a, b))  # 幂<br />print(np.mod(a, b))<br />print(np.remainder(a, b))  # 元素的除法余数。 函数numpy.remainder()也产生相同的结果<br />a = np.array([-5.6j, 0.2j, 11., 1 + 1j])<br />print(np.real(a))  # 复数类型参数的实部<br />print(np.imag(a))  # 复数类型参数的虚部<br />print(np.conj(a))  # 通过改变虚部的符号而获得的共轭复数<br />print(np.angle(a, deg=True))  # 参数的角度。 函数的参数是degree。 如果为true，返回的角度以角度制来表示，否则为以弧度制来表示</p><h3 id="代码-github地址httpsgithubcomshadowagnoypython_learn"><a class="markdownIt-Anchor" href="#代码-github地址httpsgithubcomshadowagnoypython_learn"></a> 代码 Github地址:<a href="https://github.com/shadowagnoy/python_learn/blob/master/cn/jsledd/numpy/mathematicalfunctions.py">https://github.com/shadowagnoy/python_learn/</a></h3><h3 id="参考文档httpsdocsscipyorgdocnumpyreferenceroutineshtml"><a class="markdownIt-Anchor" href="#参考文档httpsdocsscipyorgdocnumpyreferenceroutineshtml"></a> 参考文档：<a href="https://docs.scipy.org/doc/numpy/reference/routines.html">https://docs.scipy.org/doc/numpy/reference/routines.html</a></h3><h3 id="参考文档httpswwwtutorialspointcomnumpyindexhtm"><a class="markdownIt-Anchor" href="#参考文档httpswwwtutorialspointcomnumpyindexhtm"></a> 参考文档：<a href="https://www.tutorialspoint.com/numpy/index.htm">https://www.tutorialspoint.com/numpy/index.htm</a></h3>]]></content>
      
      
      <categories>
          
          <category> 开发语言与技巧 </category>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> numpy </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mongodb3.2.12 副本集 + 分片 完整安装</title>
      <link href="2017/03/06/mongodb3-2-12-share/"/>
      <url>2017/03/06/mongodb3-2-12-share/</url>
      
        <content type="html"><![CDATA[<blockquote><h2 id="1安装准备"><a class="markdownIt-Anchor" href="#1安装准备"></a> 1.安装准备</h2></blockquote><p>MongoDB安装包：mongodb-Linux-x86_64-rhel70-3.2.8.tgz</p><p>下载地址：<a href="https://www.mongodb.com/download-center#previous">https://www.mongodb.com/download-center#previous</a></p><p>下载MongoDB安装，选择Community Server选项，选中RHEL 6 Linux 64-bit版本下载。</p><p><img src="http://www.jsledd.cn/wp-content/uploads/2017/03/1.png" alt="1" /></p><blockquote><h2 id="2解压mongodb安装包"><a class="markdownIt-Anchor" href="#2解压mongodb安装包"></a> 2.解压MongoDB安装包</h2></blockquote><p>[hadoop@new-cdh9 Tools]$ tar -zxvf mongodb-linux-x86_64-amazon-3.2.12.tgz<br />mongodb-linux-x86_64-amazon-3.2.12/README<br />mongodb-linux-x86_64-amazon-3.2.12/THIRD-PARTY-NOTICES<br />mongodb-linux-x86_64-amazon-3.2.12/MPL-2<br />mongodb-linux-x86_64-amazon-3.2.12/GNU-AGPL-3.0<br />mongodb-linux-x86_64-amazon-3.2.12/bin/mongodump<br />mongodb-linux-x86_64-amazon-3.2.12/bin/mongorestore<br />mongodb-linux-x86_64-amazon-3.2.12/bin/mongoexport<br />mongodb-linux-x86_64-amazon-3.2.12/bin/mongoimport<br />mongodb-linux-x86_64-amazon-3.2.12/bin/mongostat<br />mongodb-linux-x86_64-amazon-3.2.12/bin/mongotop<br />mongodb-linux-x86_64-amazon-3.2.12/bin/bsondump<br />mongodb-linux-x86_64-amazon-3.2.12/bin/mongofiles<br />mongodb-linux-x86_64-amazon-3.2.12/bin/mongooplog<br />mongodb-linux-x86_64-amazon-3.2.12/bin/mongoperf<br />mongodb-linux-x86_64-amazon-3.2.12/bin/mongosniff<br />mongodb-linux-x86_64-amazon-3.2.12/bin/mongod<br />mongodb-linux-x86_64-amazon-3.2.12/bin/mongos<br />mongodb-linux-x86_64-amazon-3.2.12/bin/mongo<br />[hadoop@new-cdh12 Tools]$ mv mongodb-linux-x86_64-amazon-3.2.12 mongodb<br />[hadoop@new-cdh9 Tools]$</p><blockquote><h2 id="3创建mongodb存放数据库文件和日志的目录"><a class="markdownIt-Anchor" href="#3创建mongodb存放数据库文件和日志的目录"></a> 3.创建MongoDB存放数据库文件和日志的目录</h2></blockquote><p>[hadoop@new-cdh12 Tools]$ cd mongodb<br />[hadoop@new-cdh12 mongodb]$ ll<br />total 100<br />drwxrwxr-x 2 hadoop hadoop  4096 Mar  6 18:54 bin<br />-rw-rw-r-- 1 hadoop hadoop 34520 Feb  2 00:41 GNU-AGPL-3.0<br />-rw-rw-r-- 1 hadoop hadoop 16726 Feb  2 00:41 MPL-2<br />-rw-rw-r-- 1 hadoop hadoop  1359 Feb  2 00:41 README<br />-rw-rw-r-- 1 hadoop hadoop 35910 Feb  2 00:41 THIRD-PARTY-NOTICES<br />[hadoop@new-cdh12 mongodb]$ mkdir data log conf<br />[hadoop@new-cdh12 mongodb]$ ll<br />total 108<br />drwxrwxr-x 2 hadoop hadoop  4096 Mar  6 18:54 bin<br />drwxrwxr-x 2 hadoop hadoop  4096 Mar  6 19:03 conf<br />drwxrwxr-x 2 hadoop hadoop  4096 Mar  6 18:58 data<br />-rw-rw-r-- 1 hadoop hadoop 34520 Feb  2 00:41 GNU-AGPL-3.0<br />drwxrwxr-x 2 hadoop hadoop  4096 Mar  6 18:58 log<br />-rw-rw-r-- 1 hadoop hadoop 16726 Feb  2 00:41 MPL-2<br />-rw-rw-r-- 1 hadoop hadoop  1359 Feb  2 00:41 README<br />-rw-rw-r-- 1 hadoop hadoop 35910 Feb  2 00:41 THIRD-PARTY-NOTICES<br />[hadoop@new-cdh12 mongodb]$</p><blockquote><h2 id="4yaml格式mongodconfcore-options"><a class="markdownIt-Anchor" href="#4yaml格式mongodconfcore-options"></a> 4.YAML格式mongod.conf（Core Options）</h2></blockquote><p>配置请参考官方配置：<a href="https://docs.mongodb.com/manual/reference/configuration-options/#core-options">https://docs.mongodb.com/manual/reference/configuration-options/#core-options</a> 我们采用YMAL格式配置mognod.conf文件。首先进入到mongodb的conf目录下，输入命令vim mongod.conf创建配置文件。输入配置信息后，进行保存. <strong>输入:号之后，需要空格隔开</strong></p><p>systemLog:<br />destination:file  #以文件形式输出日志文件，输入file之前，需要空格<br />path: /hadoop/Tools/mongodb/log/shard1/mongodb.log #表示存储日志文件<br />logAppend: true    #日志是追加模式，false是覆盖模式<br />storage:<br />dbPath:/hadoop/Tools/mongodb/data/shard1    #表示存储mongodb数据库文件目录<br />processManagement:<br />fork: true    #作为后台服务运行<br />#net:<br />#         bindIP: 127.0.0.1<br />#         port: 27017<br />#security:<br />#         authorization:enabled</p><blockquote><h2 id="5搭建数据库副本集"><a class="markdownIt-Anchor" href="#5搭建数据库副本集"></a> 5.搭建数据库副本集</h2></blockquote><p>需要准备3台mongod服务器 new-cdh9:27017 new-cdh9:27017 new-cdh9:27017</p><h3 id="1mongodconf文件配置"><a class="markdownIt-Anchor" href="#1mongodconf文件配置"></a> 1.Mongod.conf文件配置</h3><p>在conf/shard1目录下vi mongod.conf文件输入以下内容：</p><p>systemLog:<br />destination: file<br />path: /hadoop/Tools/mongodb/log/shard1/mongodb.log<br />logAppend: true<br />storage:<br />dbPath: /hadoop/Tools/mongodb/data/shard1<br />processManagement:<br />fork: true<br />replication:<br />oplogSizeMB: 5<br />replSetName: re01</p><h3 id="2分别在3台机器上启动副本集"><a class="markdownIt-Anchor" href="#2分别在3台机器上启动副本集"></a> 2.分别在3台机器上启动副本集</h3><p>[hadoop@new-cdh12 Tools]$ mongodb/bin/mongod -f mongodb/conf/shard1/mongod.conf<br />about to fork child process, waiting until server is ready for connections.<br />forked process: 19535<br />child process started successfully, parent exiting</p><p>[hadoop@new-cdh10 Tools]$ mongodb/bin/mongod -f mongodb/conf/shard1/mongod.conf<br />about to fork child process, waiting until server is ready for connections.<br />forked process: 18495</p><p>child process started successfully, parent exiting</p><p>[hadoop@new-cdh9 Tools]$ mongodb/bin/mongod -f mongodb/conf/shard1/mongod.conf<br />about to fork child process, waiting until server is ready for connections.<br />forked process: 11523<br />child process started successfully, parent exiting</p><p>启动之前记得创建所需要的文件夹。</p><h3 id="3初始化副本集"><a class="markdownIt-Anchor" href="#3初始化副本集"></a> 3.初始化副本集</h3><p>[hadoop@new-cdh9 Tools]$ mongodb/bin/mongo<br />MongoDB shell version: 3.2.12<br />connecting to: test<br />Server has startup warnings:<br />2017-03-06T19:57:07.733+0800 I CONTROL  [initandlisten]<br />2017-03-06T19:57:07.733+0800 I CONTROL  [initandlisten] ** WARNING: soft rlimits too low. rlimits set to 31335 processes, 65535 files. Number of processes should be at least 32767.5 : 0.5 times number of files.<br />&gt; config={_id:“re01”,members:[{_id:0,host:“new-cdh9:27017”},{_id:1,host:“new-cdh10:27017”},{_id:2,host:“new-cdh12:27017”}]}<br />{<br />“_id” : “re01”,<br />“members” : [<br />{<br />“_id” : 0,<br />“host” : “new-cdh9:27017”<br />},<br />{<br />“_id” : 1,<br />“host” : “new-cdh10:27017”<br />},<br />{<br />“_id” : 2,<br />“host” : “new-cdh12:27017”<br />}<br />]<br />}<br />&gt; rs.initiate(config)<br />{ “ok” : 1 }<br />re01:OTHER&gt;<br />re01:PRIMARY&gt;<br />re01:PRIMARY&gt;</p><h3 id="4检查副本集状态"><a class="markdownIt-Anchor" href="#4检查副本集状态"></a> 4.检查副本集状态</h3><p>输入rs.status()查看副本集状态。 health：1   //1表明状态是正常，0表明异常 state:1    // 1表明是primary，2表明是slave，即做备份的机器</p><p>re01:PRIMARY&gt; rs.status()<br />{<br />“set” : “re01”,<br />“date” : ISODate(“2017-03-06T12:08:20.110Z”),<br />“myState” : 1,<br />“term” : NumberLong(1),<br />“heartbeatIntervalMillis” : NumberLong(2000),<br />“members” : [<br />{<br />“_id” : 0,<br />“name” : “new-cdh9:27017”,<br />“health” : 1,<br />“state” : 1,<br />“stateStr” : “PRIMARY”,<br />“uptime” : 673,<br />“optime” : {<br />“ts” : Timestamp(1488801896, 1),<br />“t” : NumberLong(1)<br />},<br />“optimeDate” : ISODate(“2017-03-06T12:04:56Z”),<br />“electionTime” : Timestamp(1488801895, 1),<br />“electionDate” : ISODate(“2017-03-06T12:04:55Z”),<br />“configVersion” : 1,<br />“self” : true<br />},<br />{<br />“_id” : 1,<br />“name” : “new-cdh10:27017”,<br />“health” : 1,<br />“state” : 2,<br />“stateStr” : “SECONDARY”,<br />“uptime” : 215,<br />“optime” : {<br />“ts” : Timestamp(1488801896, 1),<br />“t” : NumberLong(1)<br />},<br />“optimeDate” : ISODate(“2017-03-06T12:04:56Z”),<br />“lastHeartbeat” : ISODate(“2017-03-06T12:08:20.001Z”),<br />“lastHeartbeatRecv” : ISODate(“2017-03-06T12:08:18.174Z”),<br />“pingMs” : NumberLong(0),<br />“syncingTo” : “new-cdh12:27017”,<br />“configVersion” : 1<br />},<br />{<br />“_id” : 2,<br />“name” : “new-cdh12:27017”,<br />“health” : 1,<br />“state” : 2,<br />“stateStr” : “SECONDARY”,<br />“uptime” : 215,<br />“optime” : {<br />“ts” : Timestamp(1488801896, 1),<br />“t” : NumberLong(1)<br />},<br />“optimeDate” : ISODate(“2017-03-06T12:04:56Z”),<br />“lastHeartbeat” : ISODate(“2017-03-06T12:08:20.001Z”),<br />“lastHeartbeatRecv” : ISODate(“2017-03-06T12:08:18.123Z”),<br />“pingMs” : NumberLong(0),<br />“syncingTo” : “new-cdh9:27017”,<br />“configVersion” : 1<br />}<br />],<br />“ok” : 1<br />}<br />re01:PRIMARY&gt;</p><blockquote><h2 id="6数据库分片"><a class="markdownIt-Anchor" href="#6数据库分片"></a> 6.数据库分片</h2></blockquote><p>Mongodb分配技术需要最少4台服务区，其中2台为mongod服务器，一台为mongos服务区，另外一太为mongosconfig server服务器。 但是资源不够 所有 通过改变端口的方式，在同一台机器上运行</p><h3 id="1配置另一个副本集"><a class="markdownIt-Anchor" href="#1配置另一个副本集"></a> 1.配置另一个副本集</h3><p>端口改成27018，更改副本集名称 详细配置如下，（创建所需文件件）</p><p>systemLog:<br />destination: file<br />path: /hadoop/Tools/mongodb/log/shard2/mongodb.log<br />logAppend: true<br />storage:<br />dbPath: /hadoop/Tools/mongodb/data/shard2<br />net:<br />bindIp: 0.0.0.0<br />port: 27018<br />processManagement:<br />fork: true<br />replication:<br />oplogSizeMB: 5<br />replSetName: re02</p><p>配置好启动，初始化副本集 参考 上面介绍</p><p>[hadoop@new-cdh10 Tools]$ mongodb/bin/mongo --port 27018<br />MongoDB shell version: 3.2.12<br />connecting to: 127.0.0.1:27018/test<br />Server has startup warnings:<br />2017-03-06T20:42:25.201+0800 I CONTROL  [initandlisten]<br />2017-03-06T20:42:25.201+0800 I CONTROL  [initandlisten] ** WARNING: soft rlimits too low. rlimits set to 31335 processes, 65535 files. Number of processes should be at least 32767.5 : 0.5 times number of files.<br />&gt; config={_id:“re02”,members:[{_id:0,host:“new-cdh9:27018”},{_id:1,host:“new-cdh10:27018”},{_id:2,host:“new-cdh12:27018”}]}<br />{<br />“_id” : “re02”,<br />“members” : [<br />{<br />“_id” : 0,<br />“host” : “new-cdh9:27018”<br />},<br />{<br />“_id” : 1,<br />“host” : “new-cdh10:27018”<br />},<br />{<br />“_id” : 2,<br />“host” : “new-cdh12:27018”<br />}<br />]<br />}<br />&gt; rs.initiate(config)<br />{ “ok” : 1 }<br />re02:OTHER&gt;<br />re02:SECONDARY&gt;<br />re02:PRIMARY&gt; rs.status()<br />{<br />“set” : “re02”,<br />“date” : ISODate(“2017-03-06T12:50:54.839Z”),<br />“myState” : 1,<br />“term” : NumberLong(1),<br />“heartbeatIntervalMillis” : NumberLong(2000),<br />“members” : [<br />{<br />“_id” : 0,<br />“name” : “new-cdh9:27018”,<br />“health” : 1,<br />“state” : 2,<br />“stateStr” : “SECONDARY”,<br />“uptime” : 107,<br />“optime” : {<br />“ts” : Timestamp(1488804559, 2),<br />“t” : NumberLong(1)<br />},<br />“optimeDate” : ISODate(“2017-03-06T12:49:19Z”),<br />“lastHeartbeat” : ISODate(“2017-03-06T12:50:53.350Z”),<br />“lastHeartbeatRecv” : ISODate(“2017-03-06T12:50:53.019Z”),<br />“pingMs” : NumberLong(0),<br />“syncingTo” : “new-cdh10:27018”,<br />“configVersion” : 1<br />},<br />{<br />“_id” : 1,<br />“name” : “new-cdh10:27018”,<br />“health” : 1,<br />“state” : 1,<br />“stateStr” : “PRIMARY”,<br />“uptime” : 510,<br />“optime” : {<br />“ts” : Timestamp(1488804559, 2),<br />“t” : NumberLong(1)<br />},<br />“optimeDate” : ISODate(“2017-03-06T12:49:19Z”),<br />“infoMessage” : “could not find member to sync from”,<br />“electionTime” : Timestamp(1488804559, 1),<br />“electionDate” : ISODate(“2017-03-06T12:49:19Z”),<br />“configVersion” : 1,<br />“self” : true<br />},<br />{<br />“_id” : 2,<br />“name” : “new-cdh12:27018”,<br />“health” : 1,<br />“state” : 2,<br />“stateStr” : “SECONDARY”,<br />“uptime” : 107,<br />“optime” : {<br />“ts” : Timestamp(1488804559, 2),<br />“t” : NumberLong(1)<br />},<br />“optimeDate” : ISODate(“2017-03-06T12:49:19Z”),<br />“lastHeartbeat” : ISODate(“2017-03-06T12:50:53.350Z”),<br />“lastHeartbeatRecv” : ISODate(“2017-03-06T12:50:53.072Z”),<br />“pingMs” : NumberLong(0),<br />“syncingTo” : “new-cdh10:27018”,<br />“configVersion” : 1<br />}<br />],<br />“ok” : 1<br />}<br />re02:PRIMARY&gt;</p><p></p><h3 id="2设置最高优先级强制转换成员为主节点"><a class="markdownIt-Anchor" href="#2设置最高优先级强制转换成员为主节点"></a> 2.设置最高优先级强制转换成员为主节点</h3><p>输入cfg=rs.conf()命令 输入命令： #cfg.members[0].priority=1 #cfg.members[2].priority=0.5</p><p>re02:PRIMARY&gt; cfg=rs.conf()<br />{<br />“_id” : “re02”,<br />“version” : 1,<br />“protocolVersion” : NumberLong(1),<br />“members” : [<br />{<br />“_id” : 0,<br />“host” : “new-cdh9:27018”,<br />“arbiterOnly” : false,<br />“buildIndexes” : true,<br />“hidden” : false,<br />“priority” : 1,<br />“tags” : {</p><pre><code>                    &#125;,                    &quot;slaveDelay&quot; : NumberLong(0),                    &quot;votes&quot; : 1            &#125;,            &#123;                    &quot;_id&quot; : 1,                    &quot;host&quot; : &quot;new-cdh10:27018&quot;,                    &quot;arbiterOnly&quot; : false,                    &quot;buildIndexes&quot; : true,                    &quot;hidden&quot; : false,                    &quot;priority&quot; : 1,                    &quot;tags&quot; : &#123;                    &#125;,                    &quot;slaveDelay&quot; : NumberLong(0),                    &quot;votes&quot; : 1            &#125;,            &#123;                    &quot;_id&quot; : 2,                    &quot;host&quot; : &quot;new-cdh12:27018&quot;,                    &quot;arbiterOnly&quot; : false,                    &quot;buildIndexes&quot; : true,                    &quot;hidden&quot; : false,                    &quot;priority&quot; : 1,                    &quot;tags&quot; : &#123;                    &#125;,                    &quot;slaveDelay&quot; : NumberLong(0),                    &quot;votes&quot; : 1            &#125;    \],    &quot;settings&quot; : &#123;            &quot;chainingAllowed&quot; : true,            &quot;heartbeatIntervalMillis&quot; : 2000,            &quot;heartbeatTimeoutSecs&quot; : 10,            &quot;electionTimeoutMillis&quot; : 10000,            &quot;getLastErrorModes&quot; : &#123;            &#125;,            &quot;getLastErrorDefaults&quot; : &#123;                    &quot;w&quot; : 1,                    &quot;wtimeout&quot; : 0            &#125;,            &quot;replicaSetId&quot; : ObjectId(&quot;58bd5ac24d2b001bf76cbc6a&quot;)    &#125;</code></pre><p>}<br />re02:PRIMARY&gt; cfg.members[2].priority=0.5<br />0.5<br />re02:PRIMARY&gt; cfg.members[0].priority=0.5<br />0.5<br />re02:PRIMARY&gt; cfg.members[1].priority=1<br />1<br />re02:PRIMARY&gt; rs.reconfig(cfg)<br />{ “ok” : 1 }<br />re02:PRIMARY&gt; cfg=rs.conf()<br />{<br />“_id” : “re02”,<br />“version” : 2,<br />“protocolVersion” : NumberLong(1),<br />“members” : [<br />{<br />“_id” : 0,<br />“host” : “new-cdh9:27018”,<br />“arbiterOnly” : false,<br />“buildIndexes” : true,<br />“hidden” : false,<br />“priority” : 0.5,<br />“tags” : {</p><pre><code>                    &#125;,                    &quot;slaveDelay&quot; : NumberLong(0),                    &quot;votes&quot; : 1            &#125;,            &#123;                    &quot;_id&quot; : 1,                    &quot;host&quot; : &quot;new-cdh10:27018&quot;,                    &quot;arbiterOnly&quot; : false,                    &quot;buildIndexes&quot; : true,                    &quot;hidden&quot; : false,                    &quot;priority&quot; : 1,                    &quot;tags&quot; : &#123;                    &#125;,                    &quot;slaveDelay&quot; : NumberLong(0),                    &quot;votes&quot; : 1            &#125;,            &#123;                    &quot;_id&quot; : 2,                    &quot;host&quot; : &quot;new-cdh12:27018&quot;,                    &quot;arbiterOnly&quot; : false,                    &quot;buildIndexes&quot; : true,                    &quot;hidden&quot; : false,                    &quot;priority&quot; : 0.5,                    &quot;tags&quot; : &#123;                    &#125;,                    &quot;slaveDelay&quot; : NumberLong(0),                    &quot;votes&quot; : 1            &#125;    \],    &quot;settings&quot; : &#123;            &quot;chainingAllowed&quot; : true,            &quot;heartbeatIntervalMillis&quot; : 2000,            &quot;heartbeatTimeoutSecs&quot; : 10,            &quot;electionTimeoutMillis&quot; : 10000,            &quot;getLastErrorModes&quot; : &#123;            &#125;,            &quot;getLastErrorDefaults&quot; : &#123;                    &quot;w&quot; : 1,                    &quot;wtimeout&quot; : 0            &#125;,            &quot;replicaSetId&quot; : ObjectId(&quot;58bd5ac24d2b001bf76cbc6a&quot;)    &#125;</code></pre><p>}<br />re02:PRIMARY&gt;</p><p>使分片副本集1 的主节点落在new-cdh9上（操作参考上面） 使分片副本集2 的主节点落在new-cdh10上(操作如上)</p><h3 id="3配置config副本集服务器"><a class="markdownIt-Anchor" href="#3配置config副本集服务器"></a> 3.配置config副本集服务器</h3><p>创建所需文件夹 需要添加上replication节点，需要加上副本集名称。 详细配置如下</p><p>[hadoop@new-cdh9 Tools]$ vi mongodb/conf/config/mongod.conf<br />systemLog:<br />destination: file<br />path: /hadoop/Tools/mongodb/log/config/mongodb.log<br />logAppend: true<br />storage:<br />dbPath: /hadoop/Tools/mongodb/data/config<br />processManagement:<br />fork: true<br />sharding:<br />clusterRole: configsvr<br />replication:<br />oplogSizeMB: 5<br />replSetName: config01<br />~<br />“mongodb/conf/config/mongod.conf” 13L, 326C written<br />[hadoop@new-cdh9 Tools]$ mongodb/bin/mongod -f mongodb/conf/config/mongod.conf<br />about to fork child process, waiting until server is ready for connections.<br />forked process: 11909<br />child process started successfully, parent exiting<br />[hadoop@new-cdh9 Tools]$</p><p>分别在两台机器上启动mongo</p><h3 id="4初始化配置config副本集服务器"><a class="markdownIt-Anchor" href="#4初始化配置config副本集服务器"></a> 4.初始化配置config副本集服务器</h3><p>只能初始化一次</p><p>[hadoop@new-cdh9 Tools]$ mongodb/bin/mongo --port 27019<br />MongoDB shell version: 3.2.12<br />connecting to: 127.0.0.1:27019/test<br />Server has startup warnings:<br />2017-03-06T21:16:45.868+0800 I CONTROL  [initandlisten]<br />2017-03-06T21:16:45.868+0800 I CONTROL  [initandlisten] ** WARNING: soft rlimits too low. rlimits set to 31335 processes, 65535 files. Number of processes should be at least 32767.5 : 0.5 times number of files.<br />&gt; config={_id:“config01”,members:[{_id:0,host:“new-cdh9:27019”},{_id:1,host:“new-cdh10:27019”}]}<br />{<br />“_id” : “config01”,<br />“members” : [<br />{<br />“_id” : 0,<br />“host” : “new-cdh9:27019”<br />},<br />{<br />“_id” : 1,<br />“host” : “new-cdh10:27019”<br />}<br />]<br />}<br />&gt; rs.initiate(config)<br />{ “ok” : 1 }<br />config01:OTHER&gt; rs.status()<br />{<br />“set” : “config01”,<br />“date” : ISODate(“2017-03-06T13:23:38.057Z”),<br />“myState” : 1,<br />“term” : NumberLong(1),<br />“configsvr” : true,<br />“heartbeatIntervalMillis” : NumberLong(2000),<br />“members” : [<br />{<br />“_id” : 0,<br />“name” : “new-cdh9:27019”,<br />“health” : 1,<br />“state” : 1,<br />“stateStr” : “PRIMARY”,<br />“uptime” : 413,<br />“optime” : {<br />“ts” : Timestamp(1488806612, 1),<br />“t” : NumberLong(1)<br />},<br />“optimeDate” : ISODate(“2017-03-06T13:23:32Z”),<br />“infoMessage” : “could not find member to sync from”,<br />“electionTime” : Timestamp(1488806611, 1),<br />“electionDate” : ISODate(“2017-03-06T13:23:31Z”),<br />“configVersion” : 1,<br />“self” : true<br />},<br />{<br />“_id” : 1,<br />“name” : “new-cdh10:27019”,<br />“health” : 1,<br />“state” : 2,<br />“stateStr” : “SECONDARY”,<br />“uptime” : 17,<br />“optime” : {<br />“ts” : Timestamp(1488806612, 1),<br />“t” : NumberLong(1)<br />},<br />“optimeDate” : ISODate(“2017-03-06T13:23:32Z”),<br />“lastHeartbeat” : ISODate(“2017-03-06T13:23:37.996Z”),<br />“lastHeartbeatRecv” : ISODate(“2017-03-06T13:23:34.193Z”),<br />“pingMs” : NumberLong(0),<br />“syncingTo” : “new-cdh9:27019”,<br />“configVersion” : 1<br />}<br />],<br />“ok” : 1<br />}<br />config01:PRIMARY&gt;</p><h3 id="5配置启动mongos服务器"><a class="markdownIt-Anchor" href="#5配置启动mongos服务器"></a> 5.配置启动mongos服务器</h3><p>由于config服务器是副本集结构，所以在配置mognos.conf文件也有所变化。 跟以前不同，这里需要在服务器地址前添加副本集名称，每个服务器之间都要用逗号隔开就可以。这是启动第一个mongos服务器。 以下是mongos.conf文件配置内容：</p><p>systemLog:<br />destination: file<br />path: /hadoop/Tools/mongodb/log/mongos/mongos.log<br />logAppend: true<br />processManagement:<br />fork: true<br />net:<br />port: 28885<br />sharding:<br />configDB: config01/new-cdh9:27019, new-cdh9:27019</p><p>在mongos 集群上分别启动，配置文件相同</p><h3 id="6添加分片副本集"><a class="markdownIt-Anchor" href="#6添加分片副本集"></a> 6.添加分片副本集</h3><p>[hadoop@new-cdh9 Tools]$ mongodb/bin/mongo new-cdh9:28885<br />MongoDB shell version: 3.2.12<br />connecting to: new-cdh9:28885/test<br />mongos&gt; use admin<br />switched to db admin<br />mongos&gt; db.runCommand({addshard:“re01/new-cdh9:27017”})<br />{ “shardAdded” : “re01”, “ok” : 1 }<br />mongos&gt; db.runCommand({addshard:“re02/new-cdh10:27018”})<br />{ “shardAdded” : “re02”, “ok” : 1 }<br />mongos&gt;</p><h3 id="7在mongos中添加分片数据库并设置片键"><a class="markdownIt-Anchor" href="#7在mongos中添加分片数据库并设置片键"></a> 7.在mongos中添加分片数据库并设置片键</h3><p>[hadoop@new-cdh9 ~]$ Tools/mongodb/bin/mongo new-cdh9:28885<br />MongoDB shell version: 3.2.12<br />connecting to: new-cdh9:28885/test<br />mongos&gt; use admin<br />switched to db admin<br />mongos&gt; db.runCommand({enablesharding:“mydbtest”})<br />{ “ok” : 1 }<br />mongos&gt; db.runCommand({shardcollection:“mydbtest.user”,key:{“userName”:“hashed”}})<br />{ “collectionsharded” : “mydbtest.user”, “ok” : 1 }</p><h3 id="8在mongos中测试分片和副本集"><a class="markdownIt-Anchor" href="#8在mongos中测试分片和副本集"></a> 8.在mongos中<strong>测试分片和副本集</strong></h3><p>mongos&gt; use mydbtest<br />switched to db mydbtest<br />mongos&gt; for(var i=0;i&lt;10000;i++){db.user.insert({“userName”:“user”+i,“depart”:“towngas”,“userNo”:“no.”+i})}<br />WriteResult({ “nInserted” : 1 })<br />mongos&gt; db.printShardingStatus()<br />— Sharding Status —<br />sharding version: {<br />“_id” : 1,<br />“minCompatibleVersion” : 5,<br />“currentVersion” : 6,<br />“clusterId” : ObjectId(“58bd66d71f6b1608450ac068”)<br />}<br />shards:<br />{  “_id” : “re01”,  “host” : “re01/new-cdh10:27017,new-cdh12:27017,new-cdh9:27017” }<br />{  “_id” : “re02”,  “host” : “re02/new-cdh10:27018,new-cdh12:27018,new-cdh9:27018” }<br />active mongoses:<br />“3.2.12” : 2<br />balancer:<br />Currently enabled:  yes<br />Currently running:  no<br />Failed balancer rounds in last 5 attempts:  0<br />Migration Results for the last 24 hours:<br />4 : Success<br />2 : Failed with error ‘aborted’, from re02 to re01<br />159 : Failed with error ‘ns not found, should be impossible’, from re02 to re01<br />1 : Failed with error ‘data transfer error’, from re02 to re01<br />databases:<br />{  “_id” : “family”,  “primary” : “re01”,  “partitioned” : false }<br />{  “_id” : “mydb”,  “primary” : “re02”,  “partitioned” : true }<br />mydb.user<br />shard key: { “userName” : 1 }<br />unique: false<br />balancing: true<br />chunks:<br />re01    3<br />re02    5<br />{ “userName” : { “minKey" : 1 } } -->> { "userName" : "user1" } on : re01 Timestamp(2, 0)                         { "userName" : "user1" } -->> { "userName" : "user185791" } on : re01 Timestamp(3, 0)                         { "userName" : "user185791" } -->> { "userName" : "user36485" } on : re01 Timestamp(4, 0)                         { "userName" : "user36485" } -->> { "userName" : "user450641" } on : re02 Timestamp(4, 1)                         { "userName" : "user450641" } -->> { "userName" : "user536435" } on : re02 Timestamp(3, 3)                         { "userName" : "user536435" } -->> { "userName" : "user622228" } on : re02 Timestamp(3, 4)                         { "userName" : "user622228" } -->> { "userName" : "user7" } on : re02 Timestamp(3, 5)                         { "userName" : "user7" } -->> { "userName" : { "maxKey” : 1 } } on : re02 Timestamp(1, 3)<br />{  “_id” : “mydbtest”,  “primary” : “re02”,  “partitioned” : true }<br />mydbtest.user<br />shard key: { “userName” : “hashed” }<br />unique: false<br />balancing: true<br />chunks:<br />re01    2<br />re02    2<br />{ “userName” : { “minKey" : 1 } } -->> { "userName" : NumberLong("-4611686018427387902") } on : re01 Timestamp(2, 2)                         { "userName" : NumberLong("-4611686018427387902") } -->> { "userName" : NumberLong(0) } on : re01 Timestamp(2, 3)                         { "userName" : NumberLong(0) } -->> { "userName" : NumberLong("4611686018427387902") } on : re02 Timestamp(2, 4)                         { "userName" : NumberLong("4611686018427387902") } -->> { "userName" : { "maxKey” : 1 } } on : re02 Timestamp(2, 5)</p><p>mongos&gt; ^C<br />bye</p><p>看结果我们已经把数据分在 re1 和re2 上 分别登录各分片的主节点 查看</p><p>[hadoop@new-cdh9 ~]$ Tools/mongodb/bin/mongo new-cdh9:27017<br />MongoDB shell version: 3.2.12<br />connecting to: new-cdh9:27017/test<br />Server has startup warnings:<br />2017-03-06T19:57:07.733+0800 I CONTROL  [initandlisten]<br />2017-03-06T19:57:07.733+0800 I CONTROL  [initandlisten] ** WARNING: soft rlimits too low. rlimits set to 31335 processes, 65535 files. Number of processes should be at least 32767.5 : 0.5 times number of files.<br />re01:PRIMARY&gt; use mydbtest<br />switched to db mydbtest<br />re01:PRIMARY&gt; db.user.count()<br />4969<br />re01:PRIMARY&gt; ^C<br />bye<br />[hadoop@new-cdh9 ~]$ Tools/mongodb/bin/mongo new-cdh10:27018<br />MongoDB shell version: 3.2.12<br />connecting to: new-cdh10:27018/test<br />Server has startup warnings:<br />2017-03-06T20:42:25.201+0800 I CONTROL  [initandlisten]<br />2017-03-06T20:42:25.201+0800 I CONTROL  [initandlisten] ** WARNING: soft rlimits too low. rlimits set to 31335 processes, 65535 files. Number of processes should be at least 32767.5 : 0.5 times number of files.<br />re02:PRIMARY&gt; use mydbtest<br />switched to db mydbtest<br />re02:PRIMARY&gt; db.user.count()<br />5031<br />re02:PRIMARY&gt;</p><p>行数分别是 5031 + 4969 = 10000 证明我们分片测试成功</p>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
          <category> mongodb </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mongo </tag>
            
            <tag> shard </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python科学计算库Numpy之 字符串操作</title>
      <link href="2017/03/06/python-numpy-string/"/>
      <url>2017/03/06/python-numpy-string/</url>
      
        <content type="html"><![CDATA[<h1 id="numpy-字符串函数"><a class="markdownIt-Anchor" href="#numpy-字符串函数"></a> NumPy - 字符串函数</h1><p>以下函数用于对<code>dtype</code>为<code>numpy.string_</code>或<code>numpy.unicode_</code>的数组执行向量化字符串操作。 它们基于 Python 内置库中的标准字符串函数。</p><p>序号</p><p>函数及描述</p><ol><li></li></ol><p><code>add()</code> 返回两个<code>str</code>或<code>Unicode</code>数组的逐个字符串连接</p><ol start="2"><li></li></ol><p><code>multiply()</code> 返回按元素多重连接后的字符串</p><ol start="3"><li></li></ol><p><code>center()</code> 返回给定字符串的副本，其中元素位于特定字符串的中央</p><ol start="4"><li></li></ol><p><code>capitalize()</code> 返回给定字符串的副本，其中只有第一个字符串大写</p><ol start="5"><li></li></ol><p><code>title()</code> 返回字符串或 Unicode 的按元素标题转换版本</p><ol start="6"><li></li></ol><p><code>lower()</code> 返回一个数组，其元素转换为小写</p><ol start="7"><li></li></ol><p><code>upper()</code> 返回一个数组，其元素转换为大写</p><ol start="8"><li></li></ol><p><code>split()</code> 返回字符串中的单词列表，并使用分隔符来分割</p><ol start="9"><li></li></ol><p><code>splitlines()</code> 返回元素中的行列表，以换行符分割</p><ol start="10"><li></li></ol><p><code>strip()</code> 返回数组副本，其中元素移除了开头或者结尾处的特定字符</p><ol start="11"><li></li></ol><p><code>join()</code> 返回一个字符串，它是序列中字符串的连接</p><ol start="12"><li></li></ol><p><code>replace()</code> 返回字符串的副本，其中所有子字符串的出现位置都被新字符串取代</p><ol start="13"><li></li></ol><p><code>decode()</code> 按元素调用<code>str.decode</code></p><ol start="14"><li></li></ol><p><code>encode()</code> 按元素调用<code>str.encode</code></p><p>这些函数在字符数组类（<code>numpy.char</code>）中定义。 较旧的 Numarray 包包含<code>chararray</code>类。 <code>numpy.char</code>类中的上述函数在执行向量化字符串操作时非常有用。</p><h3 id="代码举例"><a class="markdownIt-Anchor" href="#代码举例"></a> 代码举例：</h3><p>import numpy as np</p><p>print(np.char.add([‘hello’], [‘jsledd’]))<br />print(np.char.multiply(‘Hello ‘, 3))<br />print(np.char.center(‘hello’, 20, fillchar=’*’))  # 此函数返回所需宽度的数组，以便输入字符串位于中心，并使用fillchar在左侧和右侧进行填充<br />print(np.char.capitalize(‘hello world’))  # 首字母大写<br />print(np.char.title(‘hello how are you?’))  # 字符串的按元素标题转换版本，其中每个单词的首字母都大写<br />print(np.char.lower([‘HELLO’, ‘WORLD’]))  # 元素转换为小写<br />print(np.char.upper(‘hello’))<br />print(np.char.split(‘<a href="http://www.jsledd.cn">www.jsledd.cn</a>’, sep=’.’))<br />print(np.char.splitlines(‘hello\nhow are you?’))  # 元素的单词列表，以换行符分割’\n’，’\r’，’\r\n’都会用作换行符<br />print(np.char.strip([‘arora’, ‘admin’, ‘java’], ‘a’))  # 元素移除了开头或结尾处的特定字符<br />print(np.char.join([’:’, ‘-’], [‘dmy’, ‘ymd’]))<br />print(np.char.replace(‘He is a good boy’, ‘is’, ‘was’))<br />print(np.char.encode(‘hello’, ‘cp500’))</p><h3 id="代码-github地址httpsgithubcomshadowagnoypython_learn"><a class="markdownIt-Anchor" href="#代码-github地址httpsgithubcomshadowagnoypython_learn"></a> 代码 Github地址:<a href="https://github.com/shadowagnoy/python_learn/blob/master/cn/jsledd/numpy/stringfunctions.py">https://github.com/shadowagnoy/python_learn/</a></h3><h3 id="参考文档httpsdocsscipyorgdocnumpyreferenceroutineshtml"><a class="markdownIt-Anchor" href="#参考文档httpsdocsscipyorgdocnumpyreferenceroutineshtml"></a> 参考文档：<a href="https://docs.scipy.org/doc/numpy/reference/routines.html">https://docs.scipy.org/doc/numpy/reference/routines.html</a></h3><h3 id="参考文档httpswwwtutorialspointcomnumpyindexhtm"><a class="markdownIt-Anchor" href="#参考文档httpswwwtutorialspointcomnumpyindexhtm"></a> 参考文档：<a href="https://www.tutorialspoint.com/numpy/index.htm">https://www.tutorialspoint.com/numpy/index.htm</a></h3>]]></content>
      
      
      <categories>
          
          <category> 开发语言与技巧 </category>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> numpy </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python科学计算库Numpy之 迭代 nditer</title>
      <link href="2017/03/05/python-numpy-nditer/"/>
      <url>2017/03/05/python-numpy-nditer/</url>
      
        <content type="html"><![CDATA[<h1 id="numpy-数组上的迭代"><a class="markdownIt-Anchor" href="#numpy-数组上的迭代"></a> NumPy - 数组上的迭代</h1><p>NumPy 包包含一个迭代器对象<code>numpy.nditer</code>。 它是一个有效的多维迭代器对象，可以用于在数组上进行迭代。 数组的每个元素可使用 Python 的标准<code>Iterator</code>接口来访问。</p><h2 id="广播迭代"><a class="markdownIt-Anchor" href="#广播迭代"></a> 广播迭代</h2><p>如果两个数组是<strong>可广播的</strong>，<code>nditer</code>组合对象能够同时迭代它们。 假设数组<code>a</code>具有维度 3X4，并且存在维度为 1X4 的另一个数组<code>b</code>，则使用以下类型的迭代器（数组<code>b</code>被广播到<code>a</code>的大小）。</p><h2 id="代码举例"><a class="markdownIt-Anchor" href="#代码举例"></a> 代码举例</h2><p>import numpy as np</p><p>a1 = np.arange(0, 60, 5).reshape(3, 4)<br />print(a1)<br />for x in np.nditer(a1):<br />print(x)<br />print(&quot;-------------------------&quot;)<br /># 迭代的顺序匹配数组的内容布局，而不考虑特定的排序<br />for x in np.nditer(a1.T):<br />print(x)<br />print(&quot;-------------------------&quot;)<br /># 以 C 风格顺序排序：<br />for x in np.nditer(a1.T.copy(order=‘C’)):<br />print(x)<br />print(&quot;-------------------------&quot;)<br /># 以 C 风格顺序排序：<br />for x in np.nditer(a1.T, order=‘C’):<br />print(x)<br />print(&quot;-------------------------&quot;)<br /># 以读写模式修改元素的值<br />for x in np.nditer(a1, op_flags=[‘readwrite’]):<br />x[…] = 2 * x<br />print(a1)<br />print(&quot;-------------------------&quot;)<br />‘’’<br />flags 参数<br />c_index 可以跟踪 C 顺序的索引<br />f_index 可以跟踪 Fortran 顺序的索引<br />multi-index 每次迭代可以跟踪一种索引类型<br />external_loop 给出的值是具有多个值的一维数组，而不是零维数组<br />‘’’<br />for x in np.nditer(a1, flags=[‘external_loop’], order=‘F’):<br />print(x)<br />print(&quot;-------------------------&quot;)<br /># 广播迭代<br />b = np.array([1, 2, 3, 4], dtype=int)<br />for x, y in np.nditer([a1, b]):<br />print(&quot;%d:%d&quot; % (x, y))</p><h3 id="代码-github地址httpsgithubcomshadowagnoypython_learn"><a class="markdownIt-Anchor" href="#代码-github地址httpsgithubcomshadowagnoypython_learn"></a> 代码 Github地址:<a href="https://github.com/shadowagnoy/python_learn/blob/master/cn/jsledd/numpy/nditer.py">https://github.com/shadowagnoy/python_learn/</a></h3><h3 id="参考文档httpsdocsscipyorgdocnumpyreferenceroutineshtml"><a class="markdownIt-Anchor" href="#参考文档httpsdocsscipyorgdocnumpyreferenceroutineshtml"></a> 参考文档：<a href="https://docs.scipy.org/doc/numpy/reference/routines.html">https://docs.scipy.org/doc/numpy/reference/routines.html</a></h3><h3 id="参考文档httpswwwtutorialspointcomnumpyindexhtm"><a class="markdownIt-Anchor" href="#参考文档httpswwwtutorialspointcomnumpyindexhtm"></a> 参考文档：<a href="https://www.tutorialspoint.com/numpy/index.htm">https://www.tutorialspoint.com/numpy/index.htm</a></h3>]]></content>
      
      
      <categories>
          
          <category> 开发语言与技巧 </category>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> numpy </tag>
            
            <tag> nditer </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python科学计算库Numpy之 数组操作</title>
      <link href="2017/03/05/python-numpy-manipulation/"/>
      <url>2017/03/05/python-numpy-manipulation/</url>
      
        <content type="html"><![CDATA[<h1 id="numpy-数组操作"><a class="markdownIt-Anchor" href="#numpy-数组操作"></a> NumPy - 数组操作</h1><h2 id="操作ndarray-的方法"><a class="markdownIt-Anchor" href="#操作ndarray-的方法"></a> 操作ndarray 的方法</h2><blockquote><h3 id="numpyreshape这个函数在不改变数据的条件下修改形状"><a class="markdownIt-Anchor" href="#numpyreshape这个函数在不改变数据的条件下修改形状"></a> <code>numpy.reshape:</code>这个函数在不改变数据的条件下修改形状</h3><h3 id="numpyndarrayflat该函数返回数组上的一维迭代器行为类似-python-内建的迭代器"><a class="markdownIt-Anchor" href="#numpyndarrayflat该函数返回数组上的一维迭代器行为类似-python-内建的迭代器"></a> <code>numpy.ndarray.flat:</code>该函数返回数组上的一维迭代器，行为类似 Python 内建的迭代器</h3><h3 id="numpyndarrayflatten该函数返回折叠为一维的数组副本"><a class="markdownIt-Anchor" href="#numpyndarrayflatten该函数返回折叠为一维的数组副本"></a> <code>numpy.ndarray.flatten:</code>该函数返回折叠为一维的数组副本</h3><h3 id="numpyravel这个函数返回展开的一维数组并且按需生成副本-返回的数组和输入数组拥有相同数据类型"><a class="markdownIt-Anchor" href="#numpyravel这个函数返回展开的一维数组并且按需生成副本-返回的数组和输入数组拥有相同数据类型"></a> <code>numpy.ravel:</code>这个函数返回展开的一维数组，并且按需生成副本。返回的数组和输入数组拥有相同数据类型</h3><h3 id="numpytranspose这个函数翻转给定数组的维度-如果可能的话它会返回一个视图"><a class="markdownIt-Anchor" href="#numpytranspose这个函数翻转给定数组的维度-如果可能的话它会返回一个视图"></a> <code>numpy.transpose:</code>这个函数翻转给定数组的维度。如果可能的话它会返回一个视图</h3><h3 id="numpyndarrayt该函数属于ndarray类行为类似于numpytranspose"><a class="markdownIt-Anchor" href="#numpyndarrayt该函数属于ndarray类行为类似于numpytranspose"></a> <code>numpy.ndarray.T:</code>该函数属于<code>ndarray</code>类，行为类似于<code>numpy.transpose</code></h3><h3 id="numpyrollaxis该函数向后滚动特定的轴直到一个特定位置"><a class="markdownIt-Anchor" href="#numpyrollaxis该函数向后滚动特定的轴直到一个特定位置"></a> <code>numpy.rollaxis:</code>该函数向后滚动特定的轴，直到一个特定位置</h3><h3 id="numpyswapaxes该函数交换数组的两个轴-对于-110-之前的-numpy-版本会返回交换后数组的试图"><a class="markdownIt-Anchor" href="#numpyswapaxes该函数交换数组的两个轴-对于-110-之前的-numpy-版本会返回交换后数组的试图"></a> <code>numpy.swapaxes:</code>该函数交换数组的两个轴。对于 1.10 之前的 NumPy 版本，会返回交换后数组的试图</h3><h3 id="numpybroadcast_to此函数将数组广播到新形状-它在原始数组上返回只读视图-它通常不连续-如果新形状不符合-广播规则该函数可能会抛出valueerror"><a class="markdownIt-Anchor" href="#numpybroadcast_to此函数将数组广播到新形状-它在原始数组上返回只读视图-它通常不连续-如果新形状不符合-广播规则该函数可能会抛出valueerror"></a> <code>numpy.broadcast_to:</code>此函数将数组广播到新形状。 它在原始数组上返回只读视图。 它通常不连续。 如果新形状不符合 广播规则，该函数可能会抛出ValueError</h3><h3 id="numpyexpand_dims函数通过在指定位置插入新的轴来扩展数组形状"><a class="markdownIt-Anchor" href="#numpyexpand_dims函数通过在指定位置插入新的轴来扩展数组形状"></a> <code>numpy.expand_dims：</code>函数通过在指定位置插入新的轴来扩展数组形状</h3><h3 id="numpysqueeze函数从给定数组的形状中删除一维条目"><a class="markdownIt-Anchor" href="#numpysqueeze函数从给定数组的形状中删除一维条目"></a> <code>numpy.squeeze：</code>函数从给定数组的形状中删除一维条目</h3><h3 id="numpyconcatenate数组的连接是指连接-此函数用于沿指定轴连接相同形状的两个或多个数组"><a class="markdownIt-Anchor" href="#numpyconcatenate数组的连接是指连接-此函数用于沿指定轴连接相同形状的两个或多个数组"></a> <code>numpy.concatenate：</code>数组的连接是指连接。 此函数用于沿指定轴连接相同形状的两个或多个数组</h3><h3 id="numpystack此函数沿新轴连接数组序列-此功能添加自-numpy-版本-1100"><a class="markdownIt-Anchor" href="#numpystack此函数沿新轴连接数组序列-此功能添加自-numpy-版本-1100"></a> <code>numpy.stack：</code>此函数沿新轴连接数组序列。 此功能添加自 NumPy 版本 1.10.0</h3><h3 id="numpystack函数的变体通过堆叠来生成水平的单个数组"><a class="markdownIt-Anchor" href="#numpystack函数的变体通过堆叠来生成水平的单个数组"></a> <code>numpy.stack：</code>函数的变体，通过堆叠来生成水平的单个数组</h3><h3 id="numpyvstacknumpystack函数的变体通过堆叠来生成竖直的单个数组"><a class="markdownIt-Anchor" href="#numpyvstacknumpystack函数的变体通过堆叠来生成竖直的单个数组"></a> <code>numpy.vstack：``numpy.stack</code>函数的变体，通过堆叠来生成竖直的单个数组</h3><h3 id="numpysplit该函数沿特定的轴将数组分割为子数组"><a class="markdownIt-Anchor" href="#numpysplit该函数沿特定的轴将数组分割为子数组"></a> <code>numpy.split：</code>该函数沿特定的轴将数组分割为子数组</h3><h3 id="numpyhsplitnumpyhsplit是split函数的特例其中轴为-1-表示水平分割无论输入数组的维度是什么"><a class="markdownIt-Anchor" href="#numpyhsplitnumpyhsplit是split函数的特例其中轴为-1-表示水平分割无论输入数组的维度是什么"></a> <code>numpy.hsplit：``numpy.hsplit</code>是<code>split()</code>函数的特例，其中轴为 1 表示水平分割，无论输入数组的维度是什么</h3><h3 id="numpyvsplitnumpyvsplit是split函数的特例其中轴为-0-表示竖直分割无论输入数组的维度是什么"><a class="markdownIt-Anchor" href="#numpyvsplitnumpyvsplit是split函数的特例其中轴为-0-表示竖直分割无论输入数组的维度是什么"></a> <code>numpy.vsplit：``numpy.vsplit</code>是<code>split()</code>函数的特例，其中轴为 0 表示竖直分割，无论输入数组的维度是什么</h3><h3 id="numpyresize此函数返回指定大小的新数组-如果新大小大于原始大小则包含原始数组中的元素的重复副本"><a class="markdownIt-Anchor" href="#numpyresize此函数返回指定大小的新数组-如果新大小大于原始大小则包含原始数组中的元素的重复副本"></a> <code>numpy.resize：</code>此函数返回指定大小的新数组。 如果新大小大于原始大小，则包含原始数组中的元素的重复副本</h3><h3 id="numpyappend此函数在输入数组的末尾添加值-附加操作不是原地的而是分配新的数组-此外输入数组的维度必须匹配否则将生成valueerror"><a class="markdownIt-Anchor" href="#numpyappend此函数在输入数组的末尾添加值-附加操作不是原地的而是分配新的数组-此外输入数组的维度必须匹配否则将生成valueerror"></a> <code>numpy.append：</code>此函数在输入数组的末尾添加值。 附加操作不是原地的，而是分配新的数组。 此外，输入数组的维度必须匹配否则将生成<code>ValueError</code></h3><h2 id="numpyinsert此函数在给定索引之前沿给定轴在输入数组中插入值-如果值的类型转换为要插入则它与输入数组不同-插入没有原地的函数会返回一个新数组-此外如果未提供轴则输入数组会被展开"><a class="markdownIt-Anchor" href="#numpyinsert此函数在给定索引之前沿给定轴在输入数组中插入值-如果值的类型转换为要插入则它与输入数组不同-插入没有原地的函数会返回一个新数组-此外如果未提供轴则输入数组会被展开"></a> <code>numpy.insert:</code>此函数在给定索引之前，沿给定轴在输入数组中插入值。 如果值的类型转换为要插入，则它与输入数组不同。 插入没有原地的，函数会返回一个新数组。 此外，如果未提供轴，则输入数组会被展开</h2><h3 id="numpydelete此函数返回从输入数组中删除指定子数组的新数组-与insert函数的情况一样如果未提供轴参数则输入数组将展开"><a class="markdownIt-Anchor" href="#numpydelete此函数返回从输入数组中删除指定子数组的新数组-与insert函数的情况一样如果未提供轴参数则输入数组将展开"></a> <code>numpy.delete:</code>此函数返回从输入数组中删除指定子数组的新数组。 与<code>insert()</code>函数的情况一样，如果未提供轴参数，则输入数组将展开</h3><h3 id="numpyunique此函数返回输入数组中的去重元素数组-该函数能够返回一个元组包含去重数组和相关索引的数组-索引的性质取决于函数调用中返回参数的类型"><a class="markdownIt-Anchor" href="#numpyunique此函数返回输入数组中的去重元素数组-该函数能够返回一个元组包含去重数组和相关索引的数组-索引的性质取决于函数调用中返回参数的类型"></a> <code>numpy.unique:</code>此函数返回输入数组中的去重元素数组。 该函数能够返回一个元组，包含去重数组和相关索引的数组。 索引的性质取决于函数调用中返回参数的类型</h3><h3 id="numpybitwise_and通过npbitwise_and函数对输入数组中的整数的二进制表示的相应位执行位与运算"><a class="markdownIt-Anchor" href="#numpybitwise_and通过npbitwise_and函数对输入数组中的整数的二进制表示的相应位执行位与运算"></a> <code>numpy.bitwise_and:</code>通过<code>np.bitwise_and()</code>函数对输入数组中的整数的二进制表示的相应位执行位与运算</h3><h2 id="numpybitwise_or通过npbitwise_or函数对输入数组中的整数的二进制表示的相应位执行位或运算"><a class="markdownIt-Anchor" href="#numpybitwise_or通过npbitwise_or函数对输入数组中的整数的二进制表示的相应位执行位或运算"></a> <code>numpy.bitwise_or:</code>通过<code>np.bitwise_or()</code>函数对输入数组中的整数的二进制表示的相应位执行位或运算</h2><h2 id="numpyinvert此函数计算输入数组中整数的位非结果-对于有符号整数返回补码"><a class="markdownIt-Anchor" href="#numpyinvert此函数计算输入数组中整数的位非结果-对于有符号整数返回补码"></a> <code>numpy.invert</code>此函数计算输入数组中整数的位非结果。 对于有符号整数，返回补码</h2><h2 id="left_shiftnumpyleft-shift函数将数组元素的二进制表示中的位向左移动到指定位置右侧附加相等数量的-0"><a class="markdownIt-Anchor" href="#left_shiftnumpyleft-shift函数将数组元素的二进制表示中的位向左移动到指定位置右侧附加相等数量的-0"></a> <code>left_shift:``numpy.left shift()</code>函数将数组元素的二进制表示中的位向左移动到指定位置，右侧附加相等数量的 0</h2><h2 id="right_shiftnumpyright_shift函数将数组元素的二进制表示中的位向右移动到指定位置左侧附加相等数量的-0"><a class="markdownIt-Anchor" href="#right_shiftnumpyright_shift函数将数组元素的二进制表示中的位向右移动到指定位置左侧附加相等数量的-0"></a> <code>right_shift:``numpy.right_shift()</code>函数将数组元素的二进制表示中的位向右移动到指定位置，左侧附加相等数量的 0</h2></blockquote><h3 id="代码举例"><a class="markdownIt-Anchor" href="#代码举例"></a> 代码举例</h3><p>import numpy as np</p><p>a1 = np.arange(2, 10)<br />a2 = a1.reshape(4, 2)  # 修改形状<br />print(a2)<br />print(a2.flat[5])  # 返回展开数组中的下标的对应元素 (一维迭代器)<br />print(a2.flatten(order=‘F’))  # 以 F 风格顺序展开的数组 返回一维的数组副本<br />print(a2.ravel(order=‘F’))  # 以 F 风格顺序展开的数组 并且按需生成副本<br />print(np.transpose(a2))  # numpy.ndarray.T 功能相同<br />print(&quot;------------------------------------&quot;)<br />a3 = np.arange(8).reshape(2, 2, 2)<br />print(a3)<br />print(np.rollaxis(a3, 2))  # 将轴 2 滚动到轴 0（宽度到深度）<br />print(np.rollaxis(a3, 2, 1))  # 将轴 0 滚动到轴 1：（宽度到高度）<br />print(np.swapaxes(a3, 2, 0))  # 现在交换轴 0（深度方向）到轴 2（宽度方向）<br />x = np.array([[1], [2], [3]])<br />y = np.array([4, 5, 6])<br />b = np.broadcast(x, y)  # 对 y 广播 x.它拥有 iterator 属性，基于自身组件的迭代器元组<br />r, c = b.iters<br />print(b.shape)<br />c = np.empty(b.shape)<br />c.flat = [u + v for (u, v) in b]<br />print©<br />print(x + y)  # 获得了和 NumPy 内建的广播支持相同的结果<br />print(np.broadcast_to(b, (4, 4)))  # 此函数将数组广播到新形状<br />x = np.array(([1, 2], [3, 4]))<br />y = np.expand_dims(x, axis=1)<br />print(x.shape, y.shape)  # 函数通过在指定位置插入新的轴来扩展数组形状<br />x = np.arange(9).reshape(1, 3, 3)<br />y = np.squeeze(x)<br />print(y.shape)<br />x = np.array([[1, 2], [3, 4]])<br />y = np.array([[5, 6], [7, 8]])<br />print(np.concatenate((x, y)))  # 此函数用于沿指定轴连接相同形状的两个或多个数组<br />print(np.concatenate((x, y), axis=1))<br />print(np.stack((x, y), 0))  # 沿轴 0 堆叠两个数组<br />print(np.stack((x, y), 1))  # 沿轴 1 堆叠两个数组<br />print(np.hstack((x, y)))  # 水平堆叠两个数组<br />print(np.vstack((x, y)))  # 竖直堆叠两个数组<br />a = np.arange(9)<br />print(np.split(a, 3))  # np.split(a,[4,7])<br />print(np.split(a, [4, 7]))  # 将数组在一维数组中表明的位置分割<br />a = np.arange(16).reshape(4, 4)<br />print(np.hsplit(a, 2))  # split()函数的特例，其中轴为 1 表示水平分割，无论输入数组的维度是什么<br />print(np.vsplit(a, 2))  # split()函数的特例，其中轴为 0 表示竖直分割，无论输入数组的维度是什么<br />a = np.array([[1, 2, 3], [4, 5, 6]])<br />print(np.resize(a, (3, 2)))<br />print(np.resize(a, (3, 4)))  # 尺寸变大了 出现重复元素<br />print(np.append(a, [7, 8, 9]))  # 向数组添加元素<br />print(np.append(a, [[7, 8, 9]], axis=0))  # 沿轴 0 添加元素<br />print(np.append(a, [[5, 5, 5], [7, 8, 9]], axis=1))  # 沿轴 1 添加元素<br />a = np.array([[1, 2], [3, 4], [5, 6]])<br />print(np.insert(a, 3, [11, 12]))  # '未传递 Axis 参数。 在插入之前输入数组会被展开<br />print(np.insert(a, 1, [11], axis=0))  # 沿轴 0 广播<br />print(np.insert(a, 1, [11], axis=1))  # 沿轴 1 广播<br />a = np.arange(12).reshape(3, 4)<br />print(np.delete(a, 5))  # 未传递 Axis 参数。 在插入之前输入数组会被展开<br />print(np.delete(a, 1, axis=1))  # 删除第二列<br />a = np.array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])<br />print(np.delete(a, np.s_[::2]))  # 包含从数组中删除的替代值的切片<br />a = np.array([5, 2, 6, 2, 7, 5, 6, 8, 2, 9])<br />print(np.unique(a))<br />print(np.unique(a, return_index=True))  # 去重数组的索引数组<br />print(np.unique(a, return_inverse=True))  # 使用下标重构原数组<br />print(np.unique(a, return_counts=True))  # 去重元素的重复数量<br />print(np.bitwise_and(13, 17))  # 位与<br />print(np.bitwise_or(13, 17))  # 位或<br />print(np.invert(np.array([13], dtype=np.uint8)))  # 13 的位反转，其中 ndarray 的 dtype 是 uint8<br />print(np.left_shift(10, 2))  # 将 10 左移两位<br />print(np.right_shift(40, 2))  # 将 40 左移两位</p><h3 id="代码-github地址httpsgithubcomshadowagnoypython_learn"><a class="markdownIt-Anchor" href="#代码-github地址httpsgithubcomshadowagnoypython_learn"></a> 代码 Github地址:<a href="https://github.com/shadowagnoy/python_learn/blob/master/cn/jsledd/numpy/manipulation.py">https://github.com/shadowagnoy/python_learn/</a></h3><h3 id="参考文档httpsdocsscipyorgdocnumpyreferenceroutineshtml"><a class="markdownIt-Anchor" href="#参考文档httpsdocsscipyorgdocnumpyreferenceroutineshtml"></a> 参考文档：<a href="https://docs.scipy.org/doc/numpy/reference/routines.html">https://docs.scipy.org/doc/numpy/reference/routines.html</a></h3><h3 id="参考文档httpswwwtutorialspointcomnumpyindexhtm"><a class="markdownIt-Anchor" href="#参考文档httpswwwtutorialspointcomnumpyindexhtm"></a> 参考文档：<a href="https://www.tutorialspoint.com/numpy/index.htm">https://www.tutorialspoint.com/numpy/index.htm</a></h3>]]></content>
      
      
      <categories>
          
          <category> 开发语言与技巧 </category>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> numpy </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python科学计算库Numpy之 broadcasting</title>
      <link href="2017/03/04/python-numpy-broadcasting/"/>
      <url>2017/03/04/python-numpy-broadcasting/</url>
      
        <content type="html"><![CDATA[<h1 id="numpy-广播"><a class="markdownIt-Anchor" href="#numpy-广播"></a> NumPy - 广播</h1><p>术语<strong>broadcasting</strong>是指 NumPy 在算术运算期间处理不同形状的数组的能力。 对数组的算术运算通常在相应的元素上进行。 如果两个阵列具有完全相同的形状，则这些操作被无缝执行。 如果两个数组的维数不相同，则元素到元素的操作是不可能的。 然而，在 NumPy 中仍然可以对形状不相似的数组进行操作，因为它拥有广播功能。 较小的数组会<strong>广播</strong>到较大数组的大小，以便使它们的形状可兼容。 如果满足以下规则，可以进行广播：</p><ul><li><code>ndim</code>较小的数组会在前面追加一个长度为 1 的维度。</li><li>输出数组的每个维度的大小是输入数组该维度大小的最大值。</li><li>如果输入在每个维度中的大小与输出大小匹配，或其值正好为 1，则在计算中可它。</li><li>如果输入的某个维度大小为 1，则该维度中的第一个数据元素将用于该维度的所有计算。</li></ul><p>如果上述规则产生有效结果，并且满足以下条件之一，那么数组被称为<strong>可广播的</strong>。</p><ul><li>数组拥有相同形状。</li><li>数组拥有相同的维数，每个维度拥有相同长度，或者长度为 1。</li><li>数组拥有极少的维度，可以在其前面追加长度为 1 的维度，使上述条件成立。</li></ul><p>[caption id=&quot;&quot; align=“alignnone” width=“446”]<img src="https://www.tutorialspoint.com/numpy/images/array.jpg" alt="广播来与数组a兼容" /> 广播来与数组a兼容[/caption]</p><h3 id="代码举例"><a class="markdownIt-Anchor" href="#代码举例"></a> 代码举例</h3><p>import numpy as np</p><p>a1 = np.array([[1, 2, 3, 4], [5, 6, 7, 8]])<br />a2 = np.array([10, 20, 30, 40])<br />a3 = np.array([[1, 2], [3, 4]])<br />a4 = np.array([[10, 20], [30, 40]])<br />print(a1 * 6)<br />print(a1 * a2)  # 对应元素相城<br />print(np.dot(a3, a4))  # 矩阵乘</p><h3 id="代码-github地址httpsgithubcomshadowagnoypython_learn"><a class="markdownIt-Anchor" href="#代码-github地址httpsgithubcomshadowagnoypython_learn"></a> 代码 Github地址:<a href="https://github.com/shadowagnoy/python_learn/blob/master/cn/jsledd/numpy/sliceandindex.py">https://github.com/shadowagnoy/python_learn/</a></h3><h3 id="参考文档httpsdocsscipyorgdocnumpyreferenceroutineshtml"><a class="markdownIt-Anchor" href="#参考文档httpsdocsscipyorgdocnumpyreferenceroutineshtml"></a> 参考文档：<a href="https://docs.scipy.org/doc/numpy/reference/routines.html">https://docs.scipy.org/doc/numpy/reference/routines.html</a></h3><h3 id="参考文档httpswwwtutorialspointcomnumpyindexhtm"><a class="markdownIt-Anchor" href="#参考文档httpswwwtutorialspointcomnumpyindexhtm"></a> 参考文档：<a href="https://www.tutorialspoint.com/numpy/index.htm">https://www.tutorialspoint.com/numpy/index.htm</a></h3>]]></content>
      
      
      <categories>
          
          <category> 开发语言与技巧 </category>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> numpy </tag>
            
            <tag> broadcasting </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python科学计算库Numpy之 切片与索引</title>
      <link href="2017/03/03/python-numpy-slice-index/"/>
      <url>2017/03/03/python-numpy-slice-index/</url>
      
        <content type="html"><![CDATA[<h1 id="numpy-切片和索引"><a class="markdownIt-Anchor" href="#numpy-切片和索引"></a> NumPy - 切片和索引</h1><p><code>ndarray</code>对象的内容可以通过索引或切片来访问和修改，就像 Python 的内置容器对象一样。 如前所述，<code>ndarray</code>对象中的元素遵循基于零的索引。 有三种可用的索引方法类型： <strong>字段访问，基本切片</strong>和<strong>高级索引</strong>。 基本切片是 Python 中基本切片概念到 n 维的扩展。 通过将<code>start</code>，<code>stop</code>和<code>step</code>参数提供给内置的<code>slice</code>函数来构造一个 Python <code>slice</code>对象。 此<code>slice</code>对象被传递给数组来提取数组的一部分。</p><h2 id="numpy-高级索引"><a class="markdownIt-Anchor" href="#numpy-高级索引"></a> NumPy - 高级索引</h2><p>如果一个<code>ndarray</code>是非元组序列，数据类型为整数或布尔值的<code>ndarray</code>，或者至少一个元素为序列对象的元组，我们就能够用它来索引<code>ndarray</code>。 <strong>高级索引始终返回数据的副本。 与此相反，切片只提供了一个视图。</strong> 有两种类型的高级索引：整数和布尔值。</p><h3 id="整数索引"><a class="markdownIt-Anchor" href="#整数索引"></a> 整数索引</h3><p>这种机制有助于基于 N 维索引来获取数组中任意元素。 每个整数数组表示该维度的下标值。 当索引的元素个数就是目标<code>ndarray</code>的维度时，会变得相当直接。 以下示例获取了<code>ndarray</code>对象中每一行指定列的一个元素。 因此，行索引包含所有行号，列索引指定要选择的元素。</p><h3 id="布尔索引"><a class="markdownIt-Anchor" href="#布尔索引"></a> 布尔索引</h3><p>当结果对象是布尔运算（例如比较运算符）的结果时，将使用此类型的高级索引。</p><h2 id="numpy-代码举例"><a class="markdownIt-Anchor" href="#numpy-代码举例"></a> NumPy - 代码举例</h2><p>import numpy as np</p><p>a1 = np.arange(10)<br />s1 = slice(2, 7, 2)<br />print(a1[s1])<br />print(a1[2:7:2])  # 切片参数（start:stop:step）<br />print(a1[3])  # 对单个元素进行切片<br />print(a1[3:])  # 对始于索引的元素进行切片<br />print(a1[3:6])  # 对索引之间的元素进行切片,默认step 1<br />a2 = np.array([[1, 2, 3], [3, 4, 5], [4, 5, 6], [6, 7, 8], [9, 10, 11]])<br />print(a2[1:])<br />print(a2[…, 1])  # 返回索引列的ndarray<br />print(a2[1, …])  # 返回索引行的ndarray<br />print(a2[1:, …])  # 返回第二行之后的行的所有列<br />print(a2[[0, 1, 2], [0, 1, 0]])  # 该结果包括数组中(0,0)，(1,1)和(2,0)位置处的元素<br />rows = np.array([[0, 0], [3, 3]])<br />cols = np.array([[0, 2], [0, 2]])<br />print(a2[rows, cols])  # 包含每个角元素的ndarray对象<br />print(a2[1:4, [1, 2]])  # 组合使用<br />print(a2[a2 &gt; 6])  # 切出大于6的元素<br />a3 = np.array([np.nan, 1, 2, np.nan, 3, 4, 5, 2 + 6j])<br />print(a3[~np.isnan(a3)])  # 使用了~（取补运算符）来过滤NaN<br />print(a3[np.iscomplex(a3)])  # 滤掉非复数元素</p><h3 id="代码-github地址httpsgithubcomshadowagnoypython_learn"><a class="markdownIt-Anchor" href="#代码-github地址httpsgithubcomshadowagnoypython_learn"></a> 代码 Github地址:<a href="https://github.com/shadowagnoy/python_learn/blob/master/cn/jsledd/numpy/sliceandindex.py">https://github.com/shadowagnoy/python_learn/</a></h3><h3 id="参考文档httpsdocsscipyorgdocnumpyreferenceroutineshtml"><a class="markdownIt-Anchor" href="#参考文档httpsdocsscipyorgdocnumpyreferenceroutineshtml"></a> 参考文档：<a href="https://docs.scipy.org/doc/numpy/reference/routines.html">https://docs.scipy.org/doc/numpy/reference/routines.html</a></h3><h3 id="参考文档httpswwwtutorialspointcomnumpyindexhtm"><a class="markdownIt-Anchor" href="#参考文档httpswwwtutorialspointcomnumpyindexhtm"></a> 参考文档：<a href="https://www.tutorialspoint.com/numpy/index.htm">https://www.tutorialspoint.com/numpy/index.htm</a></h3>]]></content>
      
      
      <categories>
          
          <category> 开发语言与技巧 </category>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> numpy </tag>
            
            <tag> slice </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python科学计算库Numpy之 属性</title>
      <link href="2017/03/02/python-numpy-attr/"/>
      <url>2017/03/02/python-numpy-attr/</url>
      
        <content type="html"><![CDATA[<h1 id="numpy数组属性"><a class="markdownIt-Anchor" href="#numpy数组属性"></a> <strong>numpy数组属性</strong></h1><h4 id="ndim-这一数组属性返回数组的维数"><a class="markdownIt-Anchor" href="#ndim-这一数组属性返回数组的维数"></a> <strong>ndim : 这一数组属性返回数组的维数</strong></h4><h4 id="shape-这一数组属性返回一个包含数组维度的元组它也可以用于调整数组大小"><a class="markdownIt-Anchor" href="#shape-这一数组属性返回一个包含数组维度的元组它也可以用于调整数组大小"></a> <strong>shape : 这一数组属性返回一个包含数组维度的元组，它也可以用于调整数组大小</strong></h4><h4 id="size-数组的元素个数"><a class="markdownIt-Anchor" href="#size-数组的元素个数"></a> <strong>size : 数组的元素个数</strong></h4><h4 id="dtype-数组的数据类型"><a class="markdownIt-Anchor" href="#dtype-数组的数据类型"></a> <strong>dtype  : 数组的数据类型</strong></h4><h4 id="itemsize-这一数组属性返回数组中每个元素的字节单位长度"><a class="markdownIt-Anchor" href="#itemsize-这一数组属性返回数组中每个元素的字节单位长度"></a> <strong>itemsize : 这一数组属性返回数组中每个元素的字节单位长度</strong></h4><h4 id="nbytes-数组占用的总内存大小以字节为单位"><a class="markdownIt-Anchor" href="#nbytes-数组占用的总内存大小以字节为单位"></a> <strong>nbytes  : 数组占用的总内存大小，以字节为单位</strong></h4><h4 id="flags-ndarray对象拥有以下属性-这个函数返回了它们的当前值"><a class="markdownIt-Anchor" href="#flags-ndarray对象拥有以下属性-这个函数返回了它们的当前值"></a> flags : <code>ndarray</code>对象拥有以下属性。这个函数返回了它们的当前值。</h4><p>序号</p><p>属性及描述</p><ol><li></li></ol><p><code>C_CONTIGUOUS (C)</code> 数组位于单一的、C 风格的连续区段内</p><ol start="2"><li></li></ol><p><code>F_CONTIGUOUS (F)</code> 数组位于单一的、Fortran 风格的连续区段内</p><ol start="3"><li></li></ol><p><code>OWNDATA (O)</code> 数组的内存从其它对象处借用</p><ol start="4"><li></li></ol><p><code>WRITEABLE (W)</code> 数据区域可写入。 将它设置为<code>flase</code>会锁定数据，使其只读</p><ol start="5"><li></li></ol><p><code>ALIGNED (A)</code> 数据和任何元素会为硬件适当对齐</p><ol start="6"><li></li></ol><p><code>UPDATEIFCOPY (U)</code> 这个数组是另一数组的副本。当这个数组释放时，源数组会由这个数组中的元素更新</p><h2 id="代码使用如下"><a class="markdownIt-Anchor" href="#代码使用如下"></a> 代码使用如下：</h2><p>import numpy as np</p><p>a1 = np.array([1, 2, 3, 4], dtype=np.float32)<br />print(a1)<br />print(“数据类型”, type(a1))<br />print(“数组元素数据类型：”, a1.dtype)<br />print(“数组元素总数：”, a1.size)<br />print(“数组形状：”, a1.shape)<br />print(“数组的维度数目”, a1.ndim)<br />print(“数组的维度字节单位长度”, a1.itemsize)<br />print(“数组的flags”, a1.flags)<br />a1.shape = (2, 2)  # 调整数组形状<br />a2 = a1.reshape(4, )  # reshape 来调整数组形状<br />print(a1)<br />print(a2)</p><h3 id="代码-github地址httpsgithubcomshadowagnoypython_learn"><a class="markdownIt-Anchor" href="#代码-github地址httpsgithubcomshadowagnoypython_learn"></a> 代码 Github地址:<a href="https://github.com/shadowagnoy/python_learn/blob/master/cn/jsledd/numpy/ndarrayattr.py">https://github.com/shadowagnoy/python_learn/</a></h3><h3 id="参考文档httpsdocsscipyorgdocnumpyreferenceroutineshtml"><a class="markdownIt-Anchor" href="#参考文档httpsdocsscipyorgdocnumpyreferenceroutineshtml"></a> 参考文档：<a href="https://docs.scipy.org/doc/numpy/reference/routines.html">https://docs.scipy.org/doc/numpy/reference/routines.html</a></h3><h3 id="参考文档httpswwwtutorialspointcomnumpyindexhtm"><a class="markdownIt-Anchor" href="#参考文档httpswwwtutorialspointcomnumpyindexhtm"></a> 参考文档：<a href="https://www.tutorialspoint.com/numpy/index.htm">https://www.tutorialspoint.com/numpy/index.htm</a></h3>]]></content>
      
      
      <categories>
          
          <category> 开发语言与技巧 </category>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> numpy </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python科学计算库Numpy之 dtype</title>
      <link href="2017/03/01/python-numpy-dtype/"/>
      <url>2017/03/01/python-numpy-dtype/</url>
      
        <content type="html"><![CDATA[<h1 id="numpy-数据类型"><a class="markdownIt-Anchor" href="#numpy-数据类型"></a> NumPy - 数据类型</h1><p>NumPy 支持比 Python 更多种类的数值类型。 下表显示了 NumPy 中定义的不同标量数据类型。</p><p>序号</p><p>数据类型及描述</p><ol><li></li></ol><p><code>bool_</code> 存储为一个字节的布尔值（真或假）</p><ol start="2"><li></li></ol><p><code>int_</code> 默认整数，相当于 C 的<code>long</code>，通常为<code>int32</code>或<code>int64</code></p><ol start="3"><li></li></ol><p><code>intc</code> 相当于 C 的<code>int</code>，通常为<code>int32</code>或<code>int64</code></p><ol start="4"><li></li></ol><p><code>intp</code> 用于索引的整数，相当于 C 的<code>size_t</code>，通常为<code>int32</code>或<code>int64</code></p><ol start="5"><li></li></ol><p><code>int8</code> 字节（-128 ~ 127）</p><ol start="6"><li></li></ol><p><code>int16</code> 16 位整数（-32768 ~ 32767）</p><ol start="7"><li></li></ol><p><code>int32</code> 32 位整数（-2147483648 ~ 2147483647）</p><ol start="8"><li></li></ol><p><code>int64</code> 64 位整数（-9223372036854775808 ~ 9223372036854775807）</p><ol start="9"><li></li></ol><p><code>uint8</code> 8 位无符号整数（0 ~ 255）</p><ol start="10"><li></li></ol><p><code>uint16</code> 16 位无符号整数（0 ~ 65535）</p><ol start="11"><li></li></ol><p><code>uint32</code> 32 位无符号整数（0 ~ 4294967295）</p><ol start="12"><li></li></ol><p><code>uint64</code> 64 位无符号整数（0 ~ 18446744073709551615）</p><ol start="13"><li></li></ol><p><code>float_</code> <code>float64</code>的简写</p><ol start="14"><li></li></ol><p><code>float16</code> 半精度浮点：符号位，5 位指数，10 位尾数</p><ol start="15"><li></li></ol><p><code>float32</code> 单精度浮点：符号位，8 位指数，23 位尾数</p><ol start="16"><li></li></ol><p><code>float64</code> 双精度浮点：符号位，11 位指数，52 位尾数</p><ol start="17"><li></li></ol><p><code>complex_</code> <code>complex128</code>的简写</p><ol start="18"><li></li></ol><p><code>complex64</code> 复数，由两个 32 位浮点表示（实部和虚部）</p><ol start="19"><li></li></ol><p><code>complex128</code> 复数，由两个 64 位浮点表示（实部和虚部）</p><p>NumPy 数字类型是<code>dtype</code>（数据类型）对象的实例，每个对象具有唯一的特征。 这些类型可以是<code>np.bool_</code>，<code>np.float32</code>等</p><h2 id="数据类型对象-dtype"><a class="markdownIt-Anchor" href="#数据类型对象-dtype"></a> 数据类型对象 (<code>dtype</code>)</h2><p>数据类型对象描述了对应于数组的固定内存块的解释，取决于以下方面：</p><ul><li>数据类型（整数、浮点或者 Python 对象）</li><li>数据大小</li><li>字节序（小端或大端）</li><li>在结构化类型的情况下，字段的名称，每个字段的数据类型，和每个字段占用的内存块部分。</li><li>如果数据类型是子序列，它的形状和数据类型。</li></ul><p>字节顺序取决于数据类型的前缀<code>&lt;</code>或<code>&gt;</code>。 <code>&lt;</code>意味着编码是小端（最小有效字节存储在最小地址中）。 <code>&gt;</code>意味着编码是大端（最大有效字节存储在最小地址中）。</p><p>import numpy as np</p><p># numpy.dtype(self, obj, align=False, copy=False)<br />‘’’<br />obj  : 被转换为数据类型的对象。<br />align: 如果为true，则向字段添加间隔，使其类似 C 的结构体<br />copy : 生成dtype对象的新副本，如果为flase，结果是内建数据类型对象的引用。<br />‘’’<br />dt1 = np.dtype(np.int32)  # 使用数组标量类型<br />dt2 = np.dtype(‘i4’)  # int8，int16，int32，int64 可替换为等价的字符串 ‘i1’，‘i2’，‘i4’，以及其他<br />dt3 = np.dtype(’&gt;i4’)  # 使用端记号<br />dt4 = np.dtype([(‘age’, np.int8)])  # 创建结构化数据类型<br />arr = np.arange(5)<br />dt5 = arr.astype(np.float64)  # 数据类型转换 !!!不能使用 arr.dtype = ‘float64’!!!<br />ndarray1 = np.array([(10,), (20,), (30,)], dtype=dt4)  # 应用于 ndarray 对象<br />studentdt = np.dtype([(‘name’, ‘S20’), (‘age’, ‘i1’), (‘marks’, ‘f4’)])<br />student = np.array([(‘abc’, 21, 50), (‘xyz’, 18, 75)], dtype=studentdt)<br />print(dt5)<br />print(ndarray1[‘age’])<br />print(studentdt)<br />print(student[‘name’])</p><h3 id="每个内建类型都有一个唯一定义它的字符代码"><a class="markdownIt-Anchor" href="#每个内建类型都有一个唯一定义它的字符代码"></a> 每个内建类型都有一个唯一定义它的字符代码：</h3><ul><li><code>'b'</code>：布尔值</li><li><code>'i'</code>：符号整数</li><li><code>'u'</code>：无符号整数</li><li><code>'f'</code>：浮点</li><li><code>'c'</code>：复数浮点</li><li><code>'m'</code>：时间间隔</li><li><code>'M'</code>：日期时间</li><li><code>'O'</code>：Python 对象</li><li><code>'S', 'a'</code>：字节串</li><li><code>'U'</code>：Unicode</li><li><code>'V'</code>：原始数据（<code>void</code>）</li></ul><h3 id="代码-github地址httpsgithubcomshadowagnoypython_learn"><a class="markdownIt-Anchor" href="#代码-github地址httpsgithubcomshadowagnoypython_learn"></a> 代码 Github地址:<a href="https://github.com/shadowagnoy/python_learn/blob/master/cn/jsledd/numpy/dtype.py">https://github.com/shadowagnoy/python_learn/</a></h3><h3 id="参考文档httpsdocsscipyorgdocnumpyreferenceroutineshtml"><a class="markdownIt-Anchor" href="#参考文档httpsdocsscipyorgdocnumpyreferenceroutineshtml"></a> 参考文档：<a href="https://docs.scipy.org/doc/numpy/reference/routines.html">https://docs.scipy.org/doc/numpy/reference/routines.html</a></h3><h3 id="参考文档httpswwwtutorialspointcomnumpyindexhtm"><a class="markdownIt-Anchor" href="#参考文档httpswwwtutorialspointcomnumpyindexhtm"></a> 参考文档：<a href="https://www.tutorialspoint.com/numpy/index.htm">https://www.tutorialspoint.com/numpy/index.htm</a></h3>]]></content>
      
      
      <categories>
          
          <category> 开发语言与技巧 </category>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> numpy </tag>
            
            <tag> dtype </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python科学计算库Numpy之 ndarray使用</title>
      <link href="2017/02/28/python-numpy-ndarray/"/>
      <url>2017/02/28/python-numpy-ndarray/</url>
      
        <content type="html"><![CDATA[<h1 id="numpy-简介"><a class="markdownIt-Anchor" href="#numpy-简介"></a> NumPy - 简介</h1><p>NumPy 是一个 Python 包。 它代表 “Numeric Python”。 它是一个由多维数组对象和用于处理数组的例程集合组成的库。 <strong>Numeric</strong>，即 NumPy 的前身，是由 Jim Hugunin 开发的。 也开发了另一个包 Numarray ，它拥有一些额外的功能。 2005年，Travis Oliphant 通过将 Numarray 的功能集成到 Numeric 包中来创建 NumPy 包。 这个开源项目有很多贡献者。</p><h2 id="numpy-操作"><a class="markdownIt-Anchor" href="#numpy-操作"></a> NumPy 操作</h2><p>使用NumPy，开发人员可以执行以下操作：</p><ul><li>数组的算数和逻辑运算。</li><li>傅立叶变换和用于图形操作的例程。</li><li>与线性代数有关的操作。 NumPy 拥有线性代数和随机数生成的内置函数。</li></ul><h2 id="numpy-matlab-的替代之一"><a class="markdownIt-Anchor" href="#numpy-matlab-的替代之一"></a> NumPy – MatLab 的替代之一</h2><p>NumPy 通常与 <strong>SciPy</strong>（Scientific Python）和 <strong>Matplotlib</strong>（绘图库）一起使用。 这种组合广泛用于替代 MatLab，是一个流行的技术计算平台。 但是，Python 作为 MatLab 的替代方案，现在被视为一种更加现代和完整的编程语言。 NumPy 是开源的，这是它的一个额外的优势。</p><h1 id="numpy-ndarray-对象"><a class="markdownIt-Anchor" href="#numpy-ndarray-对象"></a> NumPy - Ndarray 对象</h1><p>NumPy 中定义的最重要的对象是称为 <code>ndarray</code> 的 N 维数组类型。 它描述相同类型的元素集合。 可以使用基于零的索引访问集合中的项目。 <code>ndarray</code>中的每个元素在内存中使用相同大小的块。 <code>ndarray</code>中的每个元素是数据类型对象的对象（称为 <code>dtype</code>）。 <code>ndarray</code>类的实例可以通过本教程后面描述的不同的数组创建例程来构造。 基本的<code>ndarray</code>是使用 NumPy 中的数组函数创建的</p><h1 id="ndarray的生成方法"><a class="markdownIt-Anchor" href="#ndarray的生成方法"></a> Ndarray的生成方法</h1><p>import numpy as np</p><p># numpy.array(p_object, dtype=None, copy=True, order=‘K’, subok=False, ndmin=0) 从数组中生成矩阵<br />‘’’<br />object : 数组类对象或者返回数组的方法<br />dtype  : 数组的所需数据类型，可选<br />copy   : 默认为True，对象是否被复制,可选<br />order  : {‘K’, ‘A’, ‘C’, ‘F’} 数组在内存的存放次序，K:尽可能和原数组一致,A:如果原数组是列相邻，按列存储，C:按行，F:按列<br />subok  : 默认情况下，返回的数组被强制为基类数组。 如果为true，则返回子类<br />ndmin  : 数组的最小维数<br />‘’’<br />ndarray1 = np.array([1, 2, 3])  # 一维数组<br />ndarray2 = np.array([[1, 2, 3], [4, 5, 6]])  # 二维数组<br />ndarray3 = np.array([1, 2, 3], ndmin=2)  # 最少是二维数组<br />ndarray4 = np.array([1, 2, 3], dtype=np.int32)  # 指定数组数据类型是整型<br />print(ndarray1)<br />print(ndarray2)<br />print(ndarray3)<br />print(ndarray4)<br /># numpy.empty(shape, dtype=None, order=‘C’) 生成空矩阵<br />‘’’<br />shape  : 矩阵形状,整型元组或者整数<br />‘’’<br />ndarray5 = np.empty([2, 2])<br />print(ndarray5)<br /># numpy.empty_like(prototype, dtype=None, order=‘K’, subok=True) 按之前的矩阵，仿照一个新的矩阵<br />‘’’<br />prototype:仿照的矩阵,按仿照矩阵的类型生成新矩阵<br />‘’’<br />ndarray6 = np.empty_like(ndarray5)  # 仿照之前矩阵，生成新矩阵<br />print(ndarray6)<br /># numpy.eye(N, M=None, k=0, dtype=float, order=‘C’) 生成对角矩阵（主对角线上元素都为1，其他元素都为0<br /># numpy.identity(n, dtype=None) # 生成对角矩阵<br />‘’’<br />N  : 行数<br />M  : 列数，可以不写，默认和行相等<br />k  : 对角线偏移量，正数向右上方偏移，负数向左下方偏移<br />‘’’<br />ndarray7 = np.eye(4, 5)  # 生成4<em>5对角矩阵<br />ndarray8 = np.eye(4, k=1)  # 生成4</em>4对角矩阵,对角线向上偏移一位<br />ndarray9 = np.identity(4)  # 生成4*4对角矩阵<br />print(ndarray7)<br />print(ndarray8)<br />print(ndarray9)</p><p># numpy.ones(shape, dtype=None, order=‘C’) 生成指定形状的矩阵,内容填充1<br /># numpy.ones_like(shape, dtype=None, order=‘C’) 仿照之前的矩阵,内容填充1<br /># numpy.zeros(shape, dtype=None, order=‘C’) 生成指定形状的矩阵,内容填充0<br /># numpy.zeros_like(shape, dtype=None, order=‘C’) 仿照之前的矩阵,内容填充0<br /># numpy.full(shape, fill_value, dtype=None, order=‘C’) 生成指定形状的矩阵,内容填充fill_value<br /># numpy.full_like(shape, fill_value, dtype=None, order=‘C’) 仿照之前的矩阵,内容填充fill_value<br />ndarray10 = np.ones(5)<br />ndarray11 = np.ones_like(ndarray10)<br />print(ndarray10)<br />print(ndarray11)<br />ndarray12 = np.zeros(4)<br />ndarray13 = np.zeros_like(ndarray10)<br />print(ndarray12)<br />print(ndarray13)<br />ndarray14 = np.full((4,), fill_value=“<a href="http://www.jsledd.cn">www.jsledd.cn</a>”)<br />ndarray15 = np.full_like(ndarray10, fill_value=1)<br />print(ndarray12)<br />print(ndarray13)</p><p># numpy.frombuffer(buffer, dtype=None, count=-1, offset=0) frombuffer将data以流的形式读入转化成ndarray对象<br />‘’’<br />buffer  : 任何暴露缓冲区借口的对象<br />count  : 需要读取的数据数量，默认为-1，读取所有数据<br />offset  : 需要读取的起始位置，默认为0<br />‘’’<br />ndarray16 = np.frombuffer(b’<a href="http://www.jsledd.cn">www.jsledd.cn</a>’, dtype=‘S1’)<br />print(ndarray16)<br /># numpy.fromiter(iterable, dtype, count=-1) 可迭代对象生成新的一维数组<br />‘’’<br />iterable 可迭代对象<br />‘’’<br />ndarray17 = np.fromiter(iter(range(5)), dtype=float)<br />print(ndarray17)<br /># numpy.arange(start=None, stop=None, step=None, dtype=None) 从数值范围创建数组<br />‘’’<br />start  : 范围的起始值，默认为0<br />stop  : 范围的终止值（不包含）<br />step  : 两个值的间隔，默认为1<br />‘’’<br />ndarray18 = np.arange(10, 50, 3)<br />print(ndarray18)</p><p># numpy.linspace(start, stop, num=50, endpoint=True, retstep=False, dtype=None) 此函数类似于arange()函数。<br /># 在此函数中，指定了范围之间的均匀间隔数量，而不是步长<br />‘’’<br />stop  : 序列的终止值，如果endpoint为true，该值包含于序列中<br />num  : 要生成的等间隔样例数量，默认为50<br />endpoint  : 序列中是否包含stop值，默认为ture<br />retstep  : 如果为true，返回样例，以及连续数字之间的步长<br />‘’’<br />ndarray19 = np.linspace(10, 20, 5)<br />ndarray20 = np.linspace(10, 20, 5, endpoint=False)<br />print(ndarray19)<br />print(ndarray20)<br />x = np.linspace(1, 2, 5, retstep=True)<br />print(x)<br /># numpy.logscale(start, stop, num=50, endpoint=True, base=10.0, dtype=None)<br /># 此函数返回一个ndarray对象，其中包含在对数刻度上均匀分布的数字。 刻度的开始和结束端点是某个底数的幂，通常为 10<br />‘’’<br />start  : 起始值是base ** start<br />stop  : 起始值是base ** stop<br />endpoint  : 如果为true，终止值包含在输出数组当中<br />base  : 对数空间的底数，默认为10<br />‘’’<br />ndarray21 = np.logspace(1.0, 2.0, num=10)<br />ndarray22 = np.logspace(1, 10, num=10, base=2)<br />print(ndarray21)<br />print(ndarray22)</p><h3 id="代码-github地址httpsgithubcomshadowagnoypython_learn"><a class="markdownIt-Anchor" href="#代码-github地址httpsgithubcomshadowagnoypython_learn"></a> 代码 Github地址:<a href="https://github.com/shadowagnoy/python_learn/blob/master/cn/jsledd/numpy/ndarray.py">https://github.com/shadowagnoy/python_learn</a></h3><h3 id="参考文档httpsdocsscipyorgdocnumpyreferenceroutineshtml"><a class="markdownIt-Anchor" href="#参考文档httpsdocsscipyorgdocnumpyreferenceroutineshtml"></a> 参考文档：<a href="https://docs.scipy.org/doc/numpy/reference/routines.html">https://docs.scipy.org/doc/numpy/reference/routines.html</a></h3><h3 id="参考文档httpswwwtutorialspointcomnumpyindexhtm"><a class="markdownIt-Anchor" href="#参考文档httpswwwtutorialspointcomnumpyindexhtm"></a> 参考文档：<a href="https://www.tutorialspoint.com/numpy/index.htm">https://www.tutorialspoint.com/numpy/index.htm</a></h3>]]></content>
      
      
      <categories>
          
          <category> 开发语言与技巧 </category>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> numpy </tag>
            
            <tag> ndarray </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 学习笔记 threading 使用</title>
      <link href="2017/02/27/python-learn-threading-1/"/>
      <url>2017/02/27/python-learn-threading-1/</url>
      
        <content type="html"><![CDATA[<h1 id="threading方法介绍"><a class="markdownIt-Anchor" href="#threading方法介绍"></a> <strong>threading方法介绍</strong></h1><p>Python3 线程中常用的两个模块为：</p><ul><li><strong>_thread</strong></li><li><strong>threading(推荐使用)</strong></li></ul><p>thread 模块已被废弃。用户可以使用 threading 模块代替。所以，在 Python3 中不能再使用&quot;thread&quot; 模块。为了兼容性，Python3 将 thread 重命名为 “_thread”。</p><h2 id="threading-模块介绍"><a class="markdownIt-Anchor" href="#threading-模块介绍"></a> <strong>threading 模块介绍</strong></h2><p><strong>threading</strong>用于提供线程相关的操作，线程是应用程序中工作的最小单元。python当前版本的多线程库没有实现优先级、线程组，线程也不能被停止、暂停、恢复、中断。 <strong>threading模块提供的类：</strong> 　　Thread, Lock, Rlock, Condition, [Bounded]Semaphore, Event, Timer, local。 <strong>threading 模块提供的常用方法：</strong> threading.currentThread(): 返回当前的线程变量。 threading.enumerate(): 返回一个包含正在运行的线程的list。正在运行指线程启动后、结束前，不包括启动前和终止后的线程。 threading.activeCount(): 返回正在运行的线程数量，与len(threading.enumerate())有相同的结果。 <strong>threading 模块提供的常量：</strong> threading.TIMEOUT_MAX 设置threading全局超时时间。</p><h2 id="构造方法-_threadgroupnone-targetnone-namenone-args-kwargs-_"><a class="markdownIt-Anchor" href="#构造方法-_threadgroupnone-targetnone-namenone-args-kwargs-_"></a> <strong>构造方法：</strong> _Thread(group=None, target=None, name=None, args=(), kwargs={}) _</h2><p>group: 线程组，目前还没有实现，库引用中提示必须是None； target: 要执行的方法； name: 线程名； args/kwargs: 要传入方法的参数。</p><h2 id="实例方法-isalive-返回线程是否在运行-正在运行指启动后-终止前-getsetnamename-获取设置线程名"><a class="markdownIt-Anchor" href="#实例方法-isalive-返回线程是否在运行-正在运行指启动后-终止前-getsetnamename-获取设置线程名"></a> <strong>实例方法：</strong> 　　isAlive(): 返回线程是否在运行。正在运行指启动后、终止前。 get/setName(name): 获取/设置线程名。</h2><p>start():  线程准备就绪，等待CPU调度 is/setDaemon(bool): 获取/设置是后台线程（默认前台线程（False））。（在start之前设置） 如果是后台线程，主线程执行过程中，后台线程也在进行，主线程执行完毕后，后台线程不论成功与否，主线程和后台线程均停止 如果是前台线程，主线程执行过程中，前台线程也在进行，主线程执行完毕后，等待前台线程也执行完成后，程序停止 start(): 启动线程。 join([timeout]): 阻塞当前上下文环境的线程，直到调用此方法的线程终止或到达指定的timeout（可选参数）。</p><p>import time<br />import threading</p><p>def loop1(in1):<br />print(‘Start loop 1 at :’, time.ctime())<br />time.sleep(4)<br />print(‘End loop 1 at:’, time.ctime())</p><p>def loop2(in1, in2):<br />print(‘Start loop 2 at :’, time.ctime())<br />time.sleep(2)<br />print(‘End loop 2 at:’, time.ctime())</p><p>def main():<br />print(“main Starting at:”, time.ctime())</p><pre><code>t1 = threading.Thread(target=loop1, args=(&quot;thread1&quot;,))# 社会守护线程的方法，必须在start之前设置，否则无效t1.setDaemon(True)# t1.daemon = Truet1.start()t2 = threading.Thread(target=loop2, args=(&quot;thread2&quot;, &quot;thread3&quot;))t2.start()t1.join()  # 等待子线程t2.join()print(&quot;All done at:&quot;, time.ctime())</code></pre><p>if __name__ == “__main__”:<br />main()</p>]]></content>
      
      
      <categories>
          
          <category> 开发语言与技巧 </category>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> threading </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VMware 虚拟机中添加新硬盘的方法</title>
      <link href="2017/02/27/vmware-add-disk/"/>
      <url>2017/02/27/vmware-add-disk/</url>
      
        <content type="html"><![CDATA[<p>以前测试hadoop 集群的虚拟机突然发现磁盘空间不足了，决定添加块磁盘。</p><blockquote><p><strong>第一步、选择“VM”----“设置”并打开，将光标定位在 硬盘 这一选项，然后点击下方的添加按钮。</strong></p></blockquote><p><strong><img src="http://www.jsledd.cn/wp-content/uploads/2017/02/20170227_ac1_1.png" alt="20170227_ac1_1" /> <img src="http://www.jsledd.cn/wp-content/uploads/2017/02/20170227_ac1_2.png" alt="20170227_ac1_2" /></strong></p><blockquote><p><strong>第二步、虚拟机中Linux对于虚拟的磁盘的挂载</strong></p></blockquote><ol><li><strong>使用“fdisk -l”的命令查看当前系统的分区（如果刚才设置VMware–setting的时候运行了系统，则会出现下图情况：没有识别到新的磁盘即sdb），解决办法，重启虚拟机：shutdown -r now</strong></li><li><strong>如果执行第一步的时候是关闭虚拟机中的系统的，则使用“fdisk -l 命令的时候则会出现新的磁盘sdb（不过提示未分区）</strong></li><li><strong>对新建的磁盘进行分区及格式化的工作：<strong><strong>输入 fdisk  /dev/sdb</strong></strong>终端会提示：Command （m for help）：</strong></li><li><strong>然后根据提示输入：n<strong><strong>会出现下面的提示，依次输入p 和 1 即可</strong></strong>接着便会提示卷的起始地址和结束地址，都保持默认按回车的即可（意思是只分一个区）</strong></li><li><strong>输入“w”保存并推出</strong></li><li><strong>重启</strong></li><li><strong>格式化 mkfs -t ext4 /dev/sdb1</strong></li><li><strong>下面便是对于分好区的/dev/sdb1 这一个分区进行挂载及访问</strong></li></ol><p>**                  手动挂载：使用mount /dev/sdb1  /要挂载的目录（自己自定义）** **                 访问时：cd  /挂载的目录   即可对其进行存储和访问** **               自动挂载：修改/etc/fstab即可** **                使用vim /etc/fstab打开配置的文件，然后将下面的一行文字添加即可** **                /dev/sdb1       /data（这个挂载的目录你自己设置即可）      ext4    defaults       0   1**   重启看是否生效</p>]]></content>
      
      
      <categories>
          
          <category> 系统与服务 </category>
          
          <category> 虚拟化 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> disk </tag>
            
            <tag> vm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>scala 高阶函数（一）</title>
      <link href="2017/02/23/scala-higher-1/"/>
      <url>2017/02/23/scala-higher-1/</url>
      
        <content type="html"><![CDATA[<p>package com.cmcc.family.utils</p><p>import java.util.concurrent.TimeUnit</p><p>import com.google.common.base.Stopwatch<br />import org.apache.hadoop.hbase.client.Delete<br />import org.apache.hadoop.hbase.util.Bytes</p><p>import scala.collection.mutable</p><p>/**<br />* Created by Administrator on 2016/12/9 0009.<br />*/<br />object MainTest {<br />def sum(f: Int =&gt; Int)(a: Int, b: Int): Int = {<br />if (a &gt; b) 0 else f(a) + sum(f)(a + 1, b)<br />}</p><p>def df(a: Int, b: Int)(c: Int): Int = a * b + c</p><p>def main(args: Array[String]) {<br />val df1: (Int) =&gt; Int = df(1, 2)<br />println(df1(3))//5<br />println(sum(df(1, 2))(1, 4))//18<br />println(sum(x =&gt; x + 3)(1, 4))//22<br />println(sum(x =&gt; x * x)(1, 4))//30<br />println(sum(x =&gt; x + x)(1, 4))//20<br />/*    sum(x=&gt;x*x)(1,4) =&gt; 1 + sum(x=&gt;x*x)(2,4)<br />sum(x=&gt;x*x)(2,4) =&gt; 4 + sum(x=&gt;x*x)(3,4)<br />sum(x=&gt;x*x)(3,4) =&gt; 9 + sum(x=&gt;x*x)(4,4)<br />sum(x=&gt;x*x)(4,4) =&gt; 16 + sum(x=&gt;x*x)(5,4)<br />sum(x=&gt;x*x)(5,4) =&gt; 0*/<br />}<br />}</p><p>scala 高阶函数使用技巧 陆续补充中。。。。</p>]]></content>
      
      
      <categories>
          
          <category> 开发语言与技巧 </category>
          
          <category> scala </category>
          
      </categories>
      
      
        <tags>
            
            <tag> scala </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 学习笔记 老版本多线程使用</title>
      <link href="2017/01/26/python-learn-thread-1/"/>
      <url>2017/01/26/python-learn-thread-1/</url>
      
        <content type="html"><![CDATA[<p>记录学习python 的点点滴滴， github:<a href="https://github.com/shadowagnoy/python_learn">https://github.com/shadowagnoy/python_learn</a></p><p>‘’’<br />利用time函数，生成两个函数<br />顺序调用<br />计算总的运行时间<br />老版本线程池，不建议使用<br />‘’’<br />import time<br />import _thread as thread</p><p>def loop1():<br /># ctime 得到当前时间<br />print(‘Start loop 1 at :’, time.ctime())<br /># 睡眠多长时间，单位是秒<br />time.sleep(4)<br />print(‘End loop 1 at:’, time.ctime())</p><p>def loop2():<br /># ctime 得到当前时间<br />print(‘Start loop 2 at :’, time.ctime())<br /># 睡眠多长时间，单位是秒<br />time.sleep(2)<br />print(‘End loop 2 at:’, time.ctime())</p><p>def main():<br />print(“Starting at:”, time.ctime())<br /># 启动多线程的意思是用多线程去执行某个函数<br /># 启动多线程函数为start_new_thead<br /># 参数两个，一个是需要运行的函数名，第二是函数的参数作为元祖使用，为空则使用空元祖<br /># 注意：如果函数只有一个参数，需要参数后由一个逗号<br />thread.start_new_thread(loop1, ())</p><pre><code>thread.start\_new\_thread(loop2, ())print(&quot;All done at:&quot;, time.ctime())</code></pre><p>if __name__ == ‘__main__’:<br />main()<br />while True:<br />time.sleep(1)</p>]]></content>
      
      
      <categories>
          
          <category> 开发语言与技巧 </category>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> thread </tag>
            
            <tag> 多线程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>YARN中内存资源和CPU资源配置</title>
      <link href="2016/06/23/yarn-memory-cpu-vcode/"/>
      <url>2016/06/23/yarn-memory-cpu-vcode/</url>
      
        <content type="html"><![CDATA[<p>yarn 的修改是基于 hadoop2.7 。</p><h3 id="yarn中内存资源的调度和隔离"><a class="markdownIt-Anchor" href="#yarn中内存资源的调度和隔离"></a> <strong>【YARN****中内存资源的调度和隔离】</strong></h3><p>YARN允许用户配置每个节点上可用的物理内存资源，注意，这里是“可用的”，因为一个节点上的内存会被若干个服务共享，比如一部分给YARN，一部分给HDFS，一部分给HBase等，YARN配置的只是自己可以使用的。</p><h4 id="1-yarnnodemanagerresourcememory-mb"><a class="markdownIt-Anchor" href="#1-yarnnodemanagerresourcememory-mb"></a> <strong>1、yarn.nodemanager.resource.memory-mb：</strong></h4><property> <name>yarn.nodemanager.resource.memory-mb</name>  <value>8192</value></property><p>表示该节点上YARN可使用的物理内存总量，默认是8192（MB），注意，如果你的节点内存资源不够8GB，则需要调减小这个值，而YARN不会智能的探测节点的物理内存总量。</p><h4 id="2-yarnnodemanagervmem-pmem-ratio"><a class="markdownIt-Anchor" href="#2-yarnnodemanagervmem-pmem-ratio"></a> 2、yarn.nodemanager.vmem-pmem-ratio</h4><property> <name>yarn.nodemanager.vmem-pmem-ratio</name> <value>2.1</value></property><p>任务每使用1MB物理内存，最多可使用虚拟内存量，默认是2.1。</p><h4 id="3-yarnnodemanagerpmem-check-enabled"><a class="markdownIt-Anchor" href="#3-yarnnodemanagerpmem-check-enabled"></a> 3、<strong>yarn.nodemanager.pmem-check-enabled</strong></h4><property>        <name>yarn.nodemanager.pmem-check-enabled</name>        <value>true</value>        <source>yarn-default.xml</source></property><p>是否启动一个线程检查每个任务正使用的物理内存量，如果任务超出分配值，则直接将其杀掉，默认是true。</p><h4 id="4-yarnnodemanagervmem-check-enabled"><a class="markdownIt-Anchor" href="#4-yarnnodemanagervmem-check-enabled"></a> 4、<strong>yarn.nodemanager.vmem-check-enabled</strong></h4><property>        <name>yarn.nodemanager.vmem-check-enabled</name>        <value>false</value>    </property><p>是否启动一个线程检查每个任务正使用的虚拟内存量，如果任务超出分配值，则直接将其杀掉，默认是false。</p><h4 id="5-yarnschedulerminimum-allocation-mb"><a class="markdownIt-Anchor" href="#5-yarnschedulerminimum-allocation-mb"></a> <strong>5、yarn.scheduler.minimum-allocation-mb</strong></h4><pre><code>&lt;property&gt;    &lt;name&gt;yarn.scheduler.minimum-allocation-mb&lt;/name&gt;    &lt;value&gt;1024&lt;/value&gt;&lt;/property&gt;</code></pre><p>单个任务可申请的最少物理内存量，默认是1024（MB），如果一个任务申请的物理内存量少于该值，则该对应的值改为这个数。</p><h4 id="6-yarnschedulermaximum-allocation-mb"><a class="markdownIt-Anchor" href="#6-yarnschedulermaximum-allocation-mb"></a> 6、<strong>yarn.scheduler.maximum-allocation-mb</strong></h4><pre><code>&lt;property&gt;    &lt;name&gt;yarn.scheduler.maximum-allocation-mb&lt;/name&gt;    &lt;value&gt;8192&lt;/value&gt;    &lt;source&gt;yarn-default.xml&lt;/source&gt;&lt;/property&gt;</code></pre><p>单个任务可申请的最多物理内存量，默认是8192（MB）。 默认情况下，YARN采用了线程监控的方法判断任务是否超量使用内存，一旦发现超量，则直接将其杀死。由于Cgroups对内存的控制缺乏灵活性（即任务任何时刻不能超过内存上限，如果超过，则直接将其杀死或者报OOM），而Java进程在创建瞬间内存将翻倍，之后骤降到正常值，这种情况下，采用线程监控的方式更加灵活（当发现进程树内存瞬间翻倍超过设定值时，可认为是正常现象，不会将任务杀死），因此YARN未提供Cgroups内存隔离机制。</p><h3 id="yarn中cpu资源的调度和隔离"><a class="markdownIt-Anchor" href="#yarn中cpu资源的调度和隔离"></a> <strong>【YARN<strong><strong>中CPU</strong></strong>资源的调度和隔离】</strong></h3><p>虚拟CPU是YARN自己引入的概念，初衷是，考虑到不同节点的CPU性能可能不同，每个CPU具有的计算能力也是不一样的，比如某个物理CPU的计算能力可能是另外一个物理CPU的2倍，这时候，你可以通过为第一个物理CPU多配置几个虚拟CPU弥补这种差异。用户提交作业时，可以指定每个任务需要的虚拟CPU个数。在YARN中，CPU相关配置参数如下：</p><h4 id="1-yarnnodemanagerresourcecpu-vcores"><a class="markdownIt-Anchor" href="#1-yarnnodemanagerresourcecpu-vcores"></a> 1、<strong>yarn.nodemanager.resource.cpu-vcores</strong></h4><pre><code>&lt;property&gt;    &lt;name&gt;yarn.nodemanager.resource.cpu-vcores&lt;/name&gt;    &lt;value&gt;8&lt;/value&gt;&lt;/property&gt;</code></pre><p>表示该节点上YARN可使用的虚拟CPU个数，默认是8，注意，目前推荐将该值设值为与物理CPU核数数目相同或者倍数。</p><h4 id="2-yarnschedulerminimum-allocation-vcores"><a class="markdownIt-Anchor" href="#2-yarnschedulerminimum-allocation-vcores"></a> 2、<strong>yarn.scheduler.minimum-allocation-vcores</strong></h4><pre><code>&lt;property&gt;    &lt;name&gt;yarn.scheduler.minimum-allocation-vcores&lt;/name&gt;    &lt;value&gt;1&lt;/value&gt;&lt;/property&gt;</code></pre><p>单个任务可申请的最小虚拟CPU个数，默认是1，如果一个任务申请的CPU个数少于该数，则该对应的值改为这个数。</p><h4 id="3-yarnschedulermaximum-allocation-vcores"><a class="markdownIt-Anchor" href="#3-yarnschedulermaximum-allocation-vcores"></a> 3、yarn.scheduler.maximum-allocation-vcores</h4><pre><code>&lt;property&gt;    &lt;name&gt;yarn.scheduler.maximum-allocation-vcores&lt;/name&gt;    &lt;value&gt;4&lt;/value&gt;&lt;/property&gt;</code></pre><p>单个任务可申请的最多虚拟CPU个数，默认是4。</p>]]></content>
      
      
      <categories>
          
          <category> 大数据 </category>
          
          <category> hadoop </category>
          
      </categories>
      
      
        <tags>
            
            <tag> spark </tag>
            
            <tag> hadoop </tag>
            
            <tag> yarn </tag>
            
            <tag> vcore </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SPARK1.6 分布式安装</title>
      <link href="2016/06/23/spark1-6-e5-88-86-e5-b8-83-e5-bc-8f-e5-ae-89-e8-a3-85/"/>
      <url>2016/06/23/spark1-6-e5-88-86-e5-b8-83-e5-bc-8f-e5-ae-89-e8-a3-85/</url>
      
        <content type="html"><![CDATA[<p>安装的前提是 hadoop yarn 正在运行 开始安装</p><h3 id="1-解压安装scala并配置环境变量"><a class="markdownIt-Anchor" href="#1-解压安装scala并配置环境变量"></a> 1、解压安装scala并配置环境变量</h3><p>[hadoop@new-cdh9 soft]$ tar -zvxf scala-2.10.4.tgz<br />[hadoop@new-cdh13 ~]$ vi ~/.bash_profile<br /># .bash_profile</p><p># Get the aliases and functions<br />if [ -f ~/.bashrc ]; then<br />. ~/.bashrc<br />fi</p><p># User specific environment and startup programs<br />export SCALA_HOME=/hadoop/soft/scala-2.10.4/<br />export HADOOP_HOME=/hadoop/soft/hadoop-2.6.0-cdh5.7.0<br />#set zookeeper environment<br />export ZOOKEEPER_HOME=/hadoop/soft/zookeeper-3.4.5-cdh5.7.0</p><p>PATH=<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mi>A</mi><mi>T</mi><mi>H</mi><mo>:</mo></mrow><annotation encoding="application/x-tex">PATH:</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span></span></span>HOME/bin:<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>Z</mi><mi>O</mi><mi>O</mi><mi>K</mi><mi>E</mi><mi>E</mi><mi>P</mi><mi>E</mi><mi>R</mi><mi mathvariant="normal">_</mi><mi>H</mi><mi>O</mi><mi>M</mi><mi>E</mi><mi mathvariant="normal">/</mi><mi>b</mi><mi>i</mi><mi>n</mi><mo>:</mo></mrow><annotation encoding="application/x-tex">ZOOKEEPER\_HOME/bin:</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.06em;vertical-align:-0.31em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord">/</span><span class="mord mathdefault">b</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span></span></span>ZOOKEEPER_HOME/conf:<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>H</mi><mi>A</mi><mi>D</mi><mi>O</mi><mi>O</mi><mi>P</mi><mi mathvariant="normal">_</mi><mi>H</mi><mi>O</mi><mi>M</mi><mi>E</mi><mi mathvariant="normal">/</mi><mi>b</mi><mi>i</mi><mi>n</mi><mo>:</mo></mrow><annotation encoding="application/x-tex">HADOOP\_HOME/bin:</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.06em;vertical-align:-0.31em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord">/</span><span class="mord mathdefault">b</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span></span></span>HADOOP_HOME/sbin:$SCALA_HOME/bin</p><p>export PATH</p><h3 id="2-解压安装spark并配置环境变量"><a class="markdownIt-Anchor" href="#2-解压安装spark并配置环境变量"></a> 2、解压安装spark并配置环境变量</h3><p>[hadoop@new-cdh13 soft]$ tar -zvxf spark-1.6.0-cdh5.7.0.tar.gz<br />[hadoop@new-cdh9 soft]$ vi ~/.bash_profile<br /># .bash_profile</p><p># Get the aliases and functions<br />if [ -f ~/.bashrc ]; then<br />. ~/.bashrc<br />fi</p><p># User specific environment and startup programs<br />export SCALA_HOME=/hadoop/soft/scala-2.10.4/<br />export SPARK_HOME=/hadoop/soft/spark-1.6.0-cdh5.7.0<br />export HBASE_HOME=/hadoop/soft/hbase-1.2.0-cdh5.7.0<br />export HADOOP_HOME=/hadoop/soft/hadoop-2.6.0-cdh5.7.0<br />PATH=<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mi>A</mi><mi>T</mi><mi>H</mi><mo>:</mo></mrow><annotation encoding="application/x-tex">PATH:</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span></span></span>HOME/bin:<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>H</mi><mi>A</mi><mi>D</mi><mi>O</mi><mi>O</mi><mi>P</mi><mi mathvariant="normal">_</mi><mi>H</mi><mi>O</mi><mi>M</mi><mi>E</mi><mi mathvariant="normal">/</mi><mi>b</mi><mi>i</mi><mi>n</mi><mo>:</mo></mrow><annotation encoding="application/x-tex">HADOOP\_HOME/bin:</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.06em;vertical-align:-0.31em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord">/</span><span class="mord mathdefault">b</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span></span></span>HADOOP_HOME/sbin:<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>H</mi><mi>B</mi><mi>A</mi><mi>S</mi><mi>E</mi><mi mathvariant="normal">_</mi><mi>H</mi><mi>O</mi><mi>M</mi><mi>E</mi><mi mathvariant="normal">/</mi><mi>b</mi><mi>i</mi><mi>n</mi><mo>:</mo></mrow><annotation encoding="application/x-tex">HBASE\_HOME/bin:</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.06em;vertical-align:-0.31em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord">/</span><span class="mord mathdefault">b</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span></span></span>SCALA_HOME/bin:$SPARK_HOME/bin</p><p>export PATH</p><h3 id="3-复制配置文件"><a class="markdownIt-Anchor" href="#3-复制配置文件"></a> 3、复制配置文件</h3><p>[hadoop@new-cdh9 conf]$ cd /hadoop/soft/spark-1.6.0-cdh5.7.0/conf<br />[hadoop@new-cdh9 conf]$ cp spark-env.sh.template <a href="http://spark-env.sh">spark-env.sh</a><br />[hadoop@new-cdh9 conf]$ cp slaves.template slaves</p><h3 id="4-修改slaves和spark-envsh-并拷贝到其他节点"><a class="markdownIt-Anchor" href="#4-修改slaves和spark-envsh-并拷贝到其他节点"></a> 4、<a href="http://xn--slavesspark-env-tu9xk88ckt2e.sh">修改slaves和spark-env.sh</a> 并拷贝到其他节点</h3><p>[hadoop@new-cdh9 conf]$ vi slaves</p><h1 id=""><a class="markdownIt-Anchor" href="#"></a> </h1><p># Licensed to the Apache Software Foundation (ASF) under one or more<br /># contributor license agreements.  See the NOTICE file distributed with<br /># this work for additional information regarding copyright ownership.<br /># The ASF licenses this file to You under the Apache License, Version 2.0<br /># (the “License”); you may not use this file except in compliance with<br /># the License.  You may obtain a copy of the License at</p><h1 id="-2"><a class="markdownIt-Anchor" href="#-2"></a> </h1><p>#    <a href="http://www.apache.org/licenses/LICENSE-2.0">http://www.apache.org/licenses/LICENSE-2.0</a></p><h1 id="-3"><a class="markdownIt-Anchor" href="#-3"></a> </h1><p># Unless required by applicable law or agreed to in writing, software<br /># distributed under the License is distributed on an “AS IS” BASIS,<br /># WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br /># See the License for the specific language governing permissions and<br /># limitations under the License.</p><h1 id="-4"><a class="markdownIt-Anchor" href="#-4"></a> </h1><p># A Spark Worker will be started on each of the machines listed below.<br />new-cdh9<br />new-cdh10<br />new-cdh11<br />new-cdh12<br />new-cdh13</p><p>[hadoop@new-cdh9 conf]$ vi <a href="http://spark-env.sh">spark-env.sh</a><br />#update by jingshuai<br />export SPARK_CONF_DIR=/hadoop/soft/spark-1.6.0-cdh5.7.0/conf<br />export SPARK_HOME=/hadoop/soft/spark-1.6.0-cdh5.7.0<br />export JAVA_HOME=/opt/jdk1.7.0_79<br />export SCALA_HOME=/hadoop/soft/scala-2.10.4/<br />export HADOOP_CONF_DIR=/hadoop/soft/hadoop-2.6.0-cdh5.7.0/etc/hadoop<br />export HADOOP_HOME=/hadoop/soft/hadoop-2.6.0-cdh5.7.0<br />### Path of Spark assembly jar in HDFS<br />export SPARK_JAR_HDFS_PATH=hdfs://familyha/user/spark/lib/spark-assembly-1.6.0-cdh5.7.0-hadoop2.6.0-cdh5.7.0.jar<br />SPARK_DIST_CLASSPATH=“<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>H</mi><mi>A</mi><mi>D</mi><mi>O</mi><mi>O</mi><msub><mi>P</mi><mi>H</mi></msub><mi>O</mi><mi>M</mi><mi>E</mi><mi mathvariant="normal">/</mi><mi>s</mi><mi>h</mi><mi>a</mi><mi>r</mi><mi>e</mi><mi mathvariant="normal">/</mi><mi>h</mi><mi>a</mi><mi>d</mi><mi>o</mi><mi>o</mi><mi>p</mi><mi mathvariant="normal">/</mi><mi>c</mi><mi>o</mi><mi>m</mi><mi>m</mi><mi>o</mi><mi>n</mi><mi mathvariant="normal">/</mi><mo>∗</mo><mi mathvariant="normal">&quot;</mi><mi>S</mi><mi>P</mi><mi>A</mi><mi>R</mi><mi>K</mi><mi mathvariant="normal">_</mi><mi>D</mi><mi>I</mi><mi>S</mi><mi>T</mi><mi mathvariant="normal">_</mi><mi>C</mi><mi>L</mi><mi>A</mi><mi>S</mi><mi>S</mi><mi>P</mi><mi>A</mi><mi>T</mi><mi>H</mi><mo>=</mo><mi mathvariant="normal">&quot;</mi></mrow><annotation encoding="application/x-tex">HADOOP_HOME/share/hadoop/common/*&quot;SPARK\_DIST\_CLASSPATH=&quot;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord">/</span><span class="mord mathdefault">s</span><span class="mord mathdefault">h</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">e</span><span class="mord">/</span><span class="mord mathdefault">h</span><span class="mord mathdefault">a</span><span class="mord mathdefault">d</span><span class="mord mathdefault">o</span><span class="mord mathdefault">o</span><span class="mord mathdefault">p</span><span class="mord">/</span><span class="mord mathdefault">c</span><span class="mord mathdefault">o</span><span class="mord mathdefault">m</span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">n</span><span class="mord">/</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.00444em;vertical-align:-0.31em;"></span><span class="mord">&quot;</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault">L</span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">&quot;</span></span></span></span>SPARK_DIST_CLASSPATH:<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>H</mi><mi>A</mi><mi>D</mi><mi>O</mi><mi>O</mi><msub><mi>P</mi><mi>H</mi></msub><mi>O</mi><mi>M</mi><mi>E</mi><mi mathvariant="normal">/</mi><mi>s</mi><mi>h</mi><mi>a</mi><mi>r</mi><mi>e</mi><mi mathvariant="normal">/</mi><mi>h</mi><mi>a</mi><mi>d</mi><mi>o</mi><mi>o</mi><mi>p</mi><mi mathvariant="normal">/</mi><mi>c</mi><mi>o</mi><mi>m</mi><mi>m</mi><mi>o</mi><mi>n</mi><mi mathvariant="normal">/</mi><mi>l</mi><mi>i</mi><mi>b</mi><mi mathvariant="normal">/</mi><mo>∗</mo><mi mathvariant="normal">&quot;</mi><mi>S</mi><mi>P</mi><mi>A</mi><mi>R</mi><mi>K</mi><mi mathvariant="normal">_</mi><mi>D</mi><mi>I</mi><mi>S</mi><mi>T</mi><mi mathvariant="normal">_</mi><mi>C</mi><mi>L</mi><mi>A</mi><mi>S</mi><mi>S</mi><mi>P</mi><mi>A</mi><mi>T</mi><mi>H</mi><mo>=</mo><mi mathvariant="normal">&quot;</mi></mrow><annotation encoding="application/x-tex">HADOOP_HOME/share/hadoop/common/lib/*&quot;SPARK\_DIST\_CLASSPATH=&quot;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord">/</span><span class="mord mathdefault">s</span><span class="mord mathdefault">h</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">e</span><span class="mord">/</span><span class="mord mathdefault">h</span><span class="mord mathdefault">a</span><span class="mord mathdefault">d</span><span class="mord mathdefault">o</span><span class="mord mathdefault">o</span><span class="mord mathdefault">p</span><span class="mord">/</span><span class="mord mathdefault">c</span><span class="mord mathdefault">o</span><span class="mord mathdefault">m</span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">n</span><span class="mord">/</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">i</span><span class="mord mathdefault">b</span><span class="mord">/</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.00444em;vertical-align:-0.31em;"></span><span class="mord">&quot;</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault">L</span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">&quot;</span></span></span></span>SPARK_DIST_CLASSPATH:<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>H</mi><mi>A</mi><mi>D</mi><mi>O</mi><mi>O</mi><msub><mi>P</mi><mi>H</mi></msub><mi>O</mi><mi>M</mi><mi>E</mi><mi mathvariant="normal">/</mi><mi>s</mi><mi>h</mi><mi>a</mi><mi>r</mi><mi>e</mi><mi mathvariant="normal">/</mi><mi>h</mi><mi>a</mi><mi>d</mi><mi>o</mi><mi>o</mi><mi>p</mi><mi mathvariant="normal">/</mi><mi>m</mi><mi>a</mi><mi>p</mi><mi>r</mi><mi>e</mi><mi>d</mi><mi>u</mi><mi>c</mi><mi>e</mi><mi mathvariant="normal">/</mi><mo>∗</mo><mi mathvariant="normal">&quot;</mi><mi>S</mi><mi>P</mi><mi>A</mi><mi>R</mi><mi>K</mi><mi mathvariant="normal">_</mi><mi>D</mi><mi>I</mi><mi>S</mi><mi>T</mi><mi mathvariant="normal">_</mi><mi>C</mi><mi>L</mi><mi>A</mi><mi>S</mi><mi>S</mi><mi>P</mi><mi>A</mi><mi>T</mi><mi>H</mi><mo>=</mo><mi mathvariant="normal">&quot;</mi></mrow><annotation encoding="application/x-tex">HADOOP_HOME/share/hadoop/mapreduce/*&quot;SPARK\_DIST\_CLASSPATH=&quot;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord">/</span><span class="mord mathdefault">s</span><span class="mord mathdefault">h</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">e</span><span class="mord">/</span><span class="mord mathdefault">h</span><span class="mord mathdefault">a</span><span class="mord mathdefault">d</span><span class="mord mathdefault">o</span><span class="mord mathdefault">o</span><span class="mord mathdefault">p</span><span class="mord">/</span><span class="mord mathdefault">m</span><span class="mord mathdefault">a</span><span class="mord mathdefault">p</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">e</span><span class="mord mathdefault">d</span><span class="mord mathdefault">u</span><span class="mord mathdefault">c</span><span class="mord mathdefault">e</span><span class="mord">/</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.00444em;vertical-align:-0.31em;"></span><span class="mord">&quot;</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault">L</span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">&quot;</span></span></span></span>SPARK_DIST_CLASSPATH:<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>H</mi><mi>A</mi><mi>D</mi><mi>O</mi><mi>O</mi><msub><mi>P</mi><mi>H</mi></msub><mi>O</mi><mi>M</mi><mi>E</mi><mi mathvariant="normal">/</mi><mi>s</mi><mi>h</mi><mi>a</mi><mi>r</mi><mi>e</mi><mi mathvariant="normal">/</mi><mi>h</mi><mi>a</mi><mi>d</mi><mi>o</mi><mi>o</mi><mi>p</mi><mi mathvariant="normal">/</mi><mi>m</mi><mi>a</mi><mi>p</mi><mi>r</mi><mi>e</mi><mi>d</mi><mi>u</mi><mi>c</mi><mi>e</mi><mi mathvariant="normal">/</mi><mi>l</mi><mi>i</mi><mi>b</mi><mi mathvariant="normal">/</mi><mo>∗</mo><mi mathvariant="normal">&quot;</mi><mi>S</mi><mi>P</mi><mi>A</mi><mi>R</mi><mi>K</mi><mi mathvariant="normal">_</mi><mi>D</mi><mi>I</mi><mi>S</mi><mi>T</mi><mi mathvariant="normal">_</mi><mi>C</mi><mi>L</mi><mi>A</mi><mi>S</mi><mi>S</mi><mi>P</mi><mi>A</mi><mi>T</mi><mi>H</mi><mo>=</mo><mi mathvariant="normal">&quot;</mi></mrow><annotation encoding="application/x-tex">HADOOP_HOME/share/hadoop/mapreduce/lib/*&quot;SPARK\_DIST\_CLASSPATH=&quot;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord">/</span><span class="mord mathdefault">s</span><span class="mord mathdefault">h</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">e</span><span class="mord">/</span><span class="mord mathdefault">h</span><span class="mord mathdefault">a</span><span class="mord mathdefault">d</span><span class="mord mathdefault">o</span><span class="mord mathdefault">o</span><span class="mord mathdefault">p</span><span class="mord">/</span><span class="mord mathdefault">m</span><span class="mord mathdefault">a</span><span class="mord mathdefault">p</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">e</span><span class="mord mathdefault">d</span><span class="mord mathdefault">u</span><span class="mord mathdefault">c</span><span class="mord mathdefault">e</span><span class="mord">/</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">i</span><span class="mord mathdefault">b</span><span class="mord">/</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.00444em;vertical-align:-0.31em;"></span><span class="mord">&quot;</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault">L</span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">&quot;</span></span></span></span>SPARK_DIST_CLASSPATH:<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>H</mi><mi>A</mi><mi>D</mi><mi>O</mi><mi>O</mi><msub><mi>P</mi><mi>H</mi></msub><mi>O</mi><mi>M</mi><mi>E</mi><mi mathvariant="normal">/</mi><mi>s</mi><mi>h</mi><mi>a</mi><mi>r</mi><mi>e</mi><mi mathvariant="normal">/</mi><mi>h</mi><mi>a</mi><mi>d</mi><mi>o</mi><mi>o</mi><mi>p</mi><mi mathvariant="normal">/</mi><mi>y</mi><mi>a</mi><mi>r</mi><mi>n</mi><mi mathvariant="normal">/</mi><mo>∗</mo><mi mathvariant="normal">&quot;</mi><mi>S</mi><mi>P</mi><mi>A</mi><mi>R</mi><mi>K</mi><mi mathvariant="normal">_</mi><mi>D</mi><mi>I</mi><mi>S</mi><mi>T</mi><mi mathvariant="normal">_</mi><mi>C</mi><mi>L</mi><mi>A</mi><mi>S</mi><mi>S</mi><mi>P</mi><mi>A</mi><mi>T</mi><mi>H</mi><mo>=</mo><mi mathvariant="normal">&quot;</mi></mrow><annotation encoding="application/x-tex">HADOOP_HOME/share/hadoop/yarn/*&quot;SPARK\_DIST\_CLASSPATH=&quot;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord">/</span><span class="mord mathdefault">s</span><span class="mord mathdefault">h</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">e</span><span class="mord">/</span><span class="mord mathdefault">h</span><span class="mord mathdefault">a</span><span class="mord mathdefault">d</span><span class="mord mathdefault">o</span><span class="mord mathdefault">o</span><span class="mord mathdefault">p</span><span class="mord">/</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">n</span><span class="mord">/</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.00444em;vertical-align:-0.31em;"></span><span class="mord">&quot;</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault">L</span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">&quot;</span></span></span></span>SPARK_DIST_CLASSPATH:<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>H</mi><mi>A</mi><mi>D</mi><mi>O</mi><mi>O</mi><msub><mi>P</mi><mi>H</mi></msub><mi>O</mi><mi>M</mi><mi>E</mi><mi mathvariant="normal">/</mi><mi>s</mi><mi>h</mi><mi>a</mi><mi>r</mi><mi>e</mi><mi mathvariant="normal">/</mi><mi>h</mi><mi>a</mi><mi>d</mi><mi>o</mi><mi>o</mi><mi>p</mi><mi mathvariant="normal">/</mi><mi>y</mi><mi>a</mi><mi>r</mi><mi>n</mi><mi mathvariant="normal">/</mi><mi>l</mi><mi>i</mi><mi>b</mi><mi mathvariant="normal">/</mi><mo>∗</mo><mi mathvariant="normal">&quot;</mi><mi>S</mi><mi>P</mi><mi>A</mi><mi>R</mi><mi>K</mi><mi mathvariant="normal">_</mi><mi>D</mi><mi>I</mi><mi>S</mi><mi>T</mi><mi mathvariant="normal">_</mi><mi>C</mi><mi>L</mi><mi>A</mi><mi>S</mi><mi>S</mi><mi>P</mi><mi>A</mi><mi>T</mi><mi>H</mi><mo>=</mo><mi mathvariant="normal">&quot;</mi></mrow><annotation encoding="application/x-tex">HADOOP_HOME/share/hadoop/yarn/lib/*&quot;SPARK\_DIST\_CLASSPATH=&quot;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord">/</span><span class="mord mathdefault">s</span><span class="mord mathdefault">h</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">e</span><span class="mord">/</span><span class="mord mathdefault">h</span><span class="mord mathdefault">a</span><span class="mord mathdefault">d</span><span class="mord mathdefault">o</span><span class="mord mathdefault">o</span><span class="mord mathdefault">p</span><span class="mord">/</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">n</span><span class="mord">/</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">i</span><span class="mord mathdefault">b</span><span class="mord">/</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.00444em;vertical-align:-0.31em;"></span><span class="mord">&quot;</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault">L</span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">&quot;</span></span></span></span>SPARK_DIST_CLASSPATH:<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>H</mi><mi>A</mi><mi>D</mi><mi>O</mi><mi>O</mi><msub><mi>P</mi><mi>H</mi></msub><mi>O</mi><mi>M</mi><mi>E</mi><mi mathvariant="normal">/</mi><mi>s</mi><mi>h</mi><mi>a</mi><mi>r</mi><mi>e</mi><mi mathvariant="normal">/</mi><mi>h</mi><mi>a</mi><mi>d</mi><mi>o</mi><mi>o</mi><mi>p</mi><mi mathvariant="normal">/</mi><mi>h</mi><mi>d</mi><mi>f</mi><mi>s</mi><mi mathvariant="normal">/</mi><mo>∗</mo><mi mathvariant="normal">&quot;</mi><mi>S</mi><mi>P</mi><mi>A</mi><mi>R</mi><mi>K</mi><mi mathvariant="normal">_</mi><mi>D</mi><mi>I</mi><mi>S</mi><mi>T</mi><mi mathvariant="normal">_</mi><mi>C</mi><mi>L</mi><mi>A</mi><mi>S</mi><mi>S</mi><mi>P</mi><mi>A</mi><mi>T</mi><mi>H</mi><mo>=</mo><mi mathvariant="normal">&quot;</mi></mrow><annotation encoding="application/x-tex">HADOOP_HOME/share/hadoop/hdfs/*&quot;SPARK\_DIST\_CLASSPATH=&quot;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord">/</span><span class="mord mathdefault">s</span><span class="mord mathdefault">h</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">e</span><span class="mord">/</span><span class="mord mathdefault">h</span><span class="mord mathdefault">a</span><span class="mord mathdefault">d</span><span class="mord mathdefault">o</span><span class="mord mathdefault">o</span><span class="mord mathdefault">p</span><span class="mord">/</span><span class="mord mathdefault">h</span><span class="mord mathdefault">d</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault">s</span><span class="mord">/</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.00444em;vertical-align:-0.31em;"></span><span class="mord">&quot;</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault">L</span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">&quot;</span></span></span></span>SPARK_DIST_CLASSPATH:<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>H</mi><mi>A</mi><mi>D</mi><mi>O</mi><mi>O</mi><msub><mi>P</mi><mi>H</mi></msub><mi>O</mi><mi>M</mi><mi>E</mi><mi mathvariant="normal">/</mi><mi>s</mi><mi>h</mi><mi>a</mi><mi>r</mi><mi>e</mi><mi mathvariant="normal">/</mi><mi>h</mi><mi>a</mi><mi>d</mi><mi>o</mi><mi>o</mi><mi>p</mi><mi mathvariant="normal">/</mi><mi>h</mi><mi>d</mi><mi>f</mi><mi>s</mi><mi mathvariant="normal">/</mi><mi>l</mi><mi>i</mi><mi>b</mi><mi mathvariant="normal">/</mi><mo>∗</mo><mi mathvariant="normal">&quot;</mi><mi>S</mi><mi>P</mi><mi>A</mi><mi>R</mi><mi>K</mi><mi mathvariant="normal">_</mi><mi>D</mi><mi>I</mi><mi>S</mi><mi>T</mi><mi mathvariant="normal">_</mi><mi>C</mi><mi>L</mi><mi>A</mi><mi>S</mi><mi>S</mi><mi>P</mi><mi>A</mi><mi>T</mi><mi>H</mi><mo>=</mo><mi mathvariant="normal">&quot;</mi></mrow><annotation encoding="application/x-tex">HADOOP_HOME/share/hadoop/hdfs/lib/*&quot;SPARK\_DIST\_CLASSPATH=&quot;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord">/</span><span class="mord mathdefault">s</span><span class="mord mathdefault">h</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">e</span><span class="mord">/</span><span class="mord mathdefault">h</span><span class="mord mathdefault">a</span><span class="mord mathdefault">d</span><span class="mord mathdefault">o</span><span class="mord mathdefault">o</span><span class="mord mathdefault">p</span><span class="mord">/</span><span class="mord mathdefault">h</span><span class="mord mathdefault">d</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault">s</span><span class="mord">/</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">i</span><span class="mord mathdefault">b</span><span class="mord">/</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.00444em;vertical-align:-0.31em;"></span><span class="mord">&quot;</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault">L</span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">&quot;</span></span></span></span>SPARK_DIST_CLASSPATH:$HADOOP_HOME/share/hadoop/tools/lib/*”<br />export SPARK_DIST_CLASSPATH</p><p>5、启动spark</p><p>[hadoop@new-cdh9 conf]$ …/sbin/start-all.sh<br />starting org.apache.spark.deploy.master.Master, logging to /hadoop/soft/spark-1.6.0-cdh5.7.0/logs/spark-hadoop-org.apache.spark.deploy.master.Master-1-new-cdh9.out<br />new-cdh9: starting org.apache.spark.deploy.worker.Worker, logging to /hadoop/soft/spark-1.6.0-cdh5.7.0/logs/spark-hadoop-org.apache.spark.deploy.worker.Worker-1-new-cdh9.out<br />new-cdh12: starting org.apache.spark.deploy.worker.Worker, logging to /hadoop/soft/spark-1.6.0-cdh5.7.0/logs/spark-hadoop-org.apache.spark.deploy.worker.Worker-1-new-cdh12.out<br />new-cdh13: starting org.apache.spark.deploy.worker.Worker, logging to /hadoop/soft/spark-1.6.0-cdh5.7.0/logs/spark-hadoop-org.apache.spark.deploy.worker.Worker-1-new-cdh13.out<br />new-cdh10: starting org.apache.spark.deploy.worker.Worker, logging to /hadoop/soft/spark-1.6.0-cdh5.7.0/logs/spark-hadoop-org.apache.spark.deploy.worker.Worker-1-new-cdh10.out<br />new-cdh11: starting org.apache.spark.deploy.worker.Worker, logging to /hadoop/soft/spark-1.6.0-cdh5.7.0/logs/spark-hadoop-org.apache.spark.deploy.worker.Worker-1-new-cdh11.out</p>]]></content>
      
      
      <categories>
          
          <category> 大数据 </category>
          
          <category> spark </category>
          
      </categories>
      
      
        <tags>
            
            <tag> spark </tag>
            
            <tag> hadoop </tag>
            
            <tag> yarn </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hbase 分布式安装</title>
      <link href="2016/06/22/hbase-install/"/>
      <url>2016/06/22/hbase-install/</url>
      
        <content type="html"><![CDATA[<p><a href="http://www.jsledd.cn/hadoop-cdh5-7-0/">hadoop 集群分布式安装目录（一直更新）</a> 安装开始：</p><h3 id="1-解压"><a class="markdownIt-Anchor" href="#1-解压"></a> 1、解压</h3><p>[hadoop@new-cdh5 soft]$ tar -zvxf hbase-1.2.0-cdh5.7.0.tar.gz</p><h3 id="2-配置hbase-的环境遍历"><a class="markdownIt-Anchor" href="#2-配置hbase-的环境遍历"></a> 2、配置HBASE 的环境遍历</h3><p>[hadoop@new-cdh6 soft]$ vi ~/.bash_profile<br /># .bash_profile</p><p># Get the aliases and functions<br />if [ -f ~/.bashrc ]; then<br />. ~/.bashrc<br />fi</p><p># User specific environment and startup programs<br />export HBASE_HOME=/hadoop/soft/hbase-1.2.0-cdh5.7.0<br />export HADOOP_HOME=/hadoop/soft/hadoop-2.6.0-cdh5.7.0<br />PATH=<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mi>A</mi><mi>T</mi><mi>H</mi><mo>:</mo></mrow><annotation encoding="application/x-tex">PATH:</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span></span></span>HOME/bin:<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>H</mi><mi>A</mi><mi>D</mi><mi>O</mi><mi>O</mi><mi>P</mi><mi mathvariant="normal">_</mi><mi>H</mi><mi>O</mi><mi>M</mi><mi>E</mi><mi mathvariant="normal">/</mi><mi>b</mi><mi>i</mi><mi>n</mi><mo>:</mo></mrow><annotation encoding="application/x-tex">HADOOP\_HOME/bin:</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.06em;vertical-align:-0.31em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord">/</span><span class="mord mathdefault">b</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span></span></span>HADOOP_HOME/sbin:$HBASE_HOME/bin</p><p>export PATH</p><h3 id="3-修改hbase-envsh"><a class="markdownIt-Anchor" href="#3-修改hbase-envsh"></a> 3、<a href="http://xn--hbase-env-z89nz78p.sh">修改hbase-env.sh</a></h3><p>在文件的最下面追加</p><p>export JAVA_HOME=/opt/jdk1.7.0_79<br />export HBASE_MANAGES_ZK=false<br />export HBASE_HEAPSIZE=8000<br />export HBASE_LOG_DIR=/hadoop/soft/hbase-1.2.0-cdh5.7.0/logs<br />export HBASE_HOME=//hadoop/soft/hbase-1.2.0-cdh5.7.0/<br />export HADOOP_HOME=/hadoop/soft/hadoop-2.6.0-cdh5.7.0<br />export HBASE_CLASSPATH=$HADOOP_HOME/conf</p><h3 id="4-修改hbase-sitexml"><a class="markdownIt-Anchor" href="#4-修改hbase-sitexml"></a> 4、修改hbase-site.xml</h3><?xml version="1.0"?><?xml-stylesheet type="text/xsl" href="configuration.xsl"?><p>&lt;!–<br />/**<br />*<br />* Licensed to the Apache Software Foundation (ASF) under one<br />* or more contributor license agreements.  See the NOTICE file<br />* distributed with this work for additional information<br />* regarding copyright ownership.  The ASF licenses this file<br />* to you under the Apache License, Version 2.0 (the<br />* “License”); you may not use this file except in compliance<br />* with the License.  You may obtain a copy of the License at<br />*<br />*     <a href="http://www.apache.org/licenses/LICENSE-2.0">http://www.apache.org/licenses/LICENSE-2.0</a><br />*<br />* Unless required by applicable law or agreed to in writing, software<br />* distributed under the License is distributed on an “AS IS” BASIS,<br />* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br />* See the License for the specific language governing permissions and<br />* limitations under the License.<br />*/<br />–&gt;<br /><configuration><br /><property><br /><name>hbase.rootdir</name><br /><value>hdfs://familyha/hbase</value><br /></property><br /><property><br /><name>hbase.tmp.dir</name><br /><value>file:/hadoop/data/hbase/tmp</value><br /></property><br /><property><br /><name>hbase.cluster.distributed</name><br /><value>true</value><br /></property><br /><property><br /><name>hbase.zookeeper.quorum</name><br /><value>new-cdh12,new-cdh13,new-cdh14,new-cdh15,new-cdh16,new-cdh17</value><br /></property><br /><property><br /><name>hbase.zookeeper.property.clientPort</name><br /><value>2181</value><br /></property><br /><property><br /><name>hbase.zookeeper.property.dataDir</name><br /><value>/hadoop/data/hbase/data</value><br /></property><br /></configuration></p><h3 id="5-修改regionservers"><a class="markdownIt-Anchor" href="#5-修改regionservers"></a> 5、修改regionservers</h3><p>[hadoop@new-cdh5 ~]$ vi soft/hbase-1.2.0-cdh5.7.0/conf/regionservers<br />new-cdh6<br />new-cdh7<br />new-cdh9<br />new-cdh10<br />new-cdh11</p><h3 id="6-同步到其他机器略"><a class="markdownIt-Anchor" href="#6-同步到其他机器略"></a> 6、同步到其他机器（略）</h3><p>7、启动并查看服务</p><p>[hadoop@new-cdh5 ~]$ <a href="http://start-hbase.sh">start-hbase.sh</a><br />starting master, logging to /hadoop/soft/hbase-1.2.0-cdh5.7.0/logs/hbase-hadoop-master-new-cdh5.out<br />new-cdh10: starting regionserver, logging to /hadoop/soft/hbase-1.2.0-cdh5.7.0/logs/hbase-hadoop-regionserver-new-cdh10.out<br />new-cdh11: starting regionserver, logging to /hadoop/soft/hbase-1.2.0-cdh5.7.0/logs/hbase-hadoop-regionserver-new-cdh11.out<br />new-cdh6: starting regionserver, logging to /hadoop/soft/hbase-1.2.0-cdh5.7.0/logs/hbase-hadoop-regionserver-new-cdh6.out<br />new-cdh9: starting regionserver, logging to /hadoop/soft/hbase-1.2.0-cdh5.7.0/logs/hbase-hadoop-regionserver-new-cdh9.out<br />new-cdh7: starting regionserver, logging to /hadoop/soft/hbase-1.2.0-cdh5.7.0/logs/hbase-hadoop-regionserver-new-cdh7.out<br />[hadoop@new-cdh5 ~]$ jps<br />3766 DataNode<br />3906 NodeManager<br />3653 JournalNode<br />5156 Jps<br />5008 HMaster</p><p>[hadoop@new-cdh6 soft]$ jps<br />3855 NodeManager<br />3645 JournalNode<br />4386 HRegionServer<br />3745 DataNode<br />4492 Jps</p><p><img src="http://www.jsledd.cn/wp-content/uploads/2016/06/new-cdh5hbase.png" alt="new-cdh5hbase" /></p>]]></content>
      
      
      <categories>
          
          <category> 大数据 </category>
          
          <category> hbase </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hadoop </tag>
            
            <tag> hbase </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hadoop 2.7 分布式安装 + HA</title>
      <link href="2016/06/22/hadoop-2-7-ha-install/"/>
      <url>2016/06/22/hadoop-2-7-ha-install/</url>
      
        <content type="html"><![CDATA[<p>hadoop 2.7 分布式安装 + HA 开始安装：</p><h3 id="1-解压hadoop并修改环境变量每台机器"><a class="markdownIt-Anchor" href="#1-解压hadoop并修改环境变量每台机器"></a> 1、解压hadoop并修改环境变量（每台机器）</h3><p>[hadoop@new-cdh1 soft]$ tar -zvxf hadoop-2.6.0-cdh5.7.0.tar.gz<br />[hadoop@new-cdh1 soft]$ vi ~/.bash_profile<br /># .bash_profile</p><p># Get the aliases and functions<br />if [ -f ~/.bashrc ]; then<br />. ~/.bashrc<br />fi</p><p># User specific environment and startup programs<br />export HADOOP_HOME=/hadoop/soft/hadoop-2.6.0-cdh5.7.0<br />PATH=<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mi>A</mi><mi>T</mi><mi>H</mi><mo>:</mo></mrow><annotation encoding="application/x-tex">PATH:</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span></span></span>HOME/bin:<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>H</mi><mi>A</mi><mi>D</mi><mi>O</mi><mi>O</mi><mi>P</mi><mi mathvariant="normal">_</mi><mi>H</mi><mi>O</mi><mi>M</mi><mi>E</mi><mi mathvariant="normal">/</mi><mi>b</mi><mi>i</mi><mi>n</mi><mo>:</mo></mrow><annotation encoding="application/x-tex">HADOOP\_HOME/bin:</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.06em;vertical-align:-0.31em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord">/</span><span class="mord mathdefault">b</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span></span></span>HADOOP_HOME/sbin</p><p>export PATH</p><p>[hadoop@new-cdh1 soft]$ source ~/.bash_profile</p><h3 id="2-修改hadoop_homeetchadoopslaves文件"><a class="markdownIt-Anchor" href="#2-修改hadoop_homeetchadoopslaves文件"></a> 2、修改$HADOOP_HOME/etc/hadoop/slaves文件</h3><p>[hadoop@new-cdh1 soft]$ vi hadoop-2.6.0-cdh5.7.0/etc/hadoop/slaves<br />new-cdh15<br />new-cdh16<br />new-cdh5<br />new-cdh6<br />new-cdh7<br />new-cdh9<br />new-cdh10<br />new-cdh11<br />new-cdh12<br />new-cdh13</p><h3 id="3-修改hadoop_homeetchadoophadoop-envsh和hadoop_homeetchadoopyarn-envsh文件"><a class="markdownIt-Anchor" href="#3-修改hadoop_homeetchadoophadoop-envsh和hadoop_homeetchadoopyarn-envsh文件"></a> 3、修改<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>H</mi><mi>A</mi><mi>D</mi><mi>O</mi><mi>O</mi><mi>P</mi><mi mathvariant="normal">_</mi><mi>H</mi><mi>O</mi><mi>M</mi><mi>E</mi><mi mathvariant="normal">/</mi><mi>e</mi><mi>t</mi><mi>c</mi><mi mathvariant="normal">/</mi><mi>h</mi><mi>a</mi><mi>d</mi><mi>o</mi><mi>o</mi><mi>p</mi><mi mathvariant="normal">/</mi><mi>h</mi><mi>a</mi><mi>d</mi><mi>o</mi><mi>o</mi><mi>p</mi><mo>−</mo><mi>e</mi><mi>n</mi><mi>v</mi><mi mathvariant="normal">.</mi><mi>s</mi><mi>h</mi><mi mathvariant="normal">和</mi></mrow><annotation encoding="application/x-tex">HADOOP\_HOME/etc/hadoop/hadoop-env.sh和</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.06em;vertical-align:-0.31em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord">/</span><span class="mord mathdefault">e</span><span class="mord mathdefault">t</span><span class="mord mathdefault">c</span><span class="mord">/</span><span class="mord mathdefault">h</span><span class="mord mathdefault">a</span><span class="mord mathdefault">d</span><span class="mord mathdefault">o</span><span class="mord mathdefault">o</span><span class="mord mathdefault">p</span><span class="mord">/</span><span class="mord mathdefault">h</span><span class="mord mathdefault">a</span><span class="mord mathdefault">d</span><span class="mord mathdefault">o</span><span class="mord mathdefault">o</span><span class="mord mathdefault">p</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mord">.</span><span class="mord mathdefault">s</span><span class="mord mathdefault">h</span><span class="mord cjk_fallback">和</span></span></span></span>HADOOP_HOME/etc/hadoop/yarn-env.sh文件</h3><p>[hadoop@new-cdh1 soft]$ vi hadoop-2.6.0-cdh5.7.0/etc/hadoop/hadoop-env.sh<br />…<br />export JAVA_HOME=/opt/jdk1.7.0_79<br />…</p><p>[hadoop@new-cdh1 soft]$ vi hadoop-2.6.0-cdh5.7.0/etc/hadoop/yarn-env.sh<br />…<br />export JAVA_HOME=/opt/jdk1.7.0_79<br />…</p><h3 id="4-修改hadoophomeetchadoopcoresitexml文件"><a class="markdownIt-Anchor" href="#4-修改hadoophomeetchadoopcoresitexml文件"></a> 4、修改HADOOPHOME/etc/hadoop/core−site.xml文件</h3><configuration>  <property>    <name>fs.defaultFS</name>    <value>hdfs://familyha</value>  </property>  <property>    <name>hadoop.tmp.dir</name>    <value>/hadoop/tmp/hadoop-${user.name}</value>  </property>  <property>    <name>fs.trash.interval</name>    <value>1</value>  </property>  <property>    <name>io.native.lib.available</name>    <value>true</value>  </property>  <property>    <name>io.compression.codecs</name> <value>org.apache.hadoop.io.compress.DefaultCodec,org.apache.hadoop.io.compress.GzipCodec,org.apache.hadoop.io.compress.BZip2Codec,org.apache.hadoop.io.compress.DeflateCodec,org.apache.hadoop.io.compress.SnappyCodec,org.apache.hadoop.io.compress.Lz4Codec</value>  </property>  <property>    <name>io.file.buffer.size</name>    <value>131072</value>  </property>  <property>     <name>ha.zookeeper.quorum</name>     <value>new-cdh12:2181,new-cdh13:2181,new-cdh15:2181,new-cdh16:2181,new-cdh17:2181</value>   </property>  <property>    <name>dfs.ha.fencing.methods</name>    <value>sshfence</value>  </property>  <property>    <name>dfs.ha.fencing.ssh.private-key-files</name>    <value>/hadoop/.ssh/id_rsa</value>  </property></configuration><h3 id="5-修改hadoophomeetchadoopmapredsitexml文件"><a class="markdownIt-Anchor" href="#5-修改hadoophomeetchadoopmapredsitexml文件"></a> 5、修改HADOOPHOME/etc/hadoop/mapred−site.xml文件</h3><?xml version="1.0"?><?xml-stylesheet type="text/xsl" href="configuration.xsl"?><!--  Licensed under the Apache License, Version 2.0 (the "License");  you may not use this file except in compliance with the License.  You may obtain a copy of the License at    http://www.apache.org/licenses/LICENSE-2.0  Unless required by applicable law or agreed to in writing, software  distributed under the License is distributed on an "AS IS" BASIS,  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the specific language governing permissions and  limitations under the License. See accompanying LICENSE file.\-\-><!\-\- Put site-specific property overrides in this file. --><configuration><property><name>mapreduce.framework.name</name><value>yarn</value></property><property>    <name>mapreduce.jobhistory.address</name>    <value>new-cdh10:10020</value>  </property>  <property>    <name>mapreduce.jobhistory.webapp.address</name>    <value>new-cdh10:19888</value>  </property>  <property>    <name>mapreduce.jobhistory.webapp.https.address</name>    <value>new-cdh10:19890</value>  </property>  <property>    <name>mapreduce.jobhistory.admin.address</name>    <value>new-cdh10:10033</value>  </property>  <property>    <name>mapreduce.jobhistory.max-age-ms</name>    <value>604800000</value>  </property>  <property>    <name>mapreduce.jobhistory.cleaner.interval</name>    <value>86400000</value>  </property>  <property>    <name>yarn.app.mapreduce.am.staging-dir</name>    <value>/user</value>  </property></configuration><h3 id="6-修改hadoop_homeetchadoophdfs-sitexml文件"><a class="markdownIt-Anchor" href="#6-修改hadoop_homeetchadoophdfs-sitexml文件"></a> 6、修改HADOOP_HOME/etc/hadoop/hdfs-site.xml文件</h3><?xml version="1.0" encoding="UTF-8"?><?xml-stylesheet type="text/xsl" href="configuration.xsl"?><!--  Licensed under the Apache License, Version 2.0 (the "License");  you may not use this file except in compliance with the License.  You may obtain a copy of the License at    http://www.apache.org/licenses/LICENSE-2.0  Unless required by applicable law or agreed to in writing, software  distributed under the License is distributed on an "AS IS" BASIS,  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the specific language governing permissions and  limitations under the License. See accompanying LICENSE file.\-\-><!\-\- Put site-specific property overrides in this file. --><configuration><property>                <name>dfs.nameservices</name>                <value>familyha</value>        </property>        <property>                <name>dfs.ha.namenodes.familyha</name>                <value>family1,family2</value>        </property>        <property>                <name>dfs.namenode.rpc-address.familyha.family1</name>                <value>new-cdh1:8020</value>        </property>        <property>                <name>dfs.namenode.rpc-address.familyha.family2</name>                <value>new-cdh2:8020</value>        </property>        <property>                <name>dfs.namenode.http-address.familyha.family1</name>                <value>new-cdh1:50070</value>        </property>        <property>                <name>dfs.namenode.http-address.familyha.family2</name>                <value>new-cdh2:50070</value>        </property>        <property>                <name>dfs.namenode.servicerpc-address.familyha.family1</name>                <value>new-cdh1:53333</value>        </property>        <property>                <name>dfs.namenode.servicerpc-address.familyha.family2</name>                <value>new-cdh2:53333</value>        </property><property><name>dfs.namenode.shared.edits.dir</name><value>qjournal://new-cdh5:8485;new-cdh6:8485;new-cdh7:8485/familyha</value></property><property><name>dfs.client.failover.proxy.provider.familyha</name><value>org.apache.hadoop.hdfs.server.namenode.ha.ConfiguredFailoverProxyProvider</value></property><property><name>dfs.journalnode.edits.dir</name><value>/hadoop/data/journal</value></property><property><name>dfs.replication</name><value>3</value></property><property><name>dfs.namenode.name.dir</name><value>file:/hadoop/data/dfs/name</value></property><property><name>dfs.datanode.data.dir</name><value>file:/hadoop/data/dfs/data</value></property><property><name>dfs.ha.automatic-failover.enabled</name><value>true</value></property><property><name>dfs.webhdfs.enabled</name><value>true</value></property><property><name>dfs.journalnode.http-address</name><value>0.0.0.0:8480</value></property><property><name>dfs.journalnode.rpc-address</name><value>0.0.0.0:8485</value></property><property><name>dfs.permissions</name><value>false</value></property></configuration><h3 id="7-修改hadoop_homeetchadoopyarn-sitexml文件"><a class="markdownIt-Anchor" href="#7-修改hadoop_homeetchadoopyarn-sitexml文件"></a> 7、修改HADOOP_HOME/etc/hadoop/yarn-site.xml文件</h3><?xml version="1.0"?><pre><code>&lt;!\-\- Licensed under the Apache License, Version 2.0 (the &quot;License&quot;); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an &quot;AS IS&quot; BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License. See accompanying LICENSE file. --&gt;&lt;configuration&gt;&lt;property&gt;&lt;name&gt;yarn.resourcemanager.ha.rm-ids&lt;/name&gt;&lt;value&gt;rm1,rm2&lt;/value&gt;&lt;/property&gt;&lt;property&gt;&lt;name&gt;yarn.resourcemanager.hostname.rm1&lt;/name&gt;&lt;value&gt;new-cdh3&lt;/value&gt;&lt;/property&gt;&lt;property&gt;&lt;name&gt;yarn.resourcemanager.hostname.rm2&lt;/name&gt;&lt;value&gt;new-cdh4&lt;/value&gt;&lt;/property&gt;&lt;property&gt;&lt;name&gt;yarn.resourcemanager.ha.id&lt;/name&gt;&lt;value&gt;rm1&lt;/value&gt;&lt;/property&gt;&lt;property&gt;&lt;name&gt;yarn.resourcemanager.address.rm1&lt;/name&gt;&lt;value&gt;$&#123;yarn.resourcemanager.hostname.rm1&#125;:8032&lt;/value&gt;&lt;/property&gt;&lt;property&gt;&lt;name&gt;yarn.resourcemanager.scheduler.address.rm1&lt;/name&gt;&lt;value&gt;$&#123;yarn.resourcemanager.hostname.rm1&#125;:8030&lt;/value&gt;&lt;/property&gt;&lt;property&gt;&lt;name&gt;yarn.resourcemanager.webapp.https.address.rm1&lt;/name&gt;&lt;value&gt;$&#123;yarn.resourcemanager.hostname.rm1&#125;:8089&lt;/value&gt;&lt;/property&gt;&lt;property&gt;&lt;name&gt;yarn.resourcemanager.webapp.address.rm1&lt;/name&gt;&lt;value&gt;$&#123;yarn.resourcemanager.hostname.rm1&#125;:8088&lt;/value&gt;&lt;/property&gt;&lt;property&gt;&lt;name&gt;yarn.resourcemanager.resource-tracker.address.rm1&lt;/name&gt;&lt;value&gt;$&#123;yarn.resourcemanager.hostname.rm1&#125;:8025&lt;/value&gt;&lt;/property&gt;&lt;property&gt;&lt;name&gt;yarn.resourcemanager.admin.address.rm1&lt;/name&gt;&lt;value&gt;$&#123;yarn.resourcemanager.hostname.rm1&#125;:8041&lt;/value&gt;&lt;/property&gt;&lt;property&gt;&lt;name&gt;yarn.resourcemanager.address.rm2&lt;/name&gt;&lt;value&gt;$&#123;yarn.resourcemanager.hostname.rm2&#125;:8032&lt;/value&gt;&lt;/property&gt;&lt;property&gt;&lt;name&gt;yarn.resourcemanager.scheduler.address.rm2&lt;/name&gt;&lt;value&gt;$&#123;yarn.resourcemanager.hostname.rm2&#125;:8030&lt;/value&gt;&lt;/property&gt;&lt;property&gt;&lt;name&gt;yarn.resourcemanager.webapp.https.address.rm2&lt;/name&gt;&lt;value&gt;$&#123;yarn.resourcemanager.hostname.rm2&#125;:8089&lt;/value&gt;&lt;/property&gt;&lt;property&gt;&lt;name&gt;yarn.resourcemanager.webapp.address.rm2&lt;/name&gt;&lt;value&gt;$&#123;yarn.resourcemanager.hostname.rm2&#125;:8088&lt;/value&gt;&lt;/property&gt;&lt;property&gt;&lt;name&gt;yarn.resourcemanager.resource-tracker.address.rm2&lt;/name&gt;&lt;value&gt;$&#123;yarn.resourcemanager.hostname.rm2&#125;:8025&lt;/value&gt;&lt;/property&gt;&lt;property&gt;&lt;name&gt;yarn.resourcemanager.admin.address.rm2&lt;/name&gt;&lt;value&gt;$&#123;yarn.resourcemanager.hostname.rm2&#125;:8041&lt;/value&gt;&lt;/property&gt;&lt;property&gt;&lt;name&gt;yarn.nodemanager.aux-services&lt;/name&gt;&lt;value&gt;mapreduce_shuffle&lt;/value&gt;&lt;/property&gt;&lt;property&gt;&lt;name&gt;yarn.resourcemanager.ha.enabled&lt;/name&gt;&lt;value&gt;true&lt;/value&gt;&lt;/property&gt;&lt;property&gt;&lt;name&gt;yarn.resourcemanager.ha.automatic-failover.enabled&lt;/name&gt;&lt;value&gt;true&lt;/value&gt;&lt;/property&gt;&lt;property&gt;&lt;name&gt;yarn.nodemanager.local-dirs&lt;/name&gt;&lt;value&gt;/hadoop/data/yarn/local&lt;/value&gt;&lt;/property&gt;&lt;property&gt;&lt;name&gt;yarn.nodemanager.log-dirs&lt;/name&gt;&lt;value&gt;/hadoop/data/yarn/log&lt;/value&gt;&lt;/property&gt;&lt;property&gt;&lt;name&gt;yarn.client.failover-proxy-provider&lt;/name&gt;&lt;value&gt;org.apache.hadoop.yarn.client.ConfiguredRMFailoverProxyProvider&lt;/value&gt;&lt;/property&gt;&lt;property&gt;&lt;name&gt;yarn.resourcemanager.zk-state-store.address&lt;/name&gt;&lt;value&gt;new-cdh12:2181,new-cdh13:2181,new-cdh15:2181,new-cdh16:2181,new-cdh17:2181&lt;/value&gt;&lt;/property&gt;&lt;property&gt;&lt;name&gt;yarn.resourcemanager.zk-address&lt;/name&gt;&lt;value&gt;new-cdh12:2181,new-cdh13:2181,new-cdh15:2181,new-cdh16:2181,new-cdh17:2181&lt;/value&gt;&lt;/property&gt;&lt;property&gt;&lt;name&gt;yarn.resourcemanager.store.class&lt;/name&gt;&lt;value&gt;org.apache.hadoop.yarn.server.resourcemanager.recovery.ZKRMStateStore&lt;/value&gt;&lt;/property&gt;&lt;property&gt;&lt;name&gt;yarn.resourcemanager.cluster-id&lt;/name&gt;&lt;value&gt;cluster&lt;/value&gt;&lt;/property&gt;&lt;property&gt;&lt;name&gt;yarn.resourcemanager.recovery.enabled&lt;/name&gt;&lt;value&gt;true&lt;/value&gt;&lt;/property&gt;&lt;property&gt;&lt;name&gt;yarn.resourcemanager.scheduler.class&lt;/name&gt;&lt;value&gt;org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FairScheduler&lt;/value&gt;&lt;/property&gt;&lt;property&gt;&lt;name&gt;yarn.scheduler.fair.allocation.file&lt;/name&gt;&lt;value&gt;/hadoop/soft/hadoop-2.6.0-cdh5.7.0/etc/hadoop/fairscheduler.xml&lt;/value&gt;&lt;/property&gt;&lt;/configuration&gt;</code></pre><h3 id="8-添加hadoop_homeetchadoopfairschedulerxml文件"><a class="markdownIt-Anchor" href="#8-添加hadoop_homeetchadoopfairschedulerxml文件"></a> 8、添加$HADOOP_HOME/etc/hadoop/fairscheduler.xml文件</h3><?xml version="1.0"?><allocations>         <queue name="news">                 <minResources>1024 mb, 1 vcores </minResources>                 <maxResources>1536 mb, 1 vcores </maxResources>                 <maxRunningApps>5</maxRunningApps>                 <minSharePreemptionTimeout>300</minSharePreemptionTimeout>                 <weight>1.0</weight>                 <aclSubmitApps>root,yarn,search,hdfs</aclSubmitApps>         </queue>         <queue name="crawler">                 <minResources>1024 mb, 1 vcores</minResources>                 <maxResources>1536 mb, 1 vcores</maxResources>         </queue>         <queue name="map">                 <minResources>1024 mb, 1 vcores</minResources>                 <maxResources>1536 mb, 1 vcores</maxResources>         </queue></allocations><h3 id="9-创建相关文件夹"><a class="markdownIt-Anchor" href="#9-创建相关文件夹"></a> 9、创建相关文件夹</h3><p>在相关的机器上创建文件夹</p><p>mkdir -p /hadoop/data/journal;<br />mkdir -p /hadoop/data/dfs/name;<br />mkdir -p /hadoop/data/dfs/data;<br />mkdir -p /hadoop/data/yarn/local;<br />mkdir -p /hadoop/data/yarn/log</p><h3 id="10-复制集群到其他机器"><a class="markdownIt-Anchor" href="#10-复制集群到其他机器"></a> 10、复制集群到其他机器</h3><p>[hadoop@new-cdh1 soft]$ scp -r hadoop-2.6.0-cdh5.7.0 new-cdh2:~/soft/<br />[hadoop@new-cdh1 soft]$ scp -r hadoop-2.6.0-cdh5.7.0 new-cdh3:~/soft/<br />…<br />…<br />…</p><h3 id="11-修改new-cdh4配置文件"><a class="markdownIt-Anchor" href="#11-修改new-cdh4配置文件"></a> 11、修改new-cdh4配置文件</h3><pre><code>    &lt;property&gt;            &lt;name&gt;yarn.resourcemanager.ha.id&lt;/name&gt;            &lt;value&gt;rm2&lt;/value&gt;    &lt;/property&gt;</code></pre><h3 id="12-第一次启动"><a class="markdownIt-Anchor" href="#12-第一次启动"></a> 12、第一次启动</h3><h3 id="1-启动zookeeper略"><a class="markdownIt-Anchor" href="#1-启动zookeeper略"></a> 1、启动<a href="http://www.jsledd.cn/zookeeper-3-4-5-install/">zookeeper</a>（略）</h3><h3 id="2-格式化zookeeper集群"><a class="markdownIt-Anchor" href="#2-格式化zookeeper集群"></a> 2、格式化ZooKeeper集群</h3><p>在new-cdh1 执行</p><p>[hadoop@new-cdh1 soft]$ hdfs zkfc -formatZK<br />…<br />…<br />16/06/22 17:51:37 INFO zookeeper.ClientCnxn: Session establishment complete on server new-cdh15/192.168.36.15:2181, sessionid = 0xf5576a58dc00004, negotiated timeout = 5000<br />16/06/22 17:51:37 INFO ha.ActiveStandbyElector: Session connected.<br />16/06/22 17:51:37 INFO ha.ActiveStandbyElector: Successfully created /hadoop-ha/familyha in ZK.<br />16/06/22 17:51:37 INFO zookeeper.ZooKeeper: Session: 0xf5576a58dc00004 closed<br />16/06/22 17:51:37 INFO zookeeper.ClientCnxn: EventThread shut down</p><p>zookeeper 查看格式化效果</p><p>[hadoop@new-cdh12 ~]$ <a href="http://zkCli.sh">zkCli.sh</a><br />Connecting to localhost:2181<br />[zk: localhost:2181(CONNECTED) 1] ls /hadoop-ha<br />[familyha]</p><h3 id="3-启动journalnode进程"><a class="markdownIt-Anchor" href="#3-启动journalnode进程"></a> 3、启动journalnode进程</h3><p>在new-cdh5、new-cdh6、new-cdh7 上分别启动并查看</p><p>[hadoop@new-cdh5 ~]$ <a href="http://hadoop-daemon.sh">hadoop-daemon.sh</a> start journalnode<br />starting journalnode, logging to /hadoop/soft/hadoop-2.6.0-cdh5.7.0/logs/hadoop-hadoop-journalnode-new-cdh5.out<br />[hadoop@new-cdh5 ~]$ jps<br />3697 Jps<br />3653 JournalNode</p><h3 id="4-格式化new-cdh1-上的-namenode"><a class="markdownIt-Anchor" href="#4-格式化new-cdh1-上的-namenode"></a> 4、格式化new-cdh1 上的 namenode</h3><p>[hadoop@new-cdh1 ~]$ hdfs namenode -format<br />16/06/22 18:10:12 INFO namenode.NameNode: STARTUP_MSG:<br />/************************************************************<br />STARTUP_MSG: Starting NameNode<br />STARTUP_MSG:   host = new-cdh1/192.168.36.1<br />STARTUP_MSG:   args = [-format]<br />STARTUP_MSG:   version = 2.6.0-cdh5.7.0<br />…<br />…<br />…<br />16/06/22 18:10:18 INFO namenode.FSImage: Allocated new BlockPoolId: BP-996370904-192.168.36.1-1466590218912<br />16/06/22 18:10:19 INFO common.Storage: Storage directory /hadoop/data/dfs/name has been successfully formatted.<br />16/06/22 18:10:19 INFO namenode.NNStorageRetentionManager: Going to retain 1 images with txid &gt;= 0<br />16/06/22 18:10:19 INFO util.ExitUtil: Exiting with status 0<br />16/06/22 18:10:19 INFO namenode.NameNode: SHUTDOWN_MSG:<br />/************************************************************<br />SHUTDOWN_MSG: Shutting down NameNode at new-cdh1/192.168.36.1<br />************************************************************/</p><h3 id="5-启动并查看new-cdh1上的namenode"><a class="markdownIt-Anchor" href="#5-启动并查看new-cdh1上的namenode"></a> 5、启动并查看new-cdh1上的namenode</h3><p>[hadoop@new-cdh1 ~]$ <a href="http://hadoop-daemon.sh">hadoop-daemon.sh</a> start namenode<br />starting namenode, logging to /hadoop/soft/hadoop-2.6.0-cdh5.7.0/logs/hadoop-hadoop-namenode-new-cdh1.out<br />[hadoop@new-cdh1 ~]$ jps<br />5486 NameNode<br />5577 Jps</p><h3 id="6-将刚才格式化的new-cdh1-上的-namenode信息同步到备用new-cdh2-的namenode"><a class="markdownIt-Anchor" href="#6-将刚才格式化的new-cdh1-上的-namenode信息同步到备用new-cdh2-的namenode"></a> 6、将刚才格式化的new-cdh1 上的 namenode信息同步到备用new-cdh2 的namenode</h3><h1 id="hadoopnew-cdh2-~-hdfs-namenode-bootstrapstandby160622-181756-info-namenodenamenode-startup_msgstartup_msg-starting-namenodestartup_msg-host-new-cdh2192168362startup_msg-args-bootstrapstandbystartup_msg-version-260-cdh570startup_msg-classpath"><a class="markdownIt-Anchor" href="#hadoopnew-cdh2-~-hdfs-namenode-bootstrapstandby160622-181756-info-namenodenamenode-startup_msgstartup_msg-starting-namenodestartup_msg-host-new-cdh2192168362startup_msg-args-bootstrapstandbystartup_msg-version-260-cdh570startup_msg-classpath"></a> [hadoop@new-cdh2 ~]$ hdfs namenode -bootstrapStandby<br />16/06/22 18:17:56 INFO namenode.NameNode: STARTUP_MSG:<br />/************************************************************<br />STARTUP_MSG: Starting NameNode<br />STARTUP_MSG:   host = new-cdh2/192.168.36.2<br />STARTUP_MSG:   args = [-bootstrapStandby]<br />STARTUP_MSG:   version = 2.6.0-cdh5.7.0<br />STARTUP_MSG:   classpath =<br />…<br />…</h1><h1 id="about-to-bootstrap-standby-id-family2-fromnameservice-id-familyhaother-namenode-id-family1other-nns-http-address-httpnew-cdh150070other-nns-ipc-address-new-cdh119216836153333namespace-id-1800644275block-pool-id-bp-996370904-192168361-1466590218912cluster-id-cid-753f5b34-21e6-4305-9672-50607ce8d630layout-version-60isupgradefinalized-true"><a class="markdownIt-Anchor" href="#about-to-bootstrap-standby-id-family2-fromnameservice-id-familyhaother-namenode-id-family1other-nns-http-address-httpnew-cdh150070other-nns-ipc-address-new-cdh119216836153333namespace-id-1800644275block-pool-id-bp-996370904-192168361-1466590218912cluster-id-cid-753f5b34-21e6-4305-9672-50607ce8d630layout-version-60isupgradefinalized-true"></a> About to bootstrap Standby ID family2 from:<br />Nameservice ID: familyha<br />Other Namenode ID: family1<br />Other NN’s HTTP address: <a href="http://new-cdh1:50070">http://new-cdh1:50070</a><br />Other NN’s IPC  address: new-cdh1/192.168.36.1:53333<br />Namespace ID: 1800644275<br />Block pool ID: BP-996370904-192.168.36.1-1466590218912<br />Cluster ID: CID-753f5b34-21e6-4305-9672-50607ce8d630<br />Layout version: -60<br />isUpgradeFinalized: true</h1><p>16/06/22 18:17:58 INFO common.Storage: Storage directory /hadoop/data/dfs/name has been successfully formatted.<br />16/06/22 18:17:59 INFO namenode.TransferFsImage: Opening connection to <a href="http://new-cdh1:50070/imagetransfer?getimage=1&amp;txid=0&amp;storageInfo=-60:1800644275:0:CID-753f5b34-21e6-4305-9672-50607ce8d630&amp;bootstrapstandby=true">http://new-cdh1:50070/imagetransfer?getimage=1&amp;txid=0&amp;storageInfo=-60:1800644275:0:CID-753f5b34-21e6-4305-9672-50607ce8d630&amp;bootstrapstandby=true</a><br />16/06/22 18:17:59 INFO namenode.TransferFsImage: Image Transfer timeout configured to 60000 milliseconds<br />16/06/22 18:17:59 INFO namenode.TransferFsImage: Transfer took 0.05s at 0.00 KB/s<br />16/06/22 18:17:59 INFO namenode.TransferFsImage: Downloaded file fsimage.ckpt_0000000000000000000 size 353 bytes.<br />16/06/22 18:17:59 INFO util.ExitUtil: Exiting with status 0<br />16/06/22 18:17:59 INFO namenode.NameNode: SHUTDOWN_MSG:<br />/************************************************************<br />SHUTDOWN_MSG: Shutting down NameNode at new-cdh2/192.168.36.2<br />************************************************************/</p><h3 id="7-启动并查看new-cdh2上的namenode"><a class="markdownIt-Anchor" href="#7-启动并查看new-cdh2上的namenode"></a> 7、启动并查看new-cdh2上的namenode</h3><p>[hadoop@new-cdh2 ~]$ <a href="http://hadoop-daemon.sh">hadoop-daemon.sh</a> start namenode<br />starting namenode, logging to /hadoop/soft/hadoop-2.6.0-cdh5.7.0/logs/hadoop-hadoop-namenode-new-cdh2.out<br />[hadoop@new-cdh2 ~]$ jps<br />4178 Jps<br />4087 NameNode</p><h3 id="8-启动并查看所有datanode"><a class="markdownIt-Anchor" href="#8-启动并查看所有datanode"></a> 8、启动并查看所有datanode</h3><p>[hadoop@new-cdh2 ~]$ <a href="http://hadoop-daemons.sh">hadoop-daemons.sh</a> start datanode<br />new-cdh5: starting datanode, logging to /hadoop/soft/hadoop-2.6.0-cdh5.7.0/logs/hadoop-hadoop-datanode-new-cdh5.out<br />new-cdh6: starting datanode, logging to /hadoop/soft/hadoop-2.6.0-cdh5.7.0/logs/hadoop-hadoop-datanode-new-cdh6.out<br />new-cdh12: starting datanode, logging to /hadoop/soft/hadoop-2.6.0-cdh5.7.0/logs/hadoop-hadoop-datanode-new-cdh12.out<br />new-cdh7: starting datanode, logging to /hadoop/soft/hadoop-2.6.0-cdh5.7.0/logs/hadoop-hadoop-datanode-new-cdh7.out<br />new-cdh13: starting datanode, logging to /hadoop/soft/hadoop-2.6.0-cdh5.7.0/logs/hadoop-hadoop-datanode-new-cdh13.out<br />new-cdh11: starting datanode, logging to /hadoop/soft/hadoop-2.6.0-cdh5.7.0/logs/hadoop-hadoop-datanode-new-cdh11.out<br />new-cdh9: starting datanode, logging to /hadoop/soft/hadoop-2.6.0-cdh5.7.0/logs/hadoop-hadoop-datanode-new-cdh9.out<br />new-cdh10: starting datanode, logging to /hadoop/soft/hadoop-2.6.0-cdh5.7.0/logs/hadoop-hadoop-datanode-new-cdh10.out<br />[hadoop@new-cdh5 ~]$ jps<br />3766 DataNode<br />3865 Jps<br />3653 JournalNode</p><h3 id="9-在new-cdh3上启动并查看yarn"><a class="markdownIt-Anchor" href="#9-在new-cdh3上启动并查看yarn"></a> 9、在new-cdh3上启动并查看yarn</h3><p>[hadoop@new-cdh3 ~]$ <a href="http://start-yarn.sh">start-yarn.sh</a><br />starting yarn daemons<br />starting resourcemanager, logging to /hadoop/soft/hadoop-2.6.0-cdh5.7.0/logs/yarn-hadoop-resourcemanager-new-cdh3.out<br />new-cdh13: starting nodemanager, logging to /hadoop/soft/hadoop-2.6.0-cdh5.7.0/logs/yarn-hadoop-nodemanager-new-cdh13.out<br />new-cdh6: starting nodemanager, logging to /hadoop/soft/hadoop-2.6.0-cdh5.7.0/logs/yarn-hadoop-nodemanager-new-cdh6.out<br />new-cdh7: starting nodemanager, logging to /hadoop/soft/hadoop-2.6.0-cdh5.7.0/logs/yarn-hadoop-nodemanager-new-cdh7.out<br />new-cdh12: starting nodemanager, logging to /hadoop/soft/hadoop-2.6.0-cdh5.7.0/logs/yarn-hadoop-nodemanager-new-cdh12.out<br />new-cdh5: starting nodemanager, logging to /hadoop/soft/hadoop-2.6.0-cdh5.7.0/logs/yarn-hadoop-nodemanager-new-cdh5.out<br />new-cdh10: starting nodemanager, logging to /hadoop/soft/hadoop-2.6.0-cdh5.7.0/logs/yarn-hadoop-nodemanager-new-cdh10.out<br />new-cdh11: starting nodemanager, logging to /hadoop/soft/hadoop-2.6.0-cdh5.7.0/logs/yarn-hadoop-nodemanager-new-cdh11.out<br />new-cdh9: starting nodemanager, logging to /hadoop/soft/hadoop-2.6.0-cdh5.7.0/logs/yarn-hadoop-nodemanager-new-cdh9.out<br />[hadoop@new-cdh3 ~]$ jps<br />4016 ResourceManager<br />4295 Jps</p><h3 id="9-在new-cdh1-new-cdh2上分别启动并查看zkfc"><a class="markdownIt-Anchor" href="#9-在new-cdh1-new-cdh2上分别启动并查看zkfc"></a> 9、在new-cdh1、new-cdh2上分别启动并查看zkfc</h3><p>[hadoop@new-cdh2 ~]$ <a href="http://hadoop-daemon.sh">hadoop-daemon.sh</a> start zkfc<br />starting zkfc, logging to /hadoop/soft/hadoop-2.6.0-cdh5.7.0/logs/hadoop-hadoop-zkfc-new-cdh2.out<br />[hadoop@new-cdh2 ~]$ jps<br />4087 NameNode<br />4407 DFSZKFailoverController<br />4459 Jps</p><p>10、在网页查看安装效果 <img src="http://www.jsledd.cn/wp-content/uploads/2016/06/new-cdh1.png" alt="new-cdh1" /> <img src="http://www.jsledd.cn/wp-content/uploads/2016/06/new-cdh1datanode.png" alt="new-cdh1datanode" /> <img src="http://www.jsledd.cn/wp-content/uploads/2016/06/new-cdh2.png" alt="new-cdh2" /><img src="http://www.jsledd.cn/wp-content/uploads/2016/06/new-cdh3yarn.png" alt="new-cdh3yarn" /> 以后启动就可以在 hdfs 和 yarn 的主节点上直接运行 start-dfs.sh或start-yarn.sh来启动</p>]]></content>
      
      
      <categories>
          
          <category> 大数据 </category>
          
          <category> hadoop </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hadoop </tag>
            
            <tag> ha </tag>
            
            <tag> yarn </tag>
            
            <tag> hdfs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>kafka 分布式安装</title>
      <link href="2016/06/22/kafka-install/"/>
      <url>2016/06/22/kafka-install/</url>
      
        <content type="html"><![CDATA[<h3 id="下载地址httpmirrorscnniccnapachekafka0901kafka_210-0901tgz"><a class="markdownIt-Anchor" href="#下载地址httpmirrorscnniccnapachekafka0901kafka_210-0901tgz"></a> 下载地址：<a href="http://mirrors.cnnic.cn/apache/kafka/0.9.0.1/kafka_2.10-0.9.0.1.tgz">http://mirrors.cnnic.cn/apache/kafka/0.9.0.1/kafka_2.10-0.9.0.1.tgz</a></h3><p>分别在三台服务器（new-cdh15、new-cdh16、new-cdh17）上安装kafka：</p><h3 id="1-解压"><a class="markdownIt-Anchor" href="#1-解压"></a> 1、解压</h3><p>[hadoop@new-cdh15 soft]$ tar -zvxf kafka_2.10-0.9.0.1.tgz</p><h3 id="2-修改配置"><a class="markdownIt-Anchor" href="#2-修改配置"></a> 2、修改配置</h3><p>修改每台服务器的config/server.properties</p><p><a href="http://broker.id">broker.id</a>：  唯一，填数字，可以填写ip 最后一个字段 15/16/17 <a href="http://host.name">host.name</a>：唯一，填服务器IP</p><p>zookeeper.connect=new-cdh12:2181,new-cdh13:2181,new-cdh15:2181,new-cdh16:2181,new-cdh17:2181</p><p>log.dirs=/hadoop/tmp/kafka-logs :store log files</p><p>详细文档</p><p>[hadoop@new-cdh15 kafka_2.10-0.9.0.1]$ cat config/server.properties<br /># Licensed to the Apache Software Foundation (ASF) under one or more<br /># contributor license agreements.  See the NOTICE file distributed with<br /># this work for additional information regarding copyright ownership.<br /># The ASF licenses this file to You under the Apache License, Version 2.0<br /># (the “License”); you may not use this file except in compliance with<br /># the License.  You may obtain a copy of the License at</p><h1 id=""><a class="markdownIt-Anchor" href="#"></a> </h1><p>#    <a href="http://www.apache.org/licenses/LICENSE-2.0">http://www.apache.org/licenses/LICENSE-2.0</a></p><h1 id="-2"><a class="markdownIt-Anchor" href="#-2"></a> </h1><p># Unless required by applicable law or agreed to in writing, software<br /># distributed under the License is distributed on an “AS IS” BASIS,<br /># WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br /># See the License for the specific language governing permissions and<br /># limitations under the License.<br /># see kafka.server.KafkaConfig for additional details and defaults</p><p>############################# Server Basics #############################</p><p># The id of the broker. This must be set to a unique integer for each broker.<br />broker.id=15</p><p>############################# Socket Server Settings #############################</p><p>listeners=PLAINTEXT://:9092</p><p># The port the socket server listens on<br />port=9092</p><p># Hostname the broker will bind to. If not set, the server will bind to all interfaces<br />host.name=new-cdh15</p><p># Hostname the broker will advertise to producers and consumers. If not set, it uses the<br /># value for “<a href="http://host.name">host.name</a>” if configured.  Otherwise, it will use the value returned from<br /># java.net.InetAddress.getCanonicalHostName().<br />#advertised.host.name=<hostname routable by clients></p><p># The port to publish to ZooKeeper for clients to use. If this is not set,<br /># it will publish the same port that the broker binds to.<br />#advertised.port=<port accessible by clients></p><p># The number of threads handling network requests<br />num.network.threads=3</p><p># The number of threads doing disk I/O<br />num.io.threads=8</p><p># The send buffer (SO_SNDBUF) used by the socket server<br />socket.send.buffer.bytes=102400</p><p># The receive buffer (SO_RCVBUF) used by the socket server<br />socket.receive.buffer.bytes=102400</p><p># The maximum size of a request that the socket server will accept (protection against OOM)<br />socket.request.max.bytes=104857600</p><p>############################# Log Basics #############################</p><p># A comma seperated list of directories under which to store log files<br />log.dirs=/hadoop/tmp/kafka-logs</p><p># The default number of log partitions per topic. More partitions allow greater<br /># parallelism for consumption, but this will also result in more files across<br /># the brokers.<br />num.partitions=1</p><p># The number of threads per data directory to be used for log recovery at startup and flushing at shutdown.<br /># This value is recommended to be increased for installations with data dirs located in RAID array.<br />num.recovery.threads.per.data.dir=1</p><p>############################# Log Flush Policy #############################</p><p># Messages are immediately written to the filesystem but by default we only fsync() to sync<br /># the OS cache lazily. The following configurations control the flush of data to disk.<br /># There are a few important trade-offs here:<br />#    1. Durability: Unflushed data may be lost if you are not using replication.<br />#    2. Latency: Very large flush intervals may lead to latency spikes when the flush does occur as there will be a lot of data to flush.<br />#    3. Throughput: The flush is generally the most expensive operation, and a small flush interval may lead to exceessive seeks.<br /># The settings below allow one to configure the flush policy to flush data after a period of time or<br /># every N messages (or both). This can be done globally and overridden on a per-topic basis.</p><p># The number of messages to accept before forcing a flush of data to disk<br />#log.flush.interval.messages=10000</p><p># The maximum amount of time a message can sit in a log before we force a flush<br />#log.flush.interval.ms=1000</p><p>############################# Log Retention Policy #############################</p><p># The following configurations control the disposal of log segments. The policy can<br /># be set to delete segments after a period of time, or after a given size has accumulated.<br /># A segment will be deleted whenever *either* of these criteria are met. Deletion always happens<br /># from the end of the log.</p><p># The minimum age of a log file to be eligible for deletion<br />log.retention.hours=168</p><p># A size-based retention policy for logs. Segments are pruned from the log as long as the remaining<br /># segments don’t drop below log.retention.bytes.<br />#log.retention.bytes=1073741824</p><p># The maximum size of a log segment file. When this size is reached a new log segment will be created.<br />log.segment.bytes=1073741824</p><p># The interval at which log segments are checked to see if they can be deleted according<br /># to the retention policies<br />log.retention.check.interval.ms=300000</p><p>############################# Zookeeper #############################</p><p># Zookeeper connection string (see zookeeper docs for details).<br /># This is a comma separated host:port pairs, each corresponding to a zk<br /># server. e.g. “127.0.0.1:3000,127.0.0.1:3001,127.0.0.1:3002”.<br /># You can also append an optional chroot string to the urls to specify the<br /># root directory for all kafka znodes.<br />zookeeper.connect=new-cdh12:2181,new-cdh13:2181,new-cdh15:2181,new-cdh16:2181,new-cdh17:2181</p><p># Timeout in ms for connecting to zookeeper<br />zookeeper.connection.timeout.ms=6000</p><h3 id="3-启动kafka"><a class="markdownIt-Anchor" href="#3-启动kafka"></a> 3、启动kafka</h3><p>[hadoop@new-cdh15 kafka_2.10-0.9.0.1]$ bin/kafka-server-start.sh config/server.properties &amp;</p><h3 id="5-加入环境变量"><a class="markdownIt-Anchor" href="#5-加入环境变量"></a> 5、加入环境变量</h3><p>[hadoop@new-cdh15 kafka_2.10-0.9.0.1]$ vi ~/.bash_profile<br /># .bash_profile</p><p># Get the aliases and functions<br />if [ -f ~/.bashrc ]; then<br />. ~/.bashrc<br />fi</p><p># User specific environment and startup programs</p><p>#set zookeeper environment<br />export ZOOKEEPER_HOME=/hadoop/soft/zookeeper-3.4.5-cdh5.7.0<br />export KAFKA_HOME=/hadoop/soft/kafka_2.10-0.9.0.1<br />PATH=<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mi>A</mi><mi>T</mi><mi>H</mi><mo>:</mo></mrow><annotation encoding="application/x-tex">PATH:</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span></span></span>HOME/bin:<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>Z</mi><mi>O</mi><mi>O</mi><mi>K</mi><mi>E</mi><mi>E</mi><mi>P</mi><mi>E</mi><mi>R</mi><mi mathvariant="normal">_</mi><mi>H</mi><mi>O</mi><mi>M</mi><mi>E</mi><mi mathvariant="normal">/</mi><mi>b</mi><mi>i</mi><mi>n</mi><mo>:</mo></mrow><annotation encoding="application/x-tex">ZOOKEEPER\_HOME/bin:</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.06em;vertical-align:-0.31em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord">/</span><span class="mord mathdefault">b</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span></span></span>ZOOKEEPER_HOME/conf:$KAFKA_HOME/bin</p><p>export PATH</p><h3 id="6-测试kafka"><a class="markdownIt-Anchor" href="#6-测试kafka"></a> 6、测试kafka</h3><p>创建topic</p><p>[hadoop@new-cdh15 kafka_2.10-0.9.0.1]$ bin/kafka-topics.sh --create --zookeeper new-cdh12:2181,new-cdh13:2181,new-cdh15:2181,new-cdh16:2181,new-cdh17:2181  --replication-factor 3 --partitions 1 --topic mykafka3<br />Created topic “mykafka3”.</p><p>查看topic</p><p>bin/kafka-topics.sh --list --zookeeper new-cdh12:2181,new-cdh13:2181,new-cdh15:2181,new-cdh16:2181,new-cdh17:2181<br />mykafka<br />mykafka1<br />mykafka3<br />mykafkatest</p><p>在 new-cdh15 发送 topic</p><p>[hadoop@new-cdh15 kafka_2.10-0.9.0.1]$ bin/kafka-console-producer.sh --broker-list new-cdh15:9092 --topic mykafka3</p><p>asdasd<br />sad<br />asdas<br />dsa<br />dasas<br />dasasad</p><p>在new-cdh16 接收 topic:</p><p>[hadoop@new-cdh16 kafka_2.10-0.9.0.1]$ bin/kafka-console-consumer.sh --zookeeper new-cdh12:2181,new-cdh13:2181,new-cdh15:2181,new-cdh16:2181,new-cdh17:2181 --topic mykafka3 --from-beginning</p><p>asdasd<br />sad<br />asdas<br />dsa<br />dasas<br />dasasad</p><p>测试OK 建议安装 <a href="http://www.jsledd.cn/kafka-manager-install-conf/">kafka manager</a> 通过网页来监管 kafka</p>]]></content>
      
      
      <categories>
          
          <category> 大数据 </category>
          
          <category> kafka </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hadoop </tag>
            
            <tag> kafka </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>zookeeper 3.4.5 分布式安装</title>
      <link href="2016/06/22/zookeeper-3-4-5-install/"/>
      <url>2016/06/22/zookeeper-3-4-5-install/</url>
      
        <content type="html"><![CDATA[<p>由于项目需要，需要在集群中安装好Zookeeper，这里我选择最新版本的Zookeeper3.4.5。 ZooKeeper是Hadoop的正式子项目，它是一个针对大型分布式系统的可靠协调系统，提供的功能包括：配置维护、名字服务、分布式同步、组服务等。ZooKeeper的目标就是封装好复杂易出错的关键服务，将简单易用的接口和性能高效、功能稳定的系统提供给用户。它也是Google的Chubby一个开源的实现，是高有效和可靠的协同工作系统，Zookeeper能够用来leader选举，配置信息维护等，在一个分布式的环境中，需要一个Master实例或存储一些配置信息，确保文件写入的一致性等。 当然你运行一个zookeeper也是可以的，但是在生产环境中，你最好部署3，5，7个节点。部署的越多，可靠性就越高，zookeeper集群是以宕机个数过半才会让整个集群宕机的，所以奇数个集群更佳。这里我选择5台机器，hostname分别为new-cdh12、new-cdh13、new-cdh15、new-cdh16、new-cdh17。</p><h2 id="安装步骤"><a class="markdownIt-Anchor" href="#安装步骤"></a> 安装步骤</h2><h3 id="1-解压"><a class="markdownIt-Anchor" href="#1-解压"></a> 1、解压</h3><p>tar -zxvf zookeeper-3.4.5-cdh5.7.0.tar.gz</p><h4 id="2-zookeeper环境变量的配置"><a class="markdownIt-Anchor" href="#2-zookeeper环境变量的配置"></a> 2、Zookeeper环境变量的配置</h4><p>[hadoop@new-cdh12 ~]$ vi .bash_profile<br /># .bash_profile</p><p># Get the aliases and functions<br />if [ -f ~/.bashrc ]; then<br />. ~/.bashrc<br />fi</p><p># User specific environment and startup programs</p><p>#set zookeeper environment<br />export ZOOKEEPER_HOME=/hadoop/soft/zookeeper-3.4.5-cdh5.7.0</p><p>PATH=<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mi>A</mi><mi>T</mi><mi>H</mi><mo>:</mo></mrow><annotation encoding="application/x-tex">PATH:</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span></span></span>HOME/bin:<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>Z</mi><mi>O</mi><mi>O</mi><mi>K</mi><mi>E</mi><mi>E</mi><mi>P</mi><mi>E</mi><mi>R</mi><mi mathvariant="normal">_</mi><mi>H</mi><mi>O</mi><mi>M</mi><mi>E</mi><mi mathvariant="normal">/</mi><mi>b</mi><mi>i</mi><mi>n</mi><mo>:</mo></mrow><annotation encoding="application/x-tex">ZOOKEEPER\_HOME/bin:</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.06em;vertical-align:-0.31em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord">/</span><span class="mord mathdefault">b</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span></span></span>ZOOKEEPER_HOME/conf</p><p>export PATH</p><h3 id="3-修改配置文件"><a class="markdownIt-Anchor" href="#3-修改配置文件"></a> 3、修改配置文件</h3><p>[hadoop@new-cdh12 zookeeper-3.4.5-cdh5.7.0]$ cp conf/zoo_sample.cfg conf/zoo.cfg<br /># The number of milliseconds of each tick<br />tickTime=2000<br /># The number of ticks that the initial<br /># synchronization phase can take<br />initLimit=10<br /># The number of ticks that can pass between<br /># sending a request and getting an acknowledgement<br />syncLimit=5<br /># the directory where the snapshot is stored.<br /># do not use /tmp for storage, /tmp here is just<br /># example sakes.<br />#update by jingshuai start<br />dataDir=/hadoop/zookeeper/data<br />dataLogDir=/hadoop/zookeeper/log<br />#update by jingshuai end</p><p># the port at which the clients will connect<br />clientPort=2181</p><h1 id=""><a class="markdownIt-Anchor" href="#"></a> </h1><p># Be sure to read the maintenance section of the<br /># administrator guide before turning on autopurge.</p><h1 id="-2"><a class="markdownIt-Anchor" href="#-2"></a> </h1><p># <a href="http://zookeeper.apache.org/doc/current/zookeeperAdmin.html#sc_maintenance">http://zookeeper.apache.org/doc/current/zookeeperAdmin.html#sc_maintenance</a></p><h1 id="-3"><a class="markdownIt-Anchor" href="#-3"></a> </h1><p># The number of snapshots to retain in dataDir<br />#autopurge.snapRetainCount=3<br /># Purge task interval in hours<br /># Set to “0” to disable auto purge feature<br />#autopurge.purgeInterval=1</p><p>#update by jingshuai start<br />server.12=new-cdh12:2888:3888<br />server.13=new-cdh13:2888:3888<br />server.15=new-cdh15:2888:3888<br />server.16=new-cdh16:2888:3888<br />server.17=new-cdh17:2888:3888<br />#update by jingshuai end</p><h3 id="5-创建文件夹和文件"><a class="markdownIt-Anchor" href="#5-创建文件夹和文件"></a> 5、创建文件夹和文件</h3><p>[hadoop@new-cdh12 zookeeper-3.4.5-cdh5.7.0]$ mkdir -p /hadoop/zookeeper/data/<br />[hadoop@new-cdh12 zookeeper-3.4.5-cdh5.7.0]$ mkdir -p /hadoop/zookeeper/data/log<br />[hadoop@new-cdh12 zookeeper-3.4.5-cdh5.7.0]$ echo “12” &gt; /hadoop/zookeeper/data/myid</p><p>myid 和zoo.cfg配置必须一样，建议使用ip 最后一个字段。</p><h3 id="5-同步到其他机器"><a class="markdownIt-Anchor" href="#5-同步到其他机器"></a> 5、同步到其他机器</h3><p>把1-5 步骤在其他机器上做一遍 ，myid 不能一样</p><h3 id="6-启动"><a class="markdownIt-Anchor" href="#6-启动"></a> 6、启动</h3><p>[hadoop@new-cdh12 zookeeper-3.4.5-cdh5.7.0]$ ssh new-cdh12 “/hadoop/soft/zookeeper-3.4.5-cdh5.7.0/bin/zkServer.sh start”<br />JMX enabled by default<br />Using config: /hadoop/soft/zookeeper-3.4.5-cdh5.7.0/bin/…/conf/zoo.cfg<br />Starting zookeeper … STARTED<br />[hadoop@new-cdh12 zookeeper-3.4.5-cdh5.7.0]$ ssh new-cdh13 “/hadoop/soft/zookeeper-3.4.5-cdh5.7.0/bin/zkServer.sh start”<br />JMX enabled by default<br />Using config: /hadoop/soft/zookeeper-3.4.5-cdh5.7.0/bin/…/conf/zoo.cfg<br />Starting zookeeper … STARTED<br />[hadoop@new-cdh12 zookeeper-3.4.5-cdh5.7.0]$ ssh new-cdh15 “/hadoop/soft/zookeeper-3.4.5-cdh5.7.0/bin/zkServer.sh start”<br />JMX enabled by default<br />Using config: /hadoop/soft/zookeeper-3.4.5-cdh5.7.0/bin/…/conf/zoo.cfg<br />Starting zookeeper … STARTED<br />[hadoop@new-cdh12 zookeeper-3.4.5-cdh5.7.0]$ ssh new-cdh16 “/hadoop/soft/zookeeper-3.4.5-cdh5.7.0/bin/zkServer.sh start”<br />JMX enabled by default<br />Using config: /hadoop/soft/zookeeper-3.4.5-cdh5.7.0/bin/…/conf/zoo.cfg<br />Starting zookeeper … STARTED<br />[hadoop@new-cdh12 zookeeper-3.4.5-cdh5.7.0]$ ssh new-cdh17 “/hadoop/soft/zookeeper-3.4.5-cdh5.7.0/bin/zkServer.sh start”<br />JMX enabled by default<br />Using config: /hadoop/soft/zookeeper-3.4.5-cdh5.7.0/bin/…/conf/zoo.cfg<br />Starting zookeeper … STARTED</p><h3 id="7-查看状态"><a class="markdownIt-Anchor" href="#7-查看状态"></a> 7、查看状态</h3><p>[hadoop@new-cdh12 ~]$ ssh new-cdh12 “/hadoop/soft/zookeeper-3.4.5-cdh5.7.0/bin/zkServer.sh status”<br />JMX enabled by default<br />Using config: /hadoop/soft/zookeeper-3.4.5-cdh5.7.0/bin/…/conf/zoo.cfg<br />Mode: follower<br />[hadoop@new-cdh12 ~]$ ssh new-cdh13 “/hadoop/soft/zookeeper-3.4.5-cdh5.7.0/bin/zkServer.sh status”<br />JMX enabled by default<br />Using config: /hadoop/soft/zookeeper-3.4.5-cdh5.7.0/bin/…/conf/zoo.cfg<br />Mode: follower<br />[hadoop@new-cdh12 ~]$ ssh new-cdh15 “/hadoop/soft/zookeeper-3.4.5-cdh5.7.0/bin/zkServer.sh status”<br />JMX enabled by default<br />Using config: /hadoop/soft/zookeeper-3.4.5-cdh5.7.0/bin/…/conf/zoo.cfg<br />Mode: follower<br />[hadoop@new-cdh12 ~]$ ssh new-cdh16 “/hadoop/soft/zookeeper-3.4.5-cdh5.7.0/bin/zkServer.sh status”<br />JMX enabled by default<br />Using config: /hadoop/soft/zookeeper-3.4.5-cdh5.7.0/bin/…/conf/zoo.cfg<br />Mode: follower<br />[hadoop@new-cdh12 ~]$ ssh new-cdh17 “/hadoop/soft/zookeeper-3.4.5-cdh5.7.0/bin/zkServer.sh status”<br />JMX enabled by default<br />Using config: /hadoop/soft/zookeeper-3.4.5-cdh5.7.0/bin/…/conf/zoo.cfg<br />Mode: leader</p><p>相关：<a href="http://www.jsledd.cn/hadoop-cdh5-7-0/">集群安装</a></p>]]></content>
      
      
      <categories>
          
          <category> 大数据 </category>
          
          <category> zookeeper </category>
          
      </categories>
      
      
        <tags>
            
            <tag> zookeeper </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hadoop 2.7 手动安装（cdh5.7.0）目录</title>
      <link href="2016/06/22/hadoop-cdh5-7-0/"/>
      <url>2016/06/22/hadoop-cdh5-7-0/</url>
      
        <content type="html"><![CDATA[<p>一直都是用cm 来安装 cdh ,刚好公司有有一些机器闲置，于是决定手动来安装一下cdh 5.7.0集群。</p><h4 id="hadoop27-ha-zookeeper345-kafka0901-spark16-hbase12"><a class="markdownIt-Anchor" href="#hadoop27-ha-zookeeper345-kafka0901-spark16-hbase12"></a> hadoop2.7 + HA + zookeeper3.4.5 + KAFKA0.9.0.1 + SPARK1.6 + HBASE1.2</h4><h2 id="软件地址httparchiveclouderacomcdh5cdh5"><a class="markdownIt-Anchor" href="#软件地址httparchiveclouderacomcdh5cdh5"></a> 软件地址：<a href="http://archive.cloudera.com/cdh5/cdh/5/">http://archive.cloudera.com/cdh5/cdh/5/</a></h2><h2 id="节点规划"><a class="markdownIt-Anchor" href="#节点规划"></a> 节点规划：</h2><p>NN</p><p>DN</p><p>JN</p><p>ZK</p><p>ZKFC</p><p>SP</p><p>KF</p><p>HM</p><p>HRS</p><p>RM</p><p>NM</p><p>JH</p><p>new-cdh1</p><p>√</p><p>×</p><p>×</p><p>×</p><p>√</p><p>×</p><p>×</p><p>×</p><p>×</p><p>×</p><p>×</p><p>×</p><p>new-cdh2</p><p>√</p><p>×</p><p>×</p><p>×</p><p>√</p><p>×</p><p>×</p><p>×</p><p>×</p><p>×</p><p>×</p><p>×</p><p>new-cdh3</p><p>×</p><p>√</p><p>×</p><p>×</p><p>×</p><p>×</p><p>×</p><p>×</p><p>×</p><p>√</p><p>√</p><p>×</p><p>new-cdh4</p><p>×</p><p>√</p><p>×</p><p>×</p><p>×</p><p>×</p><p>×</p><p>×</p><p>×</p><p>√</p><p>√</p><p>×</p><p>new-cdh5</p><p>×</p><p>√</p><p>√</p><p>×</p><p>×</p><p>×</p><p>×</p><p>√</p><p>×</p><p>×</p><p>√</p><p>×</p><p>new-cdh6</p><p>×</p><p>√</p><p>√</p><p>×</p><p>×</p><p>×</p><p>×</p><p>×</p><p>√</p><p>×</p><p>√</p><p>×</p><p>new-cdh7</p><p>×</p><p>√</p><p>√</p><p>×</p><p>×</p><p>×</p><p>×</p><p>×</p><p>√</p><p>×</p><p>√</p><p>×</p><p>new-cdh9</p><p>×</p><p>√</p><p>×</p><p>×</p><p>×</p><p>√</p><p>×</p><p>×</p><p>√</p><p>×</p><p>√</p><p>×</p><p>new-cdh10</p><p>×</p><p>√</p><p>×</p><p>×</p><p>×</p><p>√</p><p>×</p><p>×</p><p>√</p><p>×</p><p>√</p><p>√</p><p>new-cdh11</p><p>×</p><p>√</p><p>×</p><p>×</p><p>×</p><p>√</p><p>×</p><p>×</p><p>√</p><p>×</p><p>√</p><p>×</p><p>new-cdh12</p><p>×</p><p>√</p><p>×</p><p>√</p><p>×</p><p>√</p><p>×</p><p>×</p><p>×</p><p>×</p><p>√</p><p>×</p><p>new-cdh13</p><p>×</p><p>√</p><p>×</p><p>√</p><p>×</p><p>√</p><p>×</p><p>×</p><p>×</p><p>×</p><p>√</p><p>×</p><p>new-cdh15</p><p>×</p><p>×</p><p>×</p><p>√</p><p>×</p><p>×</p><p>√</p><p>×</p><p>×</p><p>×</p><p>×</p><p>×</p><p>new-cdh16</p><p>×</p><p>×</p><p>×</p><p>√</p><p>×</p><p>×</p><p>√</p><p>×</p><p>×</p><p>×</p><p>×</p><p>×</p><p>new-cdh17</p><p>×</p><p>×</p><p>×</p><p>√</p><p>×</p><p>×</p><p>√</p><p>×</p><p>×</p><p>×</p><p>×</p><p>×</p><h2 id="安装"><a class="markdownIt-Anchor" href="#安装"></a> 安装</h2><h3 id="1-安装准备ssh-相互免密码登录-关闭防火墙-关闭selinux-时间同步-ntp-等"><a class="markdownIt-Anchor" href="#1-安装准备ssh-相互免密码登录-关闭防火墙-关闭selinux-时间同步-ntp-等"></a> 1、安装准备：（ssh 相互免密码登录、关闭防火墙、关闭selinux、时间同步 ntp 等）</h3><h3 id="2-zookeeper-345-安装"><a class="markdownIt-Anchor" href="#2-zookeeper-345-安装"></a> 2、<a href="http://www.jsledd.cn/zookeeper-3-4-5-install/">zookeeper 3.4.5 安装</a></h3><h3 id="3-kafka-0901-安装-kafka-manger-安装和使用"><a class="markdownIt-Anchor" href="#3-kafka-0901-安装-kafka-manger-安装和使用"></a> 3、<a href="http://www.jsledd.cn/kafka-install/">kafka 0.9.0.1 安装</a>+ <a href="http://www.jsledd.cn/kafka-manager-install-conf/">kafka-manger 安装和使用</a></h3><h3 id="4-hadoop-27-ha-安装"><a class="markdownIt-Anchor" href="#4-hadoop-27-ha-安装"></a> 4、<a href="http://www.jsledd.cn/hadoop-2-7-ha-install/">hadoop 2.7 + HA 安装</a></h3><h3 id="5-hbase12-分布式安装"><a class="markdownIt-Anchor" href="#5-hbase12-分布式安装"></a> 5、<a href="http://www.jsledd.cn/hbase-install/">hbase1.2 分布式安装</a></h3><h3 id="6-spark16-分布式安装"><a class="markdownIt-Anchor" href="#6-spark16-分布式安装"></a> 6、<a href="http://www.jsledd.cn/spark1-6-%e5%88%86%e5%b8%83%e5%bc%8f%e5%ae%89%e8%a3%85/">SPARK1.6 分布式安装</a></h3><p>ps: ZK:Zookeeper ZKFC:ZKFC SP:SPARK KF:KAFKA HM:HMaster HRS:HRegionServer RM:ResourceManager NM:NodeManager JH:JobHistory</p>]]></content>
      
      
      <categories>
          
          <category> 大数据 </category>
          
          <category> cdh </category>
          
      </categories>
      
      
        <tags>
            
            <tag> spark </tag>
            
            <tag> hadoop </tag>
            
            <tag> ha </tag>
            
            <tag> hbase </tag>
            
            <tag> kafka </tag>
            
            <tag> yarn </tag>
            
            <tag> zookeeper </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>逆波兰表达式的应用</title>
      <link href="2016/06/12/reversepolishnotation/"/>
      <url>2016/06/12/reversepolishnotation/</url>
      
        <content type="html"><![CDATA[<p>​逆波兰表达式是一种后缀表达式，所谓后缀就是指算符写在后面。<br />​平常使用的算式则是一种中缀表达式，如 ( 1 + 2 ) * ( 3 + 4 ) 。<br />​该算式的逆波兰表达式写法为 ( ( 1 2 + ) ( 3 4 + ) * ) 。<br />逆波兰表达式主要有以下两个优点：</p><blockquote><ul><li>去掉括号后表达式无歧义，上式即便写成 1 2 + 3 4 + * 也可以依据次序计算出正确结果。</li><li>适合用栈操作运算：遇到数字则入栈；遇到算符则取出栈顶两个数字进行计算，并将结果压入栈中。</li></ul></blockquote><h2 id="中缀表达式和后缀表达式"><a class="markdownIt-Anchor" href="#中缀表达式和后缀表达式"></a> 中缀表达式和后缀表达式</h2><h3 id="将字符串表达式放入数组"><a class="markdownIt-Anchor" href="#将字符串表达式放入数组"></a> 将字符串表达式放入数组</h3><p>​将字符串表达式拆分成数组</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> String[] notationStrToArray(String notationStr) &#123;</span><br><span class="line">        List&lt;String&gt; list = <span class="keyword">new</span> ArrayList();</span><br><span class="line">        notationStr = notationStr.replaceAll(<span class="string">&quot; &quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">        <span class="keyword">char</span>[] chars = notationStr.toCharArray();</span><br><span class="line">        <span class="keyword">int</span> keepNum = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> preflag = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; chars.length; i++) &#123;</span><br><span class="line">            <span class="keyword">char</span> c = chars[i];</span><br><span class="line">            <span class="keyword">if</span> (preflag == <span class="number">0</span> &amp;&amp; c == <span class="number">45</span>) &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;负数&quot;</span>);</span><br><span class="line">                keepNum++;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (isSymbol(c) &amp;&amp; c != <span class="number">32</span>) &#123;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (keepNum &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                    String trim = notationStr.substring(i - keepNum, i).trim();</span><br><span class="line">                    <span class="keyword">if</span> (!trim.isEmpty()) list.add(trim);</span><br><span class="line">                    keepNum = <span class="number">0</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                preflag = <span class="number">0</span>;</span><br><span class="line">                list.add(c + <span class="string">&quot;&quot;</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                preflag = <span class="number">1</span>;</span><br><span class="line">                keepNum++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (keepNum &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            list.add(notationStr.substring(notationStr.length() - keepNum, notationStr.length()).trim());</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(list);</span><br><span class="line">        <span class="keyword">return</span> list.toArray(<span class="keyword">new</span> String[list.size()]);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="中缀表达式转后缀表达式逆波兰表达式"><a class="markdownIt-Anchor" href="#中缀表达式转后缀表达式逆波兰表达式"></a> 中缀表达式转后缀表达式（逆波兰表达式）</h3><p>​将普通平常使用的中缀表达式转成后缀表达式（逆波兰表达式）。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> String[] convertInfixToSuffix(String infixNotation) &#123;</span><br><span class="line">        String[] strings = notationStrToArray(infixNotation);</span><br><span class="line">        Stack&lt;String&gt; symbolStack = <span class="keyword">new</span> Stack&lt;String&gt;();<span class="comment">//记录运算符</span></span><br><span class="line">        List&lt;String&gt; list = <span class="keyword">new</span> ArrayList();<span class="comment">//记录转换后的结果</span></span><br><span class="line">        <span class="keyword">for</span> (String str : strings) &#123;</span><br><span class="line">            <span class="keyword">if</span> (str.matches(<span class="string">&quot;^-?\\d+$&quot;</span>)) &#123;<span class="comment">// 判断是不是数字，如果是直接存入结果集</span></span><br><span class="line">                list.add(str);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (str.equals(<span class="string">&quot;(&quot;</span>)) &#123; <span class="comment">//判断是不是左括弧,是直接压入栈</span></span><br><span class="line">                symbolStack.push(str);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (str.equals(<span class="string">&quot;)&quot;</span>)) &#123; <span class="comment">//判断是不是右括弧,找到对应的左括弧</span></span><br><span class="line">                <span class="keyword">while</span> (!symbolStack.peek().equals(<span class="string">&quot;(&quot;</span>)) &#123;</span><br><span class="line">                    list.add(symbolStack.pop());</span><br><span class="line">                &#125;</span><br><span class="line">                symbolStack.pop();</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">//str的优先级小于等于symbolStack栈顶运算符, 将symbolStack栈顶的运算符弹出并加入到sb中，再次往下判断直到结束</span></span><br><span class="line">                <span class="keyword">while</span> (!symbolStack.isEmpty()) &#123;</span><br><span class="line">                    String peek = symbolStack.peek();</span><br><span class="line">                    <span class="keyword">if</span> (<span class="string">&quot;(&quot;</span>.equals(peek)) &#123;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (comparPriority(str, peek) &lt; <span class="number">0</span>) &#123;</span><br><span class="line">                        list.add(symbolStack.pop());</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                symbolStack.push(str);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//将符号栈中的符号依次输入结果集</span></span><br><span class="line">        <span class="keyword">while</span> (!symbolStack.isEmpty()) &#123;</span><br><span class="line">            list.add(symbolStack.pop());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> list.toArray(<span class="keyword">new</span> String[list.size()]);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="比较运算符的优先级"><a class="markdownIt-Anchor" href="#比较运算符的优先级"></a> 比较运算符的优先级</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">public int comparPriority(String thissymbol, String othersymbol) &#123;</span><br><span class="line">        int re &#x3D; 0, thislevel &#x3D; 0, otherlevel &#x3D; 0;</span><br><span class="line">        if (&quot;*&quot;.equals(thissymbol) || &quot;&#x2F;&quot;.equals(thissymbol)) &#123;</span><br><span class="line">            thislevel &#x3D; 1;</span><br><span class="line">        &#125; else if (&quot;+&quot;.equals(thissymbol) || &quot;-&quot;.equals(thissymbol)) &#123;</span><br><span class="line">            thislevel &#x3D; 0;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            throw new RuntimeException(&quot;运算符有误&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">        if (&quot;*&quot;.equals(othersymbol) || &quot;&#x2F;&quot;.equals(othersymbol)) &#123;</span><br><span class="line">            otherlevel &#x3D; 1;</span><br><span class="line">        &#125; else if (&quot;+&quot;.equals(othersymbol) || &quot;-&quot;.equals(othersymbol)) &#123;</span><br><span class="line">            otherlevel &#x3D; 0;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            throw new RuntimeException(&quot;运算符有误&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">        return thislevel - otherlevel;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public boolean isSymbol(char val) &#123;</span><br><span class="line">        return val &#x3D;&#x3D; &#39;+&#39; || val &#x3D;&#x3D; &#39;-&#39; || val &#x3D;&#x3D; &#39;*&#39; || val &#x3D;&#x3D; &#39;&#x2F;&#39; || val &#x3D;&#x3D; &#39;(&#39; || val &#x3D;&#x3D; &#39;)&#39;;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h2 id="逆波兰表达式的运算"><a class="markdownIt-Anchor" href="#逆波兰表达式的运算"></a> 逆波兰表达式的运算</h2><p>​逆波兰表达式的运算</p><h3 id="方法一"><a class="markdownIt-Anchor" href="#方法一"></a> 方法一</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">evalRPN</span><span class="params">(String[] tokens)</span> </span>&#123;</span><br><span class="line">    Stack&lt;Integer&gt; resStack = <span class="keyword">new</span> Stack&lt;Integer&gt;();<span class="comment">//记录运算符</span></span><br><span class="line">    <span class="keyword">for</span> (String token : tokens) &#123;</span><br><span class="line">        <span class="keyword">if</span> (token.matches(<span class="string">&quot;^-?\\d+$&quot;</span>)) &#123;<span class="comment">// 判断是不是数字，如果是直接存入结果集</span></span><br><span class="line">            resStack.push(Integer.parseInt(token));</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">int</span> ev2 = resStack.pop();</span><br><span class="line">            <span class="keyword">int</span> ev1 = resStack.pop();</span><br><span class="line">            <span class="keyword">int</span> evre = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">switch</span> (token) &#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;+&quot;</span>:</span><br><span class="line">                    evre = ev1 + ev2;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;-&quot;</span>:</span><br><span class="line">                    evre = ev1 - ev2;</span><br><span class="line">                    <span class="keyword">break</span>; <span class="comment">//可选</span></span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;*&quot;</span>:</span><br><span class="line">                    evre = ev1 * ev2;</span><br><span class="line">                    <span class="keyword">break</span>; <span class="comment">//可选</span></span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;/&quot;</span>:</span><br><span class="line">                    evre = ev1 / ev2;</span><br><span class="line">                    <span class="keyword">break</span>; <span class="comment">//可选</span></span><br><span class="line">                <span class="comment">//你可以有任意数量的case语句</span></span><br><span class="line">                <span class="keyword">default</span>: <span class="comment">//可选</span></span><br><span class="line">                    <span class="comment">//语句</span></span><br><span class="line">            &#125;</span><br><span class="line">            resStack.push(evre);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> resStack.pop();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="方法二方法一的优化推荐"><a class="markdownIt-Anchor" href="#方法二方法一的优化推荐"></a> 方法二（方法一的优化，推荐）</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">evalRPN1</span><span class="params">(String[] tokens)</span> </span>&#123;</span><br><span class="line">       Stack&lt;Integer&gt; resStack = <span class="keyword">new</span> Stack&lt;Integer&gt;();<span class="comment">//记录运算符</span></span><br><span class="line">       <span class="keyword">for</span> (String token : tokens) &#123;</span><br><span class="line">           <span class="keyword">int</span> ev1, ev2 = <span class="number">0</span>;</span><br><span class="line">           <span class="keyword">switch</span> (token) &#123;</span><br><span class="line">               <span class="keyword">case</span> <span class="string">&quot;+&quot;</span>:</span><br><span class="line">                   ev2 = resStack.pop();</span><br><span class="line">                   ev1 = resStack.pop();</span><br><span class="line">                   resStack.push(ev1 + ev2);</span><br><span class="line">                   <span class="keyword">break</span>;</span><br><span class="line">               <span class="keyword">case</span> <span class="string">&quot;-&quot;</span>:</span><br><span class="line">                   ev2 = resStack.pop();</span><br><span class="line">                   ev1 = resStack.pop();</span><br><span class="line">                   resStack.push(ev1 - ev2);</span><br><span class="line">                   <span class="keyword">break</span>;</span><br><span class="line">               <span class="keyword">case</span> <span class="string">&quot;*&quot;</span>:</span><br><span class="line">                   ev2 = resStack.pop();</span><br><span class="line">                   ev1 = resStack.pop();</span><br><span class="line">                   resStack.push(ev1 * ev2);</span><br><span class="line">                   <span class="keyword">break</span>;</span><br><span class="line">               <span class="keyword">case</span> <span class="string">&quot;/&quot;</span>:</span><br><span class="line">                   ev2 = resStack.pop();</span><br><span class="line">                   ev1 = resStack.pop();</span><br><span class="line">                   resStack.push(ev1 / ev2);</span><br><span class="line">                   <span class="keyword">break</span>;</span><br><span class="line">               <span class="comment">//你可以有任意数量的case语句</span></span><br><span class="line">               <span class="keyword">default</span>:</span><br><span class="line">                   resStack.push(Integer.parseInt(token));</span><br><span class="line">                   <span class="keyword">break</span>;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">return</span> resStack.pop();</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h3 id="方法三推荐使用数组模拟栈可以节省内存"><a class="markdownIt-Anchor" href="#方法三推荐使用数组模拟栈可以节省内存"></a> 方法三（推荐,使用数组模拟栈，可以节省内存）</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">evalRPNArray</span><span class="params">(String[] tokens)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[] numStack = <span class="keyword">new</span> <span class="keyword">int</span>[tokens.length / <span class="number">2</span> + <span class="number">1</span>];</span><br><span class="line">        <span class="keyword">int</span> index = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (String s : tokens) &#123;</span><br><span class="line">            <span class="keyword">switch</span> (s) &#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;+&quot;</span>:</span><br><span class="line">                    numStack[index - <span class="number">2</span>] += numStack[--index];</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;-&quot;</span>:</span><br><span class="line">                    numStack[index - <span class="number">2</span>] -= numStack[--index];</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;*&quot;</span>:</span><br><span class="line">                    numStack[index - <span class="number">2</span>] *= numStack[--index];</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;/&quot;</span>:</span><br><span class="line">                    numStack[index - <span class="number">2</span>] /= numStack[--index];</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">default</span>:</span><br><span class="line">                    <span class="comment">// numStack[index++] = Integer.valueOf(s);</span></span><br><span class="line">                    <span class="comment">//valueOf改为parseInt，减少自动拆箱装箱操作</span></span><br><span class="line">                    numStack[index++] = Integer.parseInt(s);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> numStack[<span class="number">0</span>];</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>完整代码：<a href="https://github.com/shadowagnoy/DataStructures/blob/master/src/main/java/cn/jsledd/stack/ReversePolishNotation.java">Github</a></p>]]></content>
      
      
      <categories>
          
          <category> 数据结构与算法 </category>
          
          <category> 栈 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据结构与算法 </tag>
            
            <tag> 栈 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>环形单链表及其约瑟夫问题</title>
      <link href="2016/06/09/circlesinglelinkedlist/"/>
      <url>2016/06/09/circlesinglelinkedlist/</url>
      
        <content type="html"><![CDATA[<p>​将<a href="http://www.jsledd.cn/2016/06/08/singlelinkedlist/">单链表</a>改成环形单链表。使用环形单链表解决约瑟夫问题。</p><h2 id="一-创建一个环形单链表"><a class="markdownIt-Anchor" href="#一-创建一个环形单链表"></a> 一、创建一个环形单链表</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> JSLEDD</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 定义一个学生链表来管理学僧</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2016-6-2 14:07</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@throws</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CircleSingleLinkedList</span> </span>&#123;</span><br><span class="line">    <span class="comment">//先初始化一个头节点, 头节点不要动, 不存放具体的数据</span></span><br><span class="line">    <span class="keyword">private</span> StudentNode head = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//返回头节点</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> StudentNode <span class="title">getHead</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> head;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> studentNode</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> void</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@description</span> 直接将新增节点加到最后</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> JSLEDD</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@date</span> 2016/6/2 14:10</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">(StudentNode studentNode)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (head == <span class="keyword">null</span>) &#123;</span><br><span class="line">            head = studentNode;</span><br><span class="line">            head.next = head;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//因为head节点不能动，因此我们需要一个辅助遍历 temp</span></span><br><span class="line">        StudentNode temp = head;</span><br><span class="line">        <span class="comment">//遍历链表，找到最后</span></span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">            <span class="comment">//找到链表的最后</span></span><br><span class="line">            <span class="keyword">if</span> (temp.next == head) &#123;<span class="comment">//</span></span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//如果没有找到最后, 将将temp后移</span></span><br><span class="line">            temp = temp.next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//当退出while循环时，temp就指向了链表的最后</span></span><br><span class="line">        <span class="comment">//将最后这个节点的next 指向 新的节点</span></span><br><span class="line">        temp.next = studentNode;</span><br><span class="line">        studentNode.next = head;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> nums</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> void</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@description</span> 批量添加</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> JSLEDD</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@date</span> 2016/6/2 14:10</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">bacthadd</span><span class="params">(<span class="keyword">int</span> nums)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> startNo = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> i = startNo;</span><br><span class="line">        <span class="keyword">if</span> (head == <span class="keyword">null</span>) &#123;</span><br><span class="line">            head = <span class="keyword">new</span> StudentNode(i, <span class="string">&quot;景&quot;</span> + i++);</span><br><span class="line">            head.next = head;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//因为head节点不能动，因此我们需要一个辅助遍历 temp</span></span><br><span class="line">        StudentNode temp = head;</span><br><span class="line">        <span class="comment">//遍历链表，找到最后</span></span><br><span class="line">        <span class="keyword">for</span> (; i &lt; startNo + nums; i++) &#123;</span><br><span class="line">            temp.next = <span class="keyword">new</span> StudentNode(i, <span class="string">&quot;景&quot;</span> + i);</span><br><span class="line">            temp = temp.next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//当退出while循环时，temp就指向了链表的最后</span></span><br><span class="line">        <span class="comment">//将最后这个节点的next 指向 新的节点</span></span><br><span class="line">        temp.next = head;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> studentNode</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> void</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@description</span> 按学号新增节点</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> JSLEDD</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@date</span> 2016/6/2 14:11</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addByOrder</span><span class="params">(StudentNode studentNode)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//因为头节点不能动，因此我们仍然通过一个辅助指针(变量)来帮助找到添加的位置</span></span><br><span class="line">        <span class="comment">//因为单链表，因为我们找的temp 是位于 添加位置的前一个节点，否则插入不了</span></span><br><span class="line">        StudentNode temp = head;</span><br><span class="line">        <span class="keyword">boolean</span> flag = <span class="keyword">false</span>; <span class="comment">// flag标志添加的编号是否存在，默认为false</span></span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (temp.next == head) &#123;<span class="comment">//说明temp已经在链表的最后</span></span><br><span class="line">                <span class="keyword">break</span>; <span class="comment">//</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (temp.next.numno &gt; studentNode.numno) &#123; <span class="comment">//位置找到，就在temp的后面插入</span></span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (temp.next.numno == studentNode.numno) &#123;<span class="comment">//说明希望添加的学号已然存在</span></span><br><span class="line">                flag = <span class="keyword">true</span>; <span class="comment">//说明编号存在</span></span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            temp = temp.next; <span class="comment">//后移，遍历当前链表</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//判断flag 的值</span></span><br><span class="line">        <span class="keyword">if</span> (flag) &#123; <span class="comment">//不能添加，说明编号存在</span></span><br><span class="line">            System.out.printf(<span class="string">&quot;按学号插入列表错误，学号 %d 已经存在了, 不能加入\n&quot;</span>, studentNode.numno);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">//插入到链表中, temp的后面</span></span><br><span class="line">            studentNode.next = temp.next;</span><br><span class="line">            temp.next = studentNode;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> StudentNode <span class="title">getByNo</span><span class="params">(<span class="keyword">int</span> numno)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//判断是否空</span></span><br><span class="line">        <span class="keyword">if</span> (head == <span class="keyword">null</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;链表为空~&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//找到需要修改的节点, 根据no编号</span></span><br><span class="line">        <span class="comment">//定义一个辅助变量</span></span><br><span class="line">        StudentNode temp = head.next;</span><br><span class="line">        <span class="keyword">boolean</span> flag = <span class="keyword">false</span>; <span class="comment">//表示是否找到该节点</span></span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (temp == head) &#123;</span><br><span class="line">                <span class="keyword">break</span>; <span class="comment">//已经遍历完链表</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (temp.numno == numno) &#123;</span><br><span class="line">                <span class="keyword">return</span> temp;</span><br><span class="line">            &#125;</span><br><span class="line">            temp = temp.next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> studentNode</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> void</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@description</span> 按学号更改学生</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> JSLEDD</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@date</span> 2016/6/2 14:15</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">(StudentNode studentNode)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//判断是否空</span></span><br><span class="line">        <span class="keyword">if</span> (head == <span class="keyword">null</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;链表为空~&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//找到需要修改的节点, 根据no编号</span></span><br><span class="line">        <span class="comment">//定义一个辅助变量</span></span><br><span class="line">        StudentNode temp = head.next;</span><br><span class="line">        <span class="keyword">boolean</span> flag = <span class="keyword">false</span>; <span class="comment">//表示是否找到该节点</span></span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (temp == head) &#123;</span><br><span class="line">                <span class="keyword">break</span>; <span class="comment">//已经遍历完链表</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (temp.numno == studentNode.numno) &#123;</span><br><span class="line">                <span class="comment">//找到</span></span><br><span class="line">                flag = <span class="keyword">true</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            temp = temp.next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//根据flag 判断是否找到要修改的节点</span></span><br><span class="line">        <span class="keyword">if</span> (flag) &#123;</span><br><span class="line">            temp.name = studentNode.name;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123; <span class="comment">//没有找到</span></span><br><span class="line">            System.out.printf(<span class="string">&quot;没有找到学号 %d 的节点，不能修改\n&quot;</span>, studentNode.numno);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> studentNode</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> void</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@description</span> 删除学生</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> JSLEDD</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@date</span> 2016/6/2 14:18</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">del</span><span class="params">(StudentNode studentNode)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (head == <span class="keyword">null</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;链表为空~&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        StudentNode temp = head;</span><br><span class="line">        <span class="keyword">boolean</span> flag = <span class="keyword">false</span>; <span class="comment">// 标志是否找到待删除节点的</span></span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (temp.next == head) &#123; <span class="comment">//已经到链表的最后</span></span><br><span class="line">                <span class="keyword">if</span> (studentNode.numno == head.numno) &#123; <span class="comment">//找到最后之后 判断是不是头元素，只能在最后的时候判断</span></span><br><span class="line">                    flag = <span class="keyword">true</span>;</span><br><span class="line">                    head = head.next;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (temp.next.numno == studentNode.numno) &#123;</span><br><span class="line">                <span class="comment">//找到的待删除节点的前一个节点temp</span></span><br><span class="line">                flag = <span class="keyword">true</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            temp = temp.next; <span class="comment">//temp后移，遍历</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//判断flag</span></span><br><span class="line">        <span class="keyword">if</span> (flag) &#123; <span class="comment">//找到</span></span><br><span class="line">            <span class="comment">//可以删除</span></span><br><span class="line">            temp.next = temp.next.next;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.printf(<span class="string">&quot;要删除的 %s 节点不存在\n&quot;</span>, studentNode);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> void</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@description</span> 打印学生信息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> JSLEDD</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@date</span> 2016/6/2 14:20</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">printList</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;---------------------------&quot;</span>);</span><br><span class="line">        <span class="comment">//判断链表是否为空</span></span><br><span class="line">        <span class="keyword">if</span> (head == <span class="keyword">null</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;链表为空&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//因为头节点，不能动，因此我们需要一个辅助变量来遍历</span></span><br><span class="line">        StudentNode temp = head;</span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">            <span class="comment">//输出节点的信息</span></span><br><span class="line">            System.out.println(temp);</span><br><span class="line">            <span class="comment">//判断是否到链表最后</span></span><br><span class="line">            <span class="keyword">if</span> (temp.next.numno == head.numno) &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//将temp后移， 一定小心</span></span><br><span class="line">            temp = temp.next;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> void</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@description</span> 反序打印学生信息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> JSLEDD</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@date</span> 2016/6/2 14:36</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">reversePrintList</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;---------------------------&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (head == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span>;<span class="comment">//空链表，不能打印</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//创建要给一个栈，将各个节点压入栈</span></span><br><span class="line">        Stack&lt;StudentNode&gt; stack = <span class="keyword">new</span> Stack&lt;StudentNode&gt;();</span><br><span class="line">        StudentNode cur = head.next;</span><br><span class="line">        stack.push(head);</span><br><span class="line">        <span class="comment">//将链表的所有节点压入栈</span></span><br><span class="line">        <span class="keyword">while</span> (cur != head) &#123;</span><br><span class="line">            stack.push(cur);</span><br><span class="line">            cur = cur.next; <span class="comment">//cur后移，这样就可以压入下一个节点</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//将栈中的节点进行打印,pop 出栈</span></span><br><span class="line">        <span class="keyword">while</span> (stack.size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            System.out.println(stack.pop()); <span class="comment">//stack的特点是先进后出</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> int</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@description</span> 打印学生数量</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> JSLEDD</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@date</span> 2016/6/2 14:22</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">size</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (head == <span class="keyword">null</span>) &#123; <span class="comment">//空链表</span></span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> length = <span class="number">1</span>;</span><br><span class="line">        <span class="comment">//定义一个辅助的变量, 这里我们没有统计头节点</span></span><br><span class="line">        StudentNode cur = head.next;</span><br><span class="line">        <span class="keyword">while</span> (cur != head) &#123;</span><br><span class="line">            length++;</span><br><span class="line">            cur = cur.next; <span class="comment">//遍历</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> length;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> index 索引</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> void</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@description</span> 正序查找第几个学生</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> JSLEDD</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@date</span> 2016/6/2 14:25</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> StudentNode <span class="title">findLeftIndexNode</span><span class="params">(<span class="keyword">int</span> index)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (head == <span class="keyword">null</span>) &#123; <span class="comment">//空链表</span></span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> size = size();</span><br><span class="line">        <span class="keyword">if</span> (index &lt;= <span class="number">0</span> || index &gt; size) &#123;<span class="comment">//越界</span></span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//定义一个辅助的变量, 这里我们没有统计头节点</span></span><br><span class="line">        StudentNode cur = head;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; index; i++) &#123;</span><br><span class="line">            cur = cur.next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> cur;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> index 索引</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> void</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@description</span> 反序查找第几个学生</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> JSLEDD</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@date</span> 2016/6/2 14:25</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> StudentNode <span class="title">findRightIndexNode</span><span class="params">(<span class="keyword">int</span> index)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> findLeftIndexNode(size() - index - <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> void</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@description</span> 将列表反转</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> JSLEDD</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@date</span> 2016/6/2 14:39</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">reversetList</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//如果当前链表为空，或者只有一个节点，无需反转，直接返回</span></span><br><span class="line">        <span class="keyword">if</span> (head == <span class="keyword">null</span> || head.next == head) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//思路 先生成一个单链表再转换成环形单链表</span></span><br><span class="line">        StudentNode newHead = <span class="keyword">new</span> StudentNode(-<span class="number">1</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">        StudentNode cur = head;<span class="comment">//指针遍历的节点</span></span><br><span class="line">        StudentNode curnext = <span class="keyword">null</span>;<span class="comment">//指针遍历的节点的下一个节点</span></span><br><span class="line">        <span class="keyword">while</span> (cur.next != <span class="keyword">null</span>) &#123;</span><br><span class="line">            curnext = cur.next;<span class="comment">//当前节点的下一个节点</span></span><br><span class="line">            cur.next = newHead.next;<span class="comment">//将新的头节点指向的下一节点赋予当前节点的下一节点</span></span><br><span class="line">            newHead.next = cur; <span class="comment">//将新的头节点指向当前的节点</span></span><br><span class="line">            cur = curnext; <span class="comment">//开始遍历下</span></span><br><span class="line">        &#125;</span><br><span class="line">        head = newHead.next;</span><br><span class="line">        cur.next = head;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="二-解决约瑟夫问题"><a class="markdownIt-Anchor" href="#二-解决约瑟夫问题"></a> 二、解决约瑟夫问题</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> startNo  开始的地方</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> countNum 步长</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> nums     取出个数</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@throws</span></span></span><br><span class="line"><span class="comment">   * <span class="doctag">@description</span></span></span><br><span class="line"><span class="comment">   * <span class="doctag">@author</span> JSLEDD</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@date</span> 2016/6/215:55</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">jonsepfu</span><span class="params">(<span class="keyword">int</span> startNo, <span class="keyword">int</span> countNum, <span class="keyword">int</span> nums)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">if</span> (head == <span class="keyword">null</span> || startNo &lt; <span class="number">1</span> || startNo &gt; nums) &#123;</span><br><span class="line">          System.out.println(<span class="string">&quot;参数错误&quot;</span>);</span><br><span class="line">          <span class="keyword">return</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      StudentNode newhead = head;</span><br><span class="line">      StudentNode last = head;</span><br><span class="line">      <span class="comment">//循环获取最后一个元素</span></span><br><span class="line">      <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">          <span class="keyword">if</span> (last.next == head) &#123;</span><br><span class="line">              <span class="keyword">break</span>;</span><br><span class="line">          &#125;</span><br><span class="line">          last = last.next;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; startNo - <span class="number">1</span>; i++) &#123;</span><br><span class="line">          newhead = newhead.next;</span><br><span class="line">          last = last.next;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">          <span class="keyword">if</span> (newhead == last) &#123;</span><br><span class="line">              System.out.println(<span class="string">&quot;最后去除&quot;</span> + newhead);</span><br><span class="line">              head = <span class="keyword">null</span>;</span><br><span class="line">              <span class="keyword">break</span>;</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; countNum - <span class="number">1</span>; i++) &#123;</span><br><span class="line">              newhead = newhead.next;</span><br><span class="line">              last = last.next;</span><br><span class="line">          &#125;</span><br><span class="line">          System.out.println(<span class="string">&quot;去除&quot;</span> + newhead);</span><br><span class="line">          newhead = newhead.next;</span><br><span class="line">          last.next = newhead;</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h2 id="三-测试"><a class="markdownIt-Anchor" href="#三-测试"></a> 三、测试</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> 1.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span> : Josepfu</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span> : 约瑟夫问题的举例，单项环形链表</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> : JSLEDD</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span>: 2016-6-2 10:02</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Josepfu</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//先创建节点</span></span><br><span class="line">        StudentNode node1 = <span class="keyword">new</span> StudentNode(<span class="number">1</span>, <span class="string">&quot;张三&quot;</span>);</span><br><span class="line">        StudentNode node2 = <span class="keyword">new</span> StudentNode(<span class="number">2</span>, <span class="string">&quot;李四&quot;</span>);</span><br><span class="line">        StudentNode node3 = <span class="keyword">new</span> StudentNode(<span class="number">3</span>, <span class="string">&quot;王五&quot;</span>);</span><br><span class="line">        StudentNode node4 = <span class="keyword">new</span> StudentNode(<span class="number">4</span>, <span class="string">&quot;赵六&quot;</span>);</span><br><span class="line">        <span class="comment">//创建要给链表</span></span><br><span class="line">        CircleSingleLinkedList circlesingleLinkedList = <span class="keyword">new</span> CircleSingleLinkedList();</span><br><span class="line">        circlesingleLinkedList.add(node1);</span><br><span class="line">        circlesingleLinkedList.add(node2);</span><br><span class="line">        circlesingleLinkedList.add(node3);</span><br><span class="line">        circlesingleLinkedList.add(node4);</span><br><span class="line">        System.out.println(<span class="string">&quot;head&quot;</span> + circlesingleLinkedList.getHead());</span><br><span class="line">        <span class="comment">//打印学生列表</span></span><br><span class="line">        circlesingleLinkedList.printList();</span><br><span class="line">        circlesingleLinkedList.addByOrder(<span class="keyword">new</span> StudentNode(<span class="number">6</span>, <span class="string">&quot;刘八&quot;</span>));</span><br><span class="line">        circlesingleLinkedList.addByOrder(<span class="keyword">new</span> StudentNode(<span class="number">5</span>, <span class="string">&quot;刘七&quot;</span>));</span><br><span class="line">        circlesingleLinkedList.printList();</span><br><span class="line">        circlesingleLinkedList.del(<span class="keyword">new</span> StudentNode(<span class="number">6</span>, <span class="string">&quot;刘八&quot;</span>));</span><br><span class="line">        circlesingleLinkedList.printList();</span><br><span class="line">        circlesingleLinkedList.del(<span class="keyword">new</span> StudentNode(<span class="number">1</span>, <span class="string">&quot;张三&quot;</span>));</span><br><span class="line">        System.out.println(<span class="string">&quot;head&quot;</span> + circlesingleLinkedList.getHead());</span><br><span class="line">        circlesingleLinkedList.printList();</span><br><span class="line">        circlesingleLinkedList.update(<span class="keyword">new</span> StudentNode(<span class="number">5</span>, <span class="string">&quot;刘九&quot;</span>));</span><br><span class="line">        circlesingleLinkedList.update(<span class="keyword">new</span> StudentNode(<span class="number">1</span>, <span class="string">&quot;张二&quot;</span>));</span><br><span class="line">        circlesingleLinkedList.printList();</span><br><span class="line">        circlesingleLinkedList.reversePrintList();</span><br><span class="line">        System.out.println(circlesingleLinkedList.size());</span><br><span class="line">        System.out.println(circlesingleLinkedList.findLeftIndexNode(<span class="number">2</span>));</span><br><span class="line">        System.out.println(circlesingleLinkedList.findRightIndexNode(<span class="number">2</span>));</span><br><span class="line">        circlesingleLinkedList.printList();</span><br><span class="line">        circlesingleLinkedList.reversetList();</span><br><span class="line">        circlesingleLinkedList.printList();</span><br><span class="line">        System.out.println(circlesingleLinkedList.getByNo(<span class="number">2</span>));</span><br><span class="line">        CircleSingleLinkedList josepfuList = <span class="keyword">new</span> CircleSingleLinkedList();</span><br><span class="line">        josepfuList.bacthadd(<span class="number">40</span>);</span><br><span class="line">        josepfuList.jonsepfu(<span class="number">1</span>, <span class="number">3</span>, <span class="number">40</span>);</span><br><span class="line">        josepfuList.printList();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>打印结果</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line">head学生 [学号=1, 姓名=张三]</span><br><span class="line">---------------------------</span><br><span class="line">学生 [学号=1, 姓名=张三]</span><br><span class="line">学生 [学号=2, 姓名=李四]</span><br><span class="line">学生 [学号=3, 姓名=王五]</span><br><span class="line">学生 [学号=4, 姓名=赵六]</span><br><span class="line">---------------------------</span><br><span class="line">学生 [学号=1, 姓名=张三]</span><br><span class="line">学生 [学号=2, 姓名=李四]</span><br><span class="line">学生 [学号=3, 姓名=王五]</span><br><span class="line">学生 [学号=4, 姓名=赵六]</span><br><span class="line">学生 [学号=5, 姓名=刘七]</span><br><span class="line">学生 [学号=6, 姓名=刘八]</span><br><span class="line">---------------------------</span><br><span class="line">学生 [学号=1, 姓名=张三]</span><br><span class="line">学生 [学号=2, 姓名=李四]</span><br><span class="line">学生 [学号=3, 姓名=王五]</span><br><span class="line">学生 [学号=4, 姓名=赵六]</span><br><span class="line">学生 [学号=5, 姓名=刘七]</span><br><span class="line">head学生 [学号=2, 姓名=李四]</span><br><span class="line">---------------------------</span><br><span class="line">学生 [学号=2, 姓名=李四]</span><br><span class="line">学生 [学号=3, 姓名=王五]</span><br><span class="line">学生 [学号=4, 姓名=赵六]</span><br><span class="line">学生 [学号=5, 姓名=刘七]</span><br><span class="line">没有找到学号 1 的节点，不能修改</span><br><span class="line">---------------------------</span><br><span class="line">学生 [学号=2, 姓名=李四]</span><br><span class="line">学生 [学号=3, 姓名=王五]</span><br><span class="line">学生 [学号=4, 姓名=赵六]</span><br><span class="line">学生 [学号=5, 姓名=刘九]</span><br><span class="line">---------------------------</span><br><span class="line">学生 [学号=5, 姓名=刘九]</span><br><span class="line">学生 [学号=4, 姓名=赵六]</span><br><span class="line">学生 [学号=3, 姓名=王五]</span><br><span class="line">学生 [学号=2, 姓名=李四]</span><br><span class="line">4</span><br><span class="line">学生 [学号=4, 姓名=赵六]</span><br><span class="line">学生 [学号=3, 姓名=王五]</span><br><span class="line">---------------------------</span><br><span class="line">学生 [学号=2, 姓名=李四]</span><br><span class="line">学生 [学号=3, 姓名=王五]</span><br><span class="line">学生 [学号=4, 姓名=赵六]</span><br><span class="line">学生 [学号=5, 姓名=刘九]</span><br><span class="line">---------------------------</span><br><span class="line">学生 [学号=5, 姓名=刘九]</span><br><span class="line">学生 [学号=4, 姓名=赵六]</span><br><span class="line">学生 [学号=3, 姓名=王五]</span><br><span class="line">学生 [学号=2, 姓名=李四]</span><br><span class="line">学生 [学号=2, 姓名=李四]</span><br><span class="line">去除学生 [学号=2, 姓名=景2]</span><br><span class="line">去除学生 [学号=5, 姓名=景5]</span><br><span class="line">去除学生 [学号=8, 姓名=景8]</span><br><span class="line">去除学生 [学号=11, 姓名=景11]</span><br><span class="line">去除学生 [学号=14, 姓名=景14]</span><br><span class="line">去除学生 [学号=17, 姓名=景17]</span><br><span class="line">去除学生 [学号=20, 姓名=景20]</span><br><span class="line">去除学生 [学号=23, 姓名=景23]</span><br><span class="line">去除学生 [学号=26, 姓名=景26]</span><br><span class="line">去除学生 [学号=29, 姓名=景29]</span><br><span class="line">去除学生 [学号=32, 姓名=景32]</span><br><span class="line">去除学生 [学号=35, 姓名=景35]</span><br><span class="line">去除学生 [学号=38, 姓名=景38]</span><br><span class="line">去除学生 [学号=1, 姓名=景1]</span><br><span class="line">去除学生 [学号=6, 姓名=景6]</span><br><span class="line">去除学生 [学号=10, 姓名=景10]</span><br><span class="line">去除学生 [学号=15, 姓名=景15]</span><br><span class="line">去除学生 [学号=19, 姓名=景19]</span><br><span class="line">去除学生 [学号=24, 姓名=景24]</span><br><span class="line">去除学生 [学号=28, 姓名=景28]</span><br><span class="line">去除学生 [学号=33, 姓名=景33]</span><br><span class="line">去除学生 [学号=37, 姓名=景37]</span><br><span class="line">去除学生 [学号=3, 姓名=景3]</span><br><span class="line">去除学生 [学号=9, 姓名=景9]</span><br><span class="line">去除学生 [学号=16, 姓名=景16]</span><br><span class="line">去除学生 [学号=22, 姓名=景22]</span><br><span class="line">去除学生 [学号=30, 姓名=景30]</span><br><span class="line">去除学生 [学号=36, 姓名=景36]</span><br><span class="line">去除学生 [学号=4, 姓名=景4]</span><br><span class="line">去除学生 [学号=13, 姓名=景13]</span><br><span class="line">去除学生 [学号=25, 姓名=景25]</span><br><span class="line">去除学生 [学号=34, 姓名=景34]</span><br><span class="line">去除学生 [学号=7, 姓名=景7]</span><br><span class="line">去除学生 [学号=21, 姓名=景21]</span><br><span class="line">去除学生 [学号=39, 姓名=景39]</span><br><span class="line">去除学生 [学号=18, 姓名=景18]</span><br><span class="line">去除学生 [学号=0, 姓名=景0]</span><br><span class="line">去除学生 [学号=31, 姓名=景31]</span><br><span class="line">去除学生 [学号=12, 姓名=景12]</span><br><span class="line">最后去除学生 [学号=27, 姓名=景27]</span><br><span class="line">---------------------------</span><br><span class="line">链表为空</span><br><span class="line"></span><br><span class="line">Process finished with exit code 0</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>完整代码：<a href="https://github.com/shadowagnoy/DataStructures/blob/master/src/main/java/cn/jsledd/linkedList/Josepfu.java">Github</a></p>]]></content>
      
      
      <categories>
          
          <category> 数据结构与算法 </category>
          
          <category> 链表 </category>
          
          <category> 单链表 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据结构与算法 </tag>
            
            <tag> 链表 </tag>
            
            <tag> 单链表 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>单链表及其应用</title>
      <link href="2016/06/08/singlelinkedlist/"/>
      <url>2016/06/08/singlelinkedlist/</url>
      
        <content type="html"><![CDATA[<p>​链表中的数据是以结点来表示的，每个结点的构成：元素 + 指针(指示后继元素存储位置)，元素就是存储数据的存储单元，指针就是连接每个结点的地址数据。下面使用代码来编写一个单链表的例子。</p><h3 id="一-创建节点信息"><a class="markdownIt-Anchor" href="#一-创建节点信息"></a> 一、创建节点信息</h3><p>​创建一个学生的节点，包含学号和学生的姓名。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> JSLEDD</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 定义一个学生的对象</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2016-6-2 13:59</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@throws</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">StudentNode</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> numno;<span class="comment">//学号</span></span><br><span class="line">    <span class="keyword">public</span> String name;<span class="comment">// 姓名</span></span><br><span class="line">    <span class="keyword">public</span> StudentNode next; <span class="comment">//指向下一个节点</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//构造器</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">StudentNode</span><span class="params">(<span class="keyword">int</span> numno, String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.numno = numno;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//为了显示方法，我们重新toString</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;学生 [学号=&quot;</span> + numno + <span class="string">&quot;, 姓名=&quot;</span> + name + <span class="string">&quot;]&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="二-创建一个单链表来管理学生"><a class="markdownIt-Anchor" href="#二-创建一个单链表来管理学生"></a> 二、创建一个单链表来管理学生</h3><p>​创建一个单链表来管理学生，单链表可以实现学生的插入、删除、打印、反转等操作。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> JSLEDD</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 定义一个学生链表来管理学僧</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2016-6-2 14:07</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@throws</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SingleLinkedList</span> </span>&#123;</span><br><span class="line">    <span class="comment">//先初始化一个头节点, 头节点不要动, 不存放具体的数据</span></span><br><span class="line">    <span class="keyword">private</span> StudentNode head = <span class="keyword">new</span> StudentNode(<span class="number">0</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//返回头节点</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> StudentNode <span class="title">getHead</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> head;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> studentNode</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> void</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@description</span> 直接将新增节点加到最后</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> JSLEDD</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@date</span> 2016/6/2 14:10</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">(StudentNode studentNode)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//因为head节点不能动，因此我们需要一个辅助遍历 temp</span></span><br><span class="line">        StudentNode temp = head;</span><br><span class="line">        <span class="comment">//遍历链表，找到最后</span></span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">            <span class="comment">//找到链表的最后</span></span><br><span class="line">            <span class="keyword">if</span> (temp.next == <span class="keyword">null</span>) &#123;<span class="comment">//</span></span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//如果没有找到最后, 将将temp后移</span></span><br><span class="line">            temp = temp.next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//当退出while循环时，temp就指向了链表的最后</span></span><br><span class="line">        <span class="comment">//将最后这个节点的next 指向 新的节点</span></span><br><span class="line">        temp.next = studentNode;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> studentNode</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> void</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@description</span> 按学号新增节点</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> JSLEDD</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@date</span> 2016/6/2 14:11</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addByOrder</span><span class="params">(StudentNode studentNode)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//因为头节点不能动，因此我们仍然通过一个辅助指针(变量)来帮助找到添加的位置</span></span><br><span class="line">        <span class="comment">//因为单链表，因为我们找的temp 是位于 添加位置的前一个节点，否则插入不了</span></span><br><span class="line">        StudentNode temp = head;</span><br><span class="line">        <span class="keyword">boolean</span> flag = <span class="keyword">false</span>; <span class="comment">// flag标志添加的编号是否存在，默认为false</span></span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (temp.next == <span class="keyword">null</span>) &#123;<span class="comment">//说明temp已经在链表的最后</span></span><br><span class="line">                <span class="keyword">break</span>; <span class="comment">//</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (temp.next.numno &gt; studentNode.numno) &#123; <span class="comment">//位置找到，就在temp的后面插入</span></span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (temp.next.numno == studentNode.numno) &#123;<span class="comment">//说明希望添加的学号已然存在</span></span><br><span class="line">                flag = <span class="keyword">true</span>; <span class="comment">//说明编号存在</span></span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            temp = temp.next; <span class="comment">//后移，遍历当前链表</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//判断flag 的值</span></span><br><span class="line">        <span class="keyword">if</span> (flag) &#123; <span class="comment">//不能添加，说明编号存在</span></span><br><span class="line">            System.out.printf(<span class="string">&quot;按学号插入列表错误，学号 %d 已经存在了, 不能加入\n&quot;</span>, studentNode.numno);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">//插入到链表中, temp的后面</span></span><br><span class="line">            studentNode.next = temp.next;</span><br><span class="line">            temp.next = studentNode;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> studentNode</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> void</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@description</span> 按学号更改学生</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> JSLEDD</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@date</span> 2016/6/2 14:15</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">(StudentNode studentNode)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//判断是否空</span></span><br><span class="line">        <span class="keyword">if</span> (head.next == <span class="keyword">null</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;链表为空~&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//找到需要修改的节点, 根据no编号</span></span><br><span class="line">        <span class="comment">//定义一个辅助变量</span></span><br><span class="line">        StudentNode temp = head.next;</span><br><span class="line">        <span class="keyword">boolean</span> flag = <span class="keyword">false</span>; <span class="comment">//表示是否找到该节点</span></span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (temp == <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">break</span>; <span class="comment">//已经遍历完链表</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (temp.numno == studentNode.numno) &#123;</span><br><span class="line">                <span class="comment">//找到</span></span><br><span class="line">                flag = <span class="keyword">true</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            temp = temp.next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//根据flag 判断是否找到要修改的节点</span></span><br><span class="line">        <span class="keyword">if</span> (flag) &#123;</span><br><span class="line">            temp.name = studentNode.name;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123; <span class="comment">//没有找到</span></span><br><span class="line">            System.out.printf(<span class="string">&quot;没有找到学号 %d 的节点，不能修改\n&quot;</span>, studentNode.numno);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> studentNode</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> void</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@description</span> 删除学生</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> JSLEDD</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@date</span> 2016/6/2 14:18</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">del</span><span class="params">(StudentNode studentNode)</span> </span>&#123;</span><br><span class="line">        StudentNode temp = head;</span><br><span class="line">        <span class="keyword">boolean</span> flag = <span class="keyword">false</span>; <span class="comment">// 标志是否找到待删除节点的</span></span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (temp.next == <span class="keyword">null</span>) &#123; <span class="comment">//已经到链表的最后</span></span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (temp.next.numno == studentNode.numno) &#123;</span><br><span class="line">                <span class="comment">//找到的待删除节点的前一个节点temp</span></span><br><span class="line">                flag = <span class="keyword">true</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            temp = temp.next; <span class="comment">//temp后移，遍历</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//判断flag</span></span><br><span class="line">        <span class="keyword">if</span> (flag) &#123; <span class="comment">//找到</span></span><br><span class="line">            <span class="comment">//可以删除</span></span><br><span class="line">            temp.next = temp.next.next;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.printf(<span class="string">&quot;要删除的 %s 节点不存在\n&quot;</span>, studentNode);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> void</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@description</span> 打印学生信息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> JSLEDD</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@date</span> 2016/6/2 14:20</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">printList</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;---------------------------&quot;</span>);</span><br><span class="line">        <span class="comment">//判断链表是否为空</span></span><br><span class="line">        <span class="keyword">if</span> (head.next == <span class="keyword">null</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;链表为空&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//因为头节点，不能动，因此我们需要一个辅助变量来遍历</span></span><br><span class="line">        StudentNode temp = head.next;</span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">            <span class="comment">//判断是否到链表最后</span></span><br><span class="line">            <span class="keyword">if</span> (temp == <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//输出节点的信息</span></span><br><span class="line">            System.out.println(temp);</span><br><span class="line">            <span class="comment">//将temp后移， 一定小心</span></span><br><span class="line">            temp = temp.next;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> void</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@description</span> 反序打印学生信息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> JSLEDD</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@date</span> 2016/6/2 14:36</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">reversePrintList</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;---------------------------&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (head.next == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span>;<span class="comment">//空链表，不能打印</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//创建要给一个栈，将各个节点压入栈</span></span><br><span class="line">        Stack&lt;StudentNode&gt; stack = <span class="keyword">new</span> Stack&lt;StudentNode&gt;();</span><br><span class="line">        StudentNode cur = head.next;</span><br><span class="line">        <span class="comment">//将链表的所有节点压入栈</span></span><br><span class="line">        <span class="keyword">while</span> (cur != <span class="keyword">null</span>) &#123;</span><br><span class="line">            stack.push(cur);</span><br><span class="line">            cur = cur.next; <span class="comment">//cur后移，这样就可以压入下一个节点</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//将栈中的节点进行打印,pop 出栈</span></span><br><span class="line">        <span class="keyword">while</span> (stack.size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            System.out.println(stack.pop()); <span class="comment">//stack的特点是先进后出</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> int</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@description</span> 打印学生数量</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> JSLEDD</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@date</span> 2016/6/2 14:22</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">size</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (head.next == <span class="keyword">null</span>) &#123; <span class="comment">//空链表</span></span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> length = <span class="number">0</span>;</span><br><span class="line">        <span class="comment">//定义一个辅助的变量, 这里我们没有统计头节点</span></span><br><span class="line">        StudentNode cur = head.next;</span><br><span class="line">        <span class="keyword">while</span> (cur != <span class="keyword">null</span>) &#123;</span><br><span class="line">            length++;</span><br><span class="line">            cur = cur.next; <span class="comment">//遍历</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> length;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> index 索引</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> void</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@description</span> 正序查找第几个学生</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> JSLEDD</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@date</span> 2016/6/2 14:25</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> StudentNode <span class="title">findLeftIndexNode</span><span class="params">(<span class="keyword">int</span> index)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (head.next == <span class="keyword">null</span>) &#123; <span class="comment">//空链表</span></span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> size = size();</span><br><span class="line">        <span class="keyword">if</span> (index &lt;= <span class="number">0</span> || index &gt; size) &#123;<span class="comment">//越界</span></span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//定义一个辅助的变量, 这里我们没有统计头节点</span></span><br><span class="line">        StudentNode cur = head.next;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; index; i++) &#123;</span><br><span class="line">            cur = cur.next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> cur;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> index 索引</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> void</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@description</span> 反序查找第几个学生</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> JSLEDD</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@date</span> 2016/6/2 14:25</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> StudentNode <span class="title">findRightIndexNode</span><span class="params">(<span class="keyword">int</span> index)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> findLeftIndexNode(size() - index - <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> void</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@description</span> 将列表反转</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> JSLEDD</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@date</span> 2016/6/2 14:39</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">reversetList</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//如果当前链表为空，或者只有一个节点，无需反转，直接返回</span></span><br><span class="line">        <span class="keyword">if</span> (head.next == <span class="keyword">null</span> || head.next.next == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//定义一个新的头</span></span><br><span class="line">        StudentNode newHead = <span class="keyword">new</span> StudentNode(<span class="number">0</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">        StudentNode cur = head.next;<span class="comment">//指针遍历的节点</span></span><br><span class="line">        StudentNode curnext = <span class="keyword">null</span>;<span class="comment">//指针遍历的节点的下一个节点</span></span><br><span class="line">        <span class="keyword">while</span> (cur != <span class="keyword">null</span>) &#123;</span><br><span class="line">            curnext = cur.next;<span class="comment">//当前节点的下一个节点</span></span><br><span class="line">            cur.next = newHead.next;<span class="comment">//将新的头节点指向的下一节点赋予当前节点的下一节点</span></span><br><span class="line">            newHead.next = cur; <span class="comment">//将新的头节点指向当前的节点</span></span><br><span class="line">            cur = curnext; <span class="comment">//开始遍历下</span></span><br><span class="line">        &#125;</span><br><span class="line">        head.next = newHead.next;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="三-测试"><a class="markdownIt-Anchor" href="#三-测试"></a> 三、测试</h3><p>​写一个main 方法来测试链表的功能</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> 1.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span> : SingleLinkedListDemo</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span> : 单链表的举例说明</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> : JSLEDD</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span>: 2016-6-2 13:50</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SingleLinkedListDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//先创建节点</span></span><br><span class="line">        StudentNode node1 = <span class="keyword">new</span> StudentNode(<span class="number">1</span>, <span class="string">&quot;张三&quot;</span>);</span><br><span class="line">        StudentNode node2 = <span class="keyword">new</span> StudentNode(<span class="number">2</span>, <span class="string">&quot;李四&quot;</span>);</span><br><span class="line">        StudentNode node3 = <span class="keyword">new</span> StudentNode(<span class="number">3</span>, <span class="string">&quot;王五&quot;</span>);</span><br><span class="line">        StudentNode node4 = <span class="keyword">new</span> StudentNode(<span class="number">4</span>, <span class="string">&quot;赵六&quot;</span>);</span><br><span class="line">        <span class="comment">//创建要给链表</span></span><br><span class="line">        SingleLinkedList singleLinkedList = <span class="keyword">new</span> SingleLinkedList();</span><br><span class="line">        singleLinkedList.add(node1);</span><br><span class="line">        singleLinkedList.add(node2);</span><br><span class="line">        singleLinkedList.add(node3);</span><br><span class="line">        singleLinkedList.add(node4);</span><br><span class="line">        <span class="comment">//打印学生列表</span></span><br><span class="line">        singleLinkedList.printList();</span><br><span class="line">        singleLinkedList.addByOrder(<span class="keyword">new</span> StudentNode(<span class="number">6</span>,<span class="string">&quot;刘八&quot;</span>));</span><br><span class="line">        singleLinkedList.addByOrder(<span class="keyword">new</span> StudentNode(<span class="number">5</span>,<span class="string">&quot;刘七&quot;</span>));</span><br><span class="line">        singleLinkedList.printList();</span><br><span class="line">        singleLinkedList.del(<span class="keyword">new</span> StudentNode(<span class="number">6</span>,<span class="string">&quot;刘八&quot;</span>));</span><br><span class="line">        singleLinkedList.printList();</span><br><span class="line">        singleLinkedList.update(<span class="keyword">new</span> StudentNode(<span class="number">5</span>,<span class="string">&quot;刘九&quot;</span>));</span><br><span class="line">        singleLinkedList.printList();</span><br><span class="line">        singleLinkedList.reversePrintList();</span><br><span class="line">        System.out.println(singleLinkedList.findLeftIndexNode(<span class="number">2</span>));</span><br><span class="line">        System.out.println(singleLinkedList.findRightIndexNode(<span class="number">2</span>));</span><br><span class="line">        singleLinkedList.printList();</span><br><span class="line">        singleLinkedList.reversetList();</span><br><span class="line">        singleLinkedList.printList();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​执行main 方法有如下打印结果</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">学生 [学号=1, 姓名=张三]</span><br><span class="line">学生 [学号=2, 姓名=李四]</span><br><span class="line">学生 [学号=3, 姓名=王五]</span><br><span class="line">学生 [学号=4, 姓名=赵六]</span><br><span class="line">---------------------------</span><br><span class="line"></span><br><span class="line">学生 [学号=1, 姓名=张三]</span><br><span class="line">学生 [学号=2, 姓名=李四]</span><br><span class="line">学生 [学号=3, 姓名=王五]</span><br><span class="line">学生 [学号=4, 姓名=赵六]</span><br><span class="line">学生 [学号=5, 姓名=刘七]</span><br><span class="line">学生 [学号=6, 姓名=刘八]</span><br><span class="line">---------------------------</span><br><span class="line"></span><br><span class="line">学生 [学号=1, 姓名=张三]</span><br><span class="line">学生 [学号=2, 姓名=李四]</span><br><span class="line">学生 [学号=3, 姓名=王五]</span><br><span class="line">学生 [学号=4, 姓名=赵六]</span><br><span class="line">学生 [学号=5, 姓名=刘七]</span><br><span class="line">---------------------------</span><br><span class="line"></span><br><span class="line">学生 [学号=1, 姓名=张三]</span><br><span class="line">学生 [学号=2, 姓名=李四]</span><br><span class="line">学生 [学号=3, 姓名=王五]</span><br><span class="line">学生 [学号=4, 姓名=赵六]</span><br><span class="line">学生 [学号=5, 姓名=刘九]</span><br><span class="line">---------------------------</span><br><span class="line"></span><br><span class="line">学生 [学号=5, 姓名=刘九]</span><br><span class="line">学生 [学号=4, 姓名=赵六]</span><br><span class="line">学生 [学号=3, 姓名=王五]</span><br><span class="line">学生 [学号=2, 姓名=李四]</span><br><span class="line">学生 [学号=1, 姓名=张三]</span><br><span class="line">学生 [学号=3, 姓名=王五]</span><br><span class="line">学生 [学号=3, 姓名=王五]</span><br><span class="line">---------------------------</span><br><span class="line"></span><br><span class="line">学生 [学号=1, 姓名=张三]</span><br><span class="line">学生 [学号=2, 姓名=李四]</span><br><span class="line">学生 [学号=3, 姓名=王五]</span><br><span class="line">学生 [学号=4, 姓名=赵六]</span><br><span class="line"></span><br><span class="line">学生 [学号=5, 姓名=刘九]</span><br><span class="line">---------------------------</span><br><span class="line"></span><br><span class="line">学生 [学号=5, 姓名=刘九]</span><br><span class="line">学生 [学号=4, 姓名=赵六]</span><br><span class="line">学生 [学号=3, 姓名=王五]</span><br><span class="line">学生 [学号=2, 姓名=李四]</span><br><span class="line">学生 [学号=1, 姓名=张三]</span><br><span class="line"></span><br><span class="line">Process finished with exit code 0</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数据结构与算法 </category>
          
          <category> 链表 </category>
          
          <category> 单链表 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据结构与算法 </tag>
            
            <tag> 链表 </tag>
            
            <tag> 单链表 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>(二) scala actor 学习-Actor API</title>
      <link href="2016/06/07/scala-actor-study-2/"/>
      <url>2016/06/07/scala-actor-study-2/</url>
      
        <content type="html"><![CDATA[<h2 id="actor-api"><a class="markdownIt-Anchor" href="#actor-api"></a> Actor API</h2><p>Actor trait 只定义了一个抽象方法，就是上面提到的 receive, 用来实现actor的行为。 如果当前 actor 的行为与收到的消息不匹配，则会调用 unhandled, 它的缺省实现是向actor系统的事件流中发布一条 akka.actor.UnhandledMessage(message, sender, recipient)。 另外，它还包括:</p><ul><li>self 代表本actor的 ActorRef</li><li>sender 代表最近收到的消息的发送actor</li><li>supervisorStrategy 用户可重写它来定义对子actor的监管策略</li><li>context 暴露actor和当前消息的上下文信息，如：<ul><li>用于创建子actor的工厂方法 (actorOf)</li><li>actor所属的系统</li><li>父监管者</li><li>所监管的子actor</li><li>生命周期监控</li><li>hotswap行为栈</li></ul></li></ul><p>你可以import context 的成员来避免总是要加上 context.前缀</p><p>class ActorOneSon extends Actor {<br />import context._<br />val myActorSon = actorOf(Props[ActorOne], name = “actoroneson”)<br />def receive = {<br />case x ⇒ myActorSon ! x<br />}<br />}</p><h3 id="使用deathwatch进行生命周期监控"><a class="markdownIt-Anchor" href="#使用deathwatch进行生命周期监控"></a> 使用DeathWatch进行生命周期监控</h3><p>为了在其它actor结束时收到通知, actor可以将自己注册为其它actor在终止时所发布的 Terminated 消息 的接收者 . 这个服务是由actor系统的 DeathWatch 组件提供的。 注册一个监控器很简单：</p><p>class WatchActor extends Actor {<br />import context._<br />val system = ActorSystem(“MySystem”)<br />val child = actorOf(Props.empty, “child”)<br />context.watch(child) // &lt;-- 这是注册所需要的唯一调用<br />var lastSender = system.deadLetters<br />def receive = {<br />case “kill” ⇒<br />stop(child); lastSender = sender<br />case Terminated(`child`) ⇒ lastSender ! “finished”<br />}<br />}</p><p>要注意 Terminated 消息的产生与注册和终止行为所发生的顺序无关。多次注册并不表示会有多个消息产生，也不保证有且只有一个这样的消息被接收到：如果被监控的actor已经生成了消息并且已经进入了队列， 在这个消息被处理之前又发生了另一次注册，则会有第二个消息进入队列，因为一个已经终止的actor注册监控器会立刻导致Terminated 消息的发生。 可以使用 context.unwatch(target)来停止对另一个actor的生存状态的监控, 但很明显这不能保证不会接收到Terminated 消息因为该消息可能已经进入了队列。</p><h3 id="启动-hook"><a class="markdownIt-Anchor" href="#启动-hook"></a> 启动 Hook</h3><p>actor启动后，它的 preStart 会被立即执行。</p><h3 id="重启-hook"><a class="markdownIt-Anchor" href="#重启-hook"></a> 重启 Hook</h3><p>所有的Actor都是被监管的， i.e. 以某种失败处理策略与另一个actor链接在一起。 如果在处理一个消息的时候抛出的异常，Actor将被重启。这个重启过程包括上面提到的Hook:</p><ol><li>要被重启的actor的 preRestart 被调用，携带着导致重启的异常以及触发异常的消息; 如果重启并不是因为消息的处理而发生的，所携带的消息为 None , 例如，当一个监管者没有处理某个异常继而被它自己的监管者重启时。 这个方法是用来完成清理、准备移交给新的actor实例的最佳位置。 它的缺省实现是终止所有的子actor并调用 postStop.</li><li>最初 actorOf 调用的工厂方法将被用来创建新的实例。</li><li>新的actor的 postRestart 方法被调用，携带着导致重启的异常信息。 By default the preStart is called, just as in the normal start-up case.</li></ol><p>actor的重启会替换掉原来的actor对象; 重启不影响邮箱的内容, 所以对消息的处理将在 postRestart hook 返回后继续. 触发异常的消息不会被重新接收。在actor重启过程中所有发送到该actor的消息将象平常一样被放进邮箱队列中。</p><h3 id="终止-hook"><a class="markdownIt-Anchor" href="#终止-hook"></a> 终止 Hook</h3><p>一个Actor终止后，它的 postStop hook将被调用, 这可以用来取消该actor在其它服务中的注册. 这个hook保证在该actor的消息队列被禁止后才运行， i.e. 之后发给该actor的消息将被重定向到 ActorSystem的deadLetters 中。</p><h2 id="标识-actor"><a class="markdownIt-Anchor" href="#标识-actor"></a> 标识 Actor</h2><p>每个actor拥有一个唯一的逻辑路径, 此路径是由从actor系统的根开始的父子链构成；它还拥有一个物理路径，如果监管链包含有远程监管者，此路径可能会与逻辑路径不同。这些路径用来在系统中查找actor，例如，当收到一个远程消息时查找收件者， 但是它们的更直接的用处在于：actor可以通过指定绝对或相对路径（逻辑的或物理的）来查找其它的actor并随结果获取一个 ActorRef</p><p>context.actorFor(&quot;/user/serviceA/aggregator&quot;) // 查找绝对路径<br />context.actorFor(&quot;…/joe&quot;)                    // 查找同一父监管者下的兄弟</p><p>其中指定的路径被解释为一个 java.net.URI, 它以 / 分隔成路径段. 如果路径以 /开始, 表示一个绝对路径，从根监管者 ( &quot;/user&quot;的父亲)开始查找; 否则是从当前actor开始。如果某一个路径段为 …, 会找到当前所遍历到的actor的上一级, 否则则会向下一级寻找具有该名字的子actor。 必须注意的是 actor路径中的… 总是表示逻辑结构，也就是其监管者。 如果要查找的路径不存在，会返回一个特殊的actor引用，它的行为与actor系统的死信队列类似，但是保留其身份（i.e. 查找路径）。 如果开启了远程调用，则远程actor地址也可以被查找。:</p><p>context.actorFor(“akka://app@otherhost:1234/user/serviceB”)</p><p>这些查找动作立即返回一个（可能是远程的）actor引用, 所以你必须向它发送一个消息并等待其响应，来确认serviceB 是真正可访问和运行的。</p>]]></content>
      
      
      <categories>
          
          <category> 开发语言与技巧 </category>
          
          <category> scala </category>
          
      </categories>
      
      
        <tags>
            
            <tag> scala </tag>
            
            <tag> actor </tag>
            
            <tag> akka </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>(一) scala actor 学习-创建Actor</title>
      <link href="2016/06/07/scala-actor-study-1/"/>
      <url>2016/06/07/scala-actor-study-1/</url>
      
        <content type="html"><![CDATA[<p>Actor模型为编写并发和分布式系统提供了一种更高的抽象级别。它将开发人员从显式地处理锁和线程管理的工作中解脱出来，使编写并发和并行系统更加容易。Actor模型是在1973年Carl Hewitt的论文中提的，但是被Erlang语言采用后才变得流行起来，一个成功案例是爱立信使用Erlang非常成功地创建了高并发的可靠的电信系统。 Akka Actor的API与Scala Actor类似，并且从Erlang中借用了一些语法。 首先来一个例子：</p><h2 id="创建actor"><a class="markdownIt-Anchor" href="#创建actor"></a> 创建Actor</h2><h3 id="定义一个-actor-类"><a class="markdownIt-Anchor" href="#定义一个-actor-类"></a> 定义一个 Actor 类</h3><p>要定义自己的Actor类，需要继承 Actor 并实现receive 方法. receive 方法需要定义一系列 case 语句(类型为PartialFunction[Any, Unit]) 来描述你的Actor能够处理哪些消息（使用标准的Scala模式匹配），以及实现对消息如何进行处理的代码。</p><p>package com.cmcc.family.test</p><p>import akka.actor.Actor<br />import akka.actor.Props<br />import akka.event.Logging<br />import akka.actor.ActorSystem<br />class ActorOne extends Actor {<br />val log = Logging(context.system, this)<br />def receive = {<br />case “hello” ⇒ <a href="http://log.info">log.info</a>(“received test:hello”)<br />case _      ⇒ <a href="http://log.info">log.info</a>(“received unknown message”)<br />}<br />}</p><p>请注意 Akk Actor receive 消息循环是“穷尽的(exhaustive)”, 这与Erlang和Scala的Actor行为不同。 这意味着你需要提供一个对它所能够接受的所有消息的模式匹配规则，如果你希望处理未知的消息，你需要象上例一样提供一个缺省的case分支。否则会有一个 akka.actor.UnhandledMessage(message, sender, recipient) 被发布到Actor系统（ActorSystem）‘的 事件流（EventStream）中。</p><h3 id="使用缺省构造方法创建-actor"><a class="markdownIt-Anchor" href="#使用缺省构造方法创建-actor"></a> 使用缺省构造方法创建 Actor</h3><p>object ActorOne extends App{<br />val system = ActorSystem(“MySystem”)<br />val myActor:ActorRef = system.actorOf(Props[ActorOne], name = “actorone”)<br />myActor ! “hello”<br />}</p><p>对 actorOf 的调用返回一个 实例。 这是一个 Actor 实例的句柄(handle)，你可以用它来与实际的 Actor进行交互。 The ActorRef 是不可变量，与它所代表的Actor之间是一对一的关系。 The ActorRef 还是可序列化的（serializable），并且携带网络信息。这意味着你可以将它序列化以后，通过网络进行传送，在远程主机上它仍然代表原结点上的同一个Actor。</p><h3 id="创建-子-actor"><a class="markdownIt-Anchor" href="#创建-子-actor"></a> 创建 子 Actor</h3><p>在上面的例子中，actor是从系统创建的。也可以从其它的actor使用actor 上下文（context） 来创建. 其中的区别在于监管树是如何组织的。使用上下文时当前的actor将成为所创建的子actor的监管者。而使用系统时创建的actor将成为顶级actor，它由系统（内部监管actor）来监管。</p><p>class ActorOneSon extends Actor {<br />val myActorSon = context.actorOf(Props[ActorOne], name = “actoroneson”)<br />}</p><h3 id="重写prestart-方法"><a class="markdownIt-Anchor" href="#重写prestart-方法"></a> 重写preStart 方法</h3><p>当你创建 Actor 时它会自动调用 Actor trait 的preStart 回调方法。这是一个非常好的用来添加actor初始化代码的位置。</p><p>override def preStart{<br /><a href="http://log.info">log.info</a>(this.getClass.getSimpleName+“start~~~”)<br />//…<br />//初始化代码<br />}</p><h3 id="使用非缺省构造方法创建-actor"><a class="markdownIt-Anchor" href="#使用非缺省构造方法创建-actor"></a> 使用非缺省构造方法创建 Actor</h3><p>如果你的Actor的构造方法带参数，那么你不能使用 actorOf(Props[TYPE]) 来创建它。 这时你可以用 actorOf的带有传名调用的块的变体，这样你可以用任意方式来创建actor。</p><p>class ActorOneParam(val whosay:String) extends Actor {<br />val log = Logging(context.system, this)<br />def receive = {<br />case “hello” ⇒ <a href="http://log.info">log.info</a>(s&quot;received test:${whosay}:hello&quot;)<br />case _      ⇒ <a href="http://log.info">log.info</a>(“received unknown message”)<br />}<br />}</p><p>object ActorMain extends App{<br />val system = ActorSystem(“MySystem”)<br />//val myActor:ActorRef = system.actorOf(Props[ActorOne], name = “actorone”)<br />val myActor = system.actorOf(Props(new ActorOneParam(“jingshuai”)), name = “actoroneparam”)<br />myActor ! “hello”<br />}</p><h3 id="使用props创建actor"><a class="markdownIt-Anchor" href="#使用props创建actor"></a> 使用Props创建Actor</h3><p>Actor可以通过将 Props 实例传入 actorOf 工厂方法来创建。</p><p>import akka.actor.Props<br />val myActor = system.actorOf(Props[MyActor].withDispatcher(“my-dispatcher”), name = “myactor2”)</p><p>完整代码</p><p>package com.cmcc.family.test</p><p>import akka.actor.Actor<br />import akka.actor.Props<br />import akka.event.Logging<br />import akka.actor.ActorSystem<br />import akka.actor.ActorRef<br />class ActorOne extends Actor {<br />val log = Logging(context.system, this)<br />override def preStart {<br /><a href="http://log.info">log.info</a>(this.getClass.getSimpleName + “start~~~”)<br />//…<br />//初始化代码<br />}<br />def receive = {<br />case “hello” ⇒ <a href="http://log.info">log.info</a>(“received test:hello”)<br />case _ ⇒ <a href="http://log.info">log.info</a>(“received unknown message”)<br />}<br />}<br />class ActorOneParam(val whosay: String) extends Actor {<br />val log = Logging(context.system, this)<br />def receive = {<br />case “hello” ⇒ <a href="http://log.info">log.info</a>(s&quot;received test:${whosay}:hello&quot;)<br />case _ ⇒ <a href="http://log.info">log.info</a>(“received unknown message”)<br />}<br />}<br />class ActorOneSon extends Actor {<br />val myActorSon = context.actorOf(Props[ActorOne], name = “actoroneson”)<br />def receive = {<br />case x ⇒ myActorSon ! x<br />}<br />}</p><p>object ActorMain extends App {<br />val system = ActorSystem(“MySystem”)<br />//val myActor:ActorRef = system.actorOf(Props[ActorOne], name = “actorone”)<br />val myActor = system.actorOf(Props(new ActorOneParam(“jingshuai”)), name = “actoroneparam”)<br />myActor ! “hello”<br />}</p>]]></content>
      
      
      <categories>
          
          <category> 开发语言与技巧 </category>
          
          <category> scala </category>
          
      </categories>
      
      
        <tags>
            
            <tag> scala </tag>
            
            <tag> actor </tag>
            
            <tag> akka </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>kafka-manager的安装和使用</title>
      <link href="2016/05/24/kafka-manager-install-conf/"/>
      <url>2016/05/24/kafka-manager-install-conf/</url>
      
        <content type="html"><![CDATA[<p>由于最近使用spark kafka 总是出现已成，于是觉得安装一个 kafka 的管理工具来监控一下 kafka. 看到了 yahoo的kafka-manager的介绍，于是决定安装一下试试。</p><h2 id="介绍"><a class="markdownIt-Anchor" href="#介绍"></a> 介绍</h2><p>kafka-manager的主要支持内容：</p><ol><li>管理多个集群</li><li>监控集群的状态（包含：topics, consumers, offsets, brokers, replica distribution, partition distribution）</li><li>Run preferred replica election</li><li>Generate partition assignments with option to select brokers to use</li><li>分区的修改（基于生成的任务）</li><li>创建一个可选配置的 topic</li><li>删除主题（ 0.8.2 以上支持，需要配置delete.topic.enable=true）</li><li>topics 可显示已删除的</li><li>Batch generate partition assignments for multiple topics with option to select brokers to use</li><li>为多个topic 批量运行分区配置</li><li>为已经存在的topic添加分区</li><li>更新存在的topic</li><li>Optionally enable JMX polling for broker level and topic level metrics.</li><li>Optionally filter out consumers that do not have ids/ owners/ &amp; offsets/ directories in zookeeper.</li></ol><p>下载地址 ：<a href="https://github.com/yahoo/kafka-manager">https://github.com/yahoo/kafka-manager</a></p><h2 id="安装"><a class="markdownIt-Anchor" href="#安装"></a> 安装</h2><p>安装要求：jdk 1.8+，kafka 0.8.1.1 or 0.8.2.* or 0.9.0.* 开始安装！！！ 解压安装（sbt 已经安装好，有点耗时，需要联网更新）</p><p>[cmcc@new3 soft]$ cd kafka-manager-master/<br />[cmcc@new3 kafka-manager-master]$ ll<br />总用量 72<br />drwxrwxr-x 9 cmcc cmcc  4096 4月  26 07:11 app<br />-rw-rw-r-- 1 cmcc cmcc  3023 4月  26 07:11 build.sbt<br />drwxrwxr-x 2 cmcc cmcc  4096 4月  26 07:11 conf<br />drwxrwxr-x 2 cmcc cmcc  4096 4月  26 07:11 img<br />-rw-rw-r-- 1 cmcc cmcc 11323 4月  26 07:11 LICENCE<br />drwxrwxr-x 2 cmcc cmcc  4096 4月  26 07:11 project<br />drwxrwxr-x 5 cmcc cmcc  4096 4月  26 07:11 public<br />-rw-rw-r-- 1 cmcc cmcc  6323 4月  26 07:11 <a href="http://README.md">README.md</a><br />-rwxr-xr-x 1 cmcc cmcc 19460 4月  26 07:11 sbt<br />drwxrwxr-x 4 cmcc cmcc  4096 4月  26 07:11 src<br />drwxrwxr-x 4 cmcc cmcc  4096 4月  26 07:11 test<br />[cmcc@new3 kafka-manager-master]$ sbt clean dist<br />[info] Loading project definition from /home/cmcc/soft/kafka-manager-master/project<br />[info] Updating {file:/home/cmcc/soft/kafka-manager-master/project/}kafka-manager-master-build…<br />[info] Resolving org.apache.httpcomponents#project;7 …<br />…<br />…<br />…<br />[info] Done packaging.<br />[info]   Compilation completed in 6.836 s<br />model contains 659 documentable templates<br />[info] Main Scala API documentation successful.<br />[info] Packaging /home/cmcc/soft/kafka-manager-master/target/scala-2.11/kafka-manager_2.11-1.3.0.8-javadoc.jar …<br />[info] Done packaging.<br />[info] Packaging /home/cmcc/soft/kafka-manager-master/target/scala-2.11/kafka-manager_2.11-1.3.0.8.jar …<br />[info] Done packaging.<br />[info] Packaging /home/cmcc/soft/kafka-manager-master/target/scala-2.11/kafka-manager_2.11-1.3.0.8-sans-externalized.jar …<br />[info] Done packaging.<br />[info]<br />[info] Your package is ready in /home/cmcc/soft/kafka-manager-master/target/universal/kafka-manager-1.3.0.8.zip<br />[info]<br />[success] Total time: 422 s, completed 2016-5-25 2:00:52</p><h2 id="启动"><a class="markdownIt-Anchor" href="#启动"></a> 启动</h2><p>[cmcc@new3 kafka-manager-1.3.0.8]$ ll<br />总用量 24<br />drwxrwxr-x 2 cmcc cmcc 4096 5月  25 02:10 bin<br />drwxrwxr-x 2 cmcc cmcc 4096 5月  25 02:10 conf<br />drwxrwxr-x 2 cmcc cmcc 4096 5月  25 02:10 lib<br />-rw-r–r-- 1 cmcc cmcc 6323 4月  26 07:11 <a href="http://README.md">README.md</a><br />drwxrwxr-x 3 cmcc cmcc 4096 5月  25 02:10 share</p><h2 id="配置"><a class="markdownIt-Anchor" href="#配置"></a> 配置</h2><p>修改配置文件</p><p>[cmcc@new3 conf]$ vim application.conf</p><p># Copyright 2015 Yahoo Inc. Licensed under the Apache License, Version 2.0<br /># See accompanying LICENSE file.</p><p># This is the main configuration file for the application.<br /># ~~~~~</p><p># Secret key<br /># ~~~~~<br /># The secret key is used to secure cryptographics functions.<br /># If you deploy your application to several instances be sure to use the same key!<br />play.crypto.secret=&quot;^&lt;csmm5Fx4d=r2HEX8pelM3iBkFVv?k[mc;IZE&lt;_Qoq8EkX_/7@Zt6dP05Pzea3U&quot;<br />play.crypto.secret=${?APPLICATION_SECRET}</p><p># The application languages<br /># ~~~~~<br />play.i18n.langs=[“en”]</p><p>play.http.requestHandler = “play.http.DefaultHttpRequestHandler”</p><p>play.application.loader=loader.KafkaManagerLoader</p><p>kafka-manager.zkhosts=“new-cdh12:2181,new-cdh13:2181,new-cdh15:2181,new-cdh16:2181,new-cdh17:2181”<br />kafka-manager.zkhosts=${?ZK_HOSTS}<br />pinned-dispatcher.type=“PinnedDispatcher”<br />pinned-dispatcher.executor=“thread-pool-executor”<br />application.features=[“KMClusterManagerFeature”,“KMTopicManagerFeature”,“KMPreferredReplicaElectionFeature”,“KMReassignPartitionsFeature”]</p><p>akka {<br />loggers = [“akka.event.slf4j.Slf4jLogger”]<br />loglevel = “INFO”<br />}</p><p>basicAuthentication.enabled=false<br />basicAuthentication.username=“admin”<br />basicAuthentication.password=&quot;!@cmcc1234&quot;<br />basicAuthentication.realm=“Kafka-Manager”</p><p>启动</p><p>bin/kafka-manager -Dconfig.file=/path/to/application.conf -Dhttp.port=8080</p><h2 id="使用常见错误"><a class="markdownIt-Anchor" href="#使用常见错误"></a> 使用常见错误</h2><p>1 jdk版本原因</p><p>java.lang.UnsupportedClassVersionError: com/typesafe/config/ConfigException : Unsupported major.minor version 52.0<br />at java.lang.ClassLoader.defineClass1(Native Method)<br />at java.lang.ClassLoader.defineClass(ClassLoader.java:800)<br />at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142)<br />at java.net.URLClassLoader.defineClass(URLClassLoader.java:449)<br />at java.net.URLClassLoader.access$100(URLClassLoader.java:71)<br />at java.net.URLClassLoader$1.run(URLClassLoader.java:361)<br />at java.net.URLClassLoader<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1.</mn><mi>r</mi><mi>u</mi><mi>n</mi><mo stretchy="false">(</mo><mi>U</mi><mi>R</mi><mi>L</mi><mi>C</mi><mi>l</mi><mi>a</mi><mi>s</mi><mi>s</mi><mi>L</mi><mi>o</mi><mi>a</mi><mi>d</mi><mi>e</mi><mi>r</mi><mi mathvariant="normal">.</mi><mi>j</mi><mi>a</mi><mi>v</mi><mi>a</mi><mo>:</mo><mn>355</mn><mo stretchy="false">)</mo><mi>a</mi><mi>t</mi><mi>j</mi><mi>a</mi><mi>v</mi><mi>a</mi><mi mathvariant="normal">.</mi><mi>s</mi><mi>e</mi><mi>c</mi><mi>u</mi><mi>r</mi><mi>i</mi><mi>t</mi><mi>y</mi><mi mathvariant="normal">.</mi><mi>A</mi><mi>c</mi><mi>c</mi><mi>e</mi><mi>s</mi><mi>s</mi><mi>C</mi><mi>o</mi><mi>n</mi><mi>t</mi><mi>r</mi><mi>o</mi><mi>l</mi><mi>l</mi><mi>e</mi><mi>r</mi><mi mathvariant="normal">.</mi><mi>d</mi><mi>o</mi><mi>P</mi><mi>r</mi><mi>i</mi><mi>v</mi><mi>i</mi><mi>l</mi><mi>e</mi><mi>g</mi><mi>e</mi><mi>d</mi><mo stretchy="false">(</mo><mi>N</mi><mi>a</mi><mi>t</mi><mi>i</mi><mi>v</mi><mi>e</mi><mi>M</mi><mi>e</mi><mi>t</mi><mi>h</mi><mi>o</mi><mi>d</mi><mo stretchy="false">)</mo><mi>a</mi><mi>t</mi><mi>j</mi><mi>a</mi><mi>v</mi><mi>a</mi><mi mathvariant="normal">.</mi><mi>n</mi><mi>e</mi><mi>t</mi><mi mathvariant="normal">.</mi><mi>U</mi><mi>R</mi><mi>L</mi><mi>C</mi><mi>l</mi><mi>a</mi><mi>s</mi><mi>s</mi><mi>L</mi><mi>o</mi><mi>a</mi><mi>d</mi><mi>e</mi><mi>r</mi><mi mathvariant="normal">.</mi><mi>f</mi><mi>i</mi><mi>n</mi><mi>d</mi><mi>C</mi><mi>l</mi><mi>a</mi><mi>s</mi><mi>s</mi><mo stretchy="false">(</mo><mi>U</mi><mi>R</mi><mi>L</mi><mi>C</mi><mi>l</mi><mi>a</mi><mi>s</mi><mi>s</mi><mi>L</mi><mi>o</mi><mi>a</mi><mi>d</mi><mi>e</mi><mi>r</mi><mi mathvariant="normal">.</mi><mi>j</mi><mi>a</mi><mi>v</mi><mi>a</mi><mo>:</mo><mn>354</mn><mo stretchy="false">)</mo><mi>a</mi><mi>t</mi><mi>j</mi><mi>a</mi><mi>v</mi><mi>a</mi><mi mathvariant="normal">.</mi><mi>l</mi><mi>a</mi><mi>n</mi><mi>g</mi><mi mathvariant="normal">.</mi><mi>C</mi><mi>l</mi><mi>a</mi><mi>s</mi><mi>s</mi><mi>L</mi><mi>o</mi><mi>a</mi><mi>d</mi><mi>e</mi><mi>r</mi><mi mathvariant="normal">.</mi><mi>l</mi><mi>o</mi><mi>a</mi><mi>d</mi><mi>C</mi><mi>l</mi><mi>a</mi><mi>s</mi><mi>s</mi><mo stretchy="false">(</mo><mi>C</mi><mi>l</mi><mi>a</mi><mi>s</mi><mi>s</mi><mi>L</mi><mi>o</mi><mi>a</mi><mi>d</mi><mi>e</mi><mi>r</mi><mi mathvariant="normal">.</mi><mi>j</mi><mi>a</mi><mi>v</mi><mi>a</mi><mo>:</mo><mn>425</mn><mo stretchy="false">)</mo><mi>a</mi><mi>t</mi><mi>j</mi><mi>a</mi><mi>v</mi><mi>a</mi><mi mathvariant="normal">.</mi><mi>l</mi><mi>a</mi><mi>n</mi><mi>g</mi><mi mathvariant="normal">.</mi><mi>C</mi><mi>l</mi><mi>a</mi><mi>s</mi><mi>s</mi><mi>L</mi><mi>o</mi><mi>a</mi><mi>d</mi><mi>e</mi><mi>r</mi><mi mathvariant="normal">.</mi><mi>l</mi><mi>o</mi><mi>a</mi><mi>d</mi><mi>C</mi><mi>l</mi><mi>a</mi><mi>s</mi><mi>s</mi><mo stretchy="false">(</mo><mi>C</mi><mi>l</mi><mi>a</mi><mi>s</mi><mi>s</mi><mi>L</mi><mi>o</mi><mi>a</mi><mi>d</mi><mi>e</mi><mi>r</mi><mi mathvariant="normal">.</mi><mi>j</mi><mi>a</mi><mi>v</mi><mi>a</mi><mo>:</mo><mn>358</mn><mo stretchy="false">)</mo><mi>a</mi><mi>t</mi><mi>c</mi><mi>o</mi><mi>m</mi><mi mathvariant="normal">.</mi><mi>t</mi><mi>y</mi><mi>p</mi><mi>e</mi><mi>s</mi><mi>a</mi><mi>f</mi><mi>e</mi><mi mathvariant="normal">.</mi><mi>s</mi><mi>b</mi><mi>t</mi><mi mathvariant="normal">.</mi><mi>w</mi><mi>e</mi><mi>b</mi><mi mathvariant="normal">.</mi><mi>S</mi><mi>b</mi><mi>t</mi><mi>W</mi><mi>e</mi><mi>b</mi></mrow><annotation encoding="application/x-tex">1.run(URLClassLoader.java:355)        at java.security.AccessController.doPrivileged(Native Method)        at java.net.URLClassLoader.findClass(URLClassLoader.java:354)        at java.lang.ClassLoader.loadClass(ClassLoader.java:425)        at java.lang.ClassLoader.loadClass(ClassLoader.java:358)        at com.typesafe.sbt.web.SbtWeb</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord">.</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">u</span><span class="mord mathdefault">n</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault">L</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">a</span><span class="mord mathdefault">s</span><span class="mord mathdefault">s</span><span class="mord mathdefault">L</span><span class="mord mathdefault">o</span><span class="mord mathdefault">a</span><span class="mord mathdefault">d</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord">.</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">3</span><span class="mord">5</span><span class="mord">5</span><span class="mclose">)</span><span class="mord mathdefault">a</span><span class="mord mathdefault">t</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mord mathdefault">a</span><span class="mord">.</span><span class="mord mathdefault">s</span><span class="mord mathdefault">e</span><span class="mord mathdefault">c</span><span class="mord mathdefault">u</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">i</span><span class="mord mathdefault">t</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mord">.</span><span class="mord mathdefault">A</span><span class="mord mathdefault">c</span><span class="mord mathdefault">c</span><span class="mord mathdefault">e</span><span class="mord mathdefault">s</span><span class="mord mathdefault">s</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault">o</span><span class="mord mathdefault">n</span><span class="mord mathdefault">t</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord">.</span><span class="mord mathdefault">d</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault">e</span><span class="mord mathdefault">d</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mord mathdefault">a</span><span class="mord mathdefault">t</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault">e</span><span class="mord mathdefault">t</span><span class="mord mathdefault">h</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mclose">)</span><span class="mord mathdefault">a</span><span class="mord mathdefault">t</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mord mathdefault">a</span><span class="mord">.</span><span class="mord mathdefault">n</span><span class="mord mathdefault">e</span><span class="mord mathdefault">t</span><span class="mord">.</span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault">L</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">a</span><span class="mord mathdefault">s</span><span class="mord mathdefault">s</span><span class="mord mathdefault">L</span><span class="mord mathdefault">o</span><span class="mord mathdefault">a</span><span class="mord mathdefault">d</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord">.</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mord mathdefault">d</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">a</span><span class="mord mathdefault">s</span><span class="mord mathdefault">s</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault">L</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">a</span><span class="mord mathdefault">s</span><span class="mord mathdefault">s</span><span class="mord mathdefault">L</span><span class="mord mathdefault">o</span><span class="mord mathdefault">a</span><span class="mord mathdefault">d</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord">.</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">3</span><span class="mord">5</span><span class="mord">4</span><span class="mclose">)</span><span class="mord mathdefault">a</span><span class="mord mathdefault">t</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mord mathdefault">a</span><span class="mord">.</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">a</span><span class="mord mathdefault">n</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord">.</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">a</span><span class="mord mathdefault">s</span><span class="mord mathdefault">s</span><span class="mord mathdefault">L</span><span class="mord mathdefault">o</span><span class="mord mathdefault">a</span><span class="mord mathdefault">d</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord">.</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord mathdefault">a</span><span class="mord mathdefault">d</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">a</span><span class="mord mathdefault">s</span><span class="mord mathdefault">s</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">a</span><span class="mord mathdefault">s</span><span class="mord mathdefault">s</span><span class="mord mathdefault">L</span><span class="mord mathdefault">o</span><span class="mord mathdefault">a</span><span class="mord mathdefault">d</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord">.</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">4</span><span class="mord">2</span><span class="mord">5</span><span class="mclose">)</span><span class="mord mathdefault">a</span><span class="mord mathdefault">t</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mord mathdefault">a</span><span class="mord">.</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">a</span><span class="mord mathdefault">n</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord">.</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">a</span><span class="mord mathdefault">s</span><span class="mord mathdefault">s</span><span class="mord mathdefault">L</span><span class="mord mathdefault">o</span><span class="mord mathdefault">a</span><span class="mord mathdefault">d</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord">.</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord mathdefault">a</span><span class="mord mathdefault">d</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">a</span><span class="mord mathdefault">s</span><span class="mord mathdefault">s</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">a</span><span class="mord mathdefault">s</span><span class="mord mathdefault">s</span><span class="mord mathdefault">L</span><span class="mord mathdefault">o</span><span class="mord mathdefault">a</span><span class="mord mathdefault">d</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord">.</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">3</span><span class="mord">5</span><span class="mord">8</span><span class="mclose">)</span><span class="mord mathdefault">a</span><span class="mord mathdefault">t</span><span class="mord mathdefault">c</span><span class="mord mathdefault">o</span><span class="mord mathdefault">m</span><span class="mord">.</span><span class="mord mathdefault">t</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mord mathdefault">p</span><span class="mord mathdefault">e</span><span class="mord mathdefault">s</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault">e</span><span class="mord">.</span><span class="mord mathdefault">s</span><span class="mord mathdefault">b</span><span class="mord mathdefault">t</span><span class="mord">.</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mord mathdefault">e</span><span class="mord mathdefault">b</span><span class="mord">.</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">b</span><span class="mord mathdefault">t</span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="mord mathdefault">e</span><span class="mord mathdefault">b</span></span></span></span><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mi>n</mi><mi>o</mi><mi>n</mi><mi>f</mi><mi>u</mi><mi>n</mi></mrow><annotation encoding="application/x-tex">anonfun</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">a</span><span class="mord mathdefault">n</span><span class="mord mathdefault">o</span><span class="mord mathdefault">n</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault">u</span><span class="mord mathdefault">n</span></span></span></span>com<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>t</mi><mi>y</mi><mi>p</mi><mi>e</mi><mi>s</mi><mi>a</mi><mi>f</mi><mi>e</mi></mrow><annotation encoding="application/x-tex">typesafe</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">t</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mord mathdefault">p</span><span class="mord mathdefault">e</span><span class="mord mathdefault">s</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault">e</span></span></span></span>sbt<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>w</mi><mi>e</mi><mi>b</mi></mrow><annotation encoding="application/x-tex">web</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mord mathdefault">e</span><span class="mord mathdefault">b</span></span></span></span>SbtWeb$$load<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1.</mn><mi>a</mi><mi>p</mi><mi>p</mi><mi>l</mi><mi>y</mi><mo stretchy="false">(</mo><mi>S</mi><mi>b</mi><mi>t</mi><mi>W</mi><mi>e</mi><mi>b</mi><mi mathvariant="normal">.</mi><mi>s</mi><mi>c</mi><mi>a</mi><mi>l</mi><mi>a</mi><mo>:</mo><mn>535</mn><mo stretchy="false">)</mo><mi>a</mi><mi>t</mi><mi>c</mi><mi>o</mi><mi>m</mi><mi mathvariant="normal">.</mi><mi>t</mi><mi>y</mi><mi>p</mi><mi>e</mi><mi>s</mi><mi>a</mi><mi>f</mi><mi>e</mi><mi mathvariant="normal">.</mi><mi>s</mi><mi>b</mi><mi>t</mi><mi mathvariant="normal">.</mi><mi>w</mi><mi>e</mi><mi>b</mi><mi mathvariant="normal">.</mi><mi>S</mi><mi>b</mi><mi>t</mi><mi>W</mi><mi>e</mi><mi>b</mi></mrow><annotation encoding="application/x-tex">1.apply(SbtWeb.scala:535)        at com.typesafe.sbt.web.SbtWeb</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord">.</span><span class="mord mathdefault">a</span><span class="mord mathdefault">p</span><span class="mord mathdefault">p</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">b</span><span class="mord mathdefault">t</span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="mord mathdefault">e</span><span class="mord mathdefault">b</span><span class="mord">.</span><span class="mord mathdefault">s</span><span class="mord mathdefault">c</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">5</span><span class="mord">3</span><span class="mord">5</span><span class="mclose">)</span><span class="mord mathdefault">a</span><span class="mord mathdefault">t</span><span class="mord mathdefault">c</span><span class="mord mathdefault">o</span><span class="mord mathdefault">m</span><span class="mord">.</span><span class="mord mathdefault">t</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mord mathdefault">p</span><span class="mord mathdefault">e</span><span class="mord mathdefault">s</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault">e</span><span class="mord">.</span><span class="mord mathdefault">s</span><span class="mord mathdefault">b</span><span class="mord mathdefault">t</span><span class="mord">.</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mord mathdefault">e</span><span class="mord mathdefault">b</span><span class="mord">.</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">b</span><span class="mord mathdefault">t</span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="mord mathdefault">e</span><span class="mord mathdefault">b</span></span></span></span><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mi>n</mi><mi>o</mi><mi>n</mi><mi>f</mi><mi>u</mi><mi>n</mi></mrow><annotation encoding="application/x-tex">anonfun</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">a</span><span class="mord mathdefault">n</span><span class="mord mathdefault">o</span><span class="mord mathdefault">n</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault">u</span><span class="mord mathdefault">n</span></span></span></span>com<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>t</mi><mi>y</mi><mi>p</mi><mi>e</mi><mi>s</mi><mi>a</mi><mi>f</mi><mi>e</mi></mrow><annotation encoding="application/x-tex">typesafe</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">t</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mord mathdefault">p</span><span class="mord mathdefault">e</span><span class="mord mathdefault">s</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault">e</span></span></span></span>sbt<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>w</mi><mi>e</mi><mi>b</mi></mrow><annotation encoding="application/x-tex">web</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mord mathdefault">e</span><span class="mord mathdefault">b</span></span></span></span>SbtWeb$$load<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1.</mn><mi>a</mi><mi>p</mi><mi>p</mi><mi>l</mi><mi>y</mi><mo stretchy="false">(</mo><mi>S</mi><mi>b</mi><mi>t</mi><mi>W</mi><mi>e</mi><mi>b</mi><mi mathvariant="normal">.</mi><mi>s</mi><mi>c</mi><mi>a</mi><mi>l</mi><mi>a</mi><mo>:</mo><mn>535</mn><mo stretchy="false">)</mo><mi>a</mi><mi>t</mi><mi>s</mi><mi>c</mi><mi>a</mi><mi>l</mi><mi>a</mi><mi mathvariant="normal">.</mi><mi>O</mi><mi>p</mi><mi>t</mi><mi>i</mi><mi>o</mi><mi>n</mi><mi mathvariant="normal">.</mi><mi>f</mi><mi>o</mi><mi>l</mi><mi>d</mi><mo stretchy="false">(</mo><mi>O</mi><mi>p</mi><mi>t</mi><mi>i</mi><mi>o</mi><mi>n</mi><mi mathvariant="normal">.</mi><mi>s</mi><mi>c</mi><mi>a</mi><mi>l</mi><mi>a</mi><mo>:</mo><mn>157</mn><mo stretchy="false">)</mo><mi>a</mi><mi>t</mi><mi>c</mi><mi>o</mi><mi>m</mi><mi mathvariant="normal">.</mi><mi>t</mi><mi>y</mi><mi>p</mi><mi>e</mi><mi>s</mi><mi>a</mi><mi>f</mi><mi>e</mi><mi mathvariant="normal">.</mi><mi>s</mi><mi>b</mi><mi>t</mi><mi mathvariant="normal">.</mi><mi>w</mi><mi>e</mi><mi>b</mi><mi mathvariant="normal">.</mi><mi>S</mi><mi>b</mi><mi>t</mi><mi>W</mi><mi>e</mi><mi>b</mi></mrow><annotation encoding="application/x-tex">1.apply(SbtWeb.scala:535)        at scala.Option.fold(Option.scala:157)        at com.typesafe.sbt.web.SbtWeb</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord">.</span><span class="mord mathdefault">a</span><span class="mord mathdefault">p</span><span class="mord mathdefault">p</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">b</span><span class="mord mathdefault">t</span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="mord mathdefault">e</span><span class="mord mathdefault">b</span><span class="mord">.</span><span class="mord mathdefault">s</span><span class="mord mathdefault">c</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">5</span><span class="mord">3</span><span class="mord">5</span><span class="mclose">)</span><span class="mord mathdefault">a</span><span class="mord mathdefault">t</span><span class="mord mathdefault">s</span><span class="mord mathdefault">c</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">a</span><span class="mord">.</span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mord mathdefault">p</span><span class="mord mathdefault">t</span><span class="mord mathdefault">i</span><span class="mord mathdefault">o</span><span class="mord mathdefault">n</span><span class="mord">.</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">d</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mord mathdefault">p</span><span class="mord mathdefault">t</span><span class="mord mathdefault">i</span><span class="mord mathdefault">o</span><span class="mord mathdefault">n</span><span class="mord">.</span><span class="mord mathdefault">s</span><span class="mord mathdefault">c</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord">5</span><span class="mord">7</span><span class="mclose">)</span><span class="mord mathdefault">a</span><span class="mord mathdefault">t</span><span class="mord mathdefault">c</span><span class="mord mathdefault">o</span><span class="mord mathdefault">m</span><span class="mord">.</span><span class="mord mathdefault">t</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mord mathdefault">p</span><span class="mord mathdefault">e</span><span class="mord mathdefault">s</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault">e</span><span class="mord">.</span><span class="mord mathdefault">s</span><span class="mord mathdefault">b</span><span class="mord mathdefault">t</span><span class="mord">.</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mord mathdefault">e</span><span class="mord mathdefault">b</span><span class="mord">.</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">b</span><span class="mord mathdefault">t</span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="mord mathdefault">e</span><span class="mord mathdefault">b</span></span></span></span>.com<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>t</mi><mi>y</mi><mi>p</mi><mi>e</mi><mi>s</mi><mi>a</mi><mi>f</mi><mi>e</mi></mrow><annotation encoding="application/x-tex">typesafe</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">t</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mord mathdefault">p</span><span class="mord mathdefault">e</span><span class="mord mathdefault">s</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault">e</span></span></span></span>sbt<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>w</mi><mi>e</mi><mi>b</mi></mrow><annotation encoding="application/x-tex">web</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mord mathdefault">e</span><span class="mord mathdefault">b</span></span></span></span>SbtWeb$$load(SbtWeb.scala:549)<br />at com.typesafe.sbt.web.SbtWeb$$anonfun$globalSettings<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn></mrow><annotation encoding="application/x-tex">1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mi>n</mi><mi>o</mi><mi>n</mi><mi>f</mi><mi>u</mi><mi>n</mi></mrow><annotation encoding="application/x-tex">anonfun</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">a</span><span class="mord mathdefault">n</span><span class="mord mathdefault">o</span><span class="mord mathdefault">n</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault">u</span><span class="mord mathdefault">n</span></span></span></span>apply<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1.</mn><mi>a</mi><mi>p</mi><mi>p</mi><mi>l</mi><mi>y</mi><mo stretchy="false">(</mo><mi>S</mi><mi>b</mi><mi>t</mi><mi>W</mi><mi>e</mi><mi>b</mi><mi mathvariant="normal">.</mi><mi>s</mi><mi>c</mi><mi>a</mi><mi>l</mi><mi>a</mi><mo>:</mo><mn>143</mn><mo stretchy="false">)</mo><mi>a</mi><mi>t</mi><mi>c</mi><mi>o</mi><mi>m</mi><mi mathvariant="normal">.</mi><mi>t</mi><mi>y</mi><mi>p</mi><mi>e</mi><mi>s</mi><mi>a</mi><mi>f</mi><mi>e</mi><mi mathvariant="normal">.</mi><mi>s</mi><mi>b</mi><mi>t</mi><mi mathvariant="normal">.</mi><mi>w</mi><mi>e</mi><mi>b</mi><mi mathvariant="normal">.</mi><mi>S</mi><mi>b</mi><mi>t</mi><mi>W</mi><mi>e</mi><mi>b</mi></mrow><annotation encoding="application/x-tex">1.apply(SbtWeb.scala:143)        at com.typesafe.sbt.web.SbtWeb</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord">.</span><span class="mord mathdefault">a</span><span class="mord mathdefault">p</span><span class="mord mathdefault">p</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">b</span><span class="mord mathdefault">t</span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="mord mathdefault">e</span><span class="mord mathdefault">b</span><span class="mord">.</span><span class="mord mathdefault">s</span><span class="mord mathdefault">c</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord">4</span><span class="mord">3</span><span class="mclose">)</span><span class="mord mathdefault">a</span><span class="mord mathdefault">t</span><span class="mord mathdefault">c</span><span class="mord mathdefault">o</span><span class="mord mathdefault">m</span><span class="mord">.</span><span class="mord mathdefault">t</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mord mathdefault">p</span><span class="mord mathdefault">e</span><span class="mord mathdefault">s</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault">e</span><span class="mord">.</span><span class="mord mathdefault">s</span><span class="mord mathdefault">b</span><span class="mord mathdefault">t</span><span class="mord">.</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mord mathdefault">e</span><span class="mord mathdefault">b</span><span class="mord">.</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">b</span><span class="mord mathdefault">t</span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="mord mathdefault">e</span><span class="mord mathdefault">b</span></span></span></span><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mi>n</mi><mi>o</mi><mi>n</mi><mi>f</mi><mi>u</mi><mi>n</mi></mrow><annotation encoding="application/x-tex">anonfun</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">a</span><span class="mord mathdefault">n</span><span class="mord mathdefault">o</span><span class="mord mathdefault">n</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault">u</span><span class="mord mathdefault">n</span></span></span></span>globalSettings<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn></mrow><annotation encoding="application/x-tex">1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mi>n</mi><mi>o</mi><mi>n</mi><mi>f</mi><mi>u</mi><mi>n</mi></mrow><annotation encoding="application/x-tex">anonfun</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">a</span><span class="mord mathdefault">n</span><span class="mord mathdefault">o</span><span class="mord mathdefault">n</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault">u</span><span class="mord mathdefault">n</span></span></span></span>apply<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1.</mn><mi>a</mi><mi>p</mi><mi>p</mi><mi>l</mi><mi>y</mi><mo stretchy="false">(</mo><mi>S</mi><mi>b</mi><mi>t</mi><mi>W</mi><mi>e</mi><mi>b</mi><mi mathvariant="normal">.</mi><mi>s</mi><mi>c</mi><mi>a</mi><mi>l</mi><mi>a</mi><mo>:</mo><mn>143</mn><mo stretchy="false">)</mo><mi>a</mi><mi>t</mi><mi>s</mi><mi>c</mi><mi>a</mi><mi>l</mi><mi>a</mi><mi mathvariant="normal">.</mi><mi>F</mi><mi>u</mi><mi>n</mi><mi>c</mi><mi>t</mi><mi>i</mi><mi>o</mi><mi>n</mi><mn>1</mn></mrow><annotation encoding="application/x-tex">1.apply(SbtWeb.scala:143)        at scala.Function1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord">.</span><span class="mord mathdefault">a</span><span class="mord mathdefault">p</span><span class="mord mathdefault">p</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">b</span><span class="mord mathdefault">t</span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="mord mathdefault">e</span><span class="mord mathdefault">b</span><span class="mord">.</span><span class="mord mathdefault">s</span><span class="mord mathdefault">c</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord">4</span><span class="mord">3</span><span class="mclose">)</span><span class="mord mathdefault">a</span><span class="mord mathdefault">t</span><span class="mord mathdefault">s</span><span class="mord mathdefault">c</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">a</span><span class="mord">.</span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord mathdefault">u</span><span class="mord mathdefault">n</span><span class="mord mathdefault">c</span><span class="mord mathdefault">t</span><span class="mord mathdefault">i</span><span class="mord mathdefault">o</span><span class="mord mathdefault">n</span><span class="mord">1</span></span></span></span><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mi>n</mi><mi>o</mi><mi>n</mi><mi>f</mi><mi>u</mi><mi>n</mi></mrow><annotation encoding="application/x-tex">anonfun</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">a</span><span class="mord mathdefault">n</span><span class="mord mathdefault">o</span><span class="mord mathdefault">n</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault">u</span><span class="mord mathdefault">n</span></span></span></span>andThen<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1.</mn><mi>a</mi><mi>p</mi><mi>p</mi><mi>l</mi><mi>y</mi><mo stretchy="false">(</mo><mi>F</mi><mi>u</mi><mi>n</mi><mi>c</mi><mi>t</mi><mi>i</mi><mi>o</mi><mi>n</mi><mn>1.</mn><mi>s</mi><mi>c</mi><mi>a</mi><mi>l</mi><mi>a</mi><mo>:</mo><mn>55</mn><mo stretchy="false">)</mo><mi>a</mi><mi>t</mi><mi>s</mi><mi>b</mi><mi>t</mi><mi mathvariant="normal">.</mi><mi>P</mi><mi>r</mi><mi>o</mi><mi>j</mi><mi>e</mi><mi>c</mi><mi>t</mi></mrow><annotation encoding="application/x-tex">1.apply(Function1.scala:55)        at sbt.Project</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord">.</span><span class="mord mathdefault">a</span><span class="mord mathdefault">p</span><span class="mord mathdefault">p</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord mathdefault">u</span><span class="mord mathdefault">n</span><span class="mord mathdefault">c</span><span class="mord mathdefault">t</span><span class="mord mathdefault">i</span><span class="mord mathdefault">o</span><span class="mord mathdefault">n</span><span class="mord">1</span><span class="mord">.</span><span class="mord mathdefault">s</span><span class="mord mathdefault">c</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">5</span><span class="mord">5</span><span class="mclose">)</span><span class="mord mathdefault">a</span><span class="mord mathdefault">t</span><span class="mord mathdefault">s</span><span class="mord mathdefault">b</span><span class="mord mathdefault">t</span><span class="mord">.</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mord mathdefault">e</span><span class="mord mathdefault">c</span><span class="mord mathdefault">t</span></span></span></span>.setProject(Project.scala:319)<br />at sbt.BuiltinCommands<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">.</mi><mi>d</mi><mi>o</mi><mi>L</mi><mi>o</mi><mi>a</mi><mi>d</mi><mi>P</mi><mi>r</mi><mi>o</mi><mi>j</mi><mi>e</mi><mi>c</mi><mi>t</mi><mo stretchy="false">(</mo><mi>M</mi><mi>a</mi><mi>i</mi><mi>n</mi><mi mathvariant="normal">.</mi><mi>s</mi><mi>c</mi><mi>a</mi><mi>l</mi><mi>a</mi><mo>:</mo><mn>484</mn><mo stretchy="false">)</mo><mi>a</mi><mi>t</mi><mi>s</mi><mi>b</mi><mi>t</mi><mi mathvariant="normal">.</mi><mi>B</mi><mi>u</mi><mi>i</mi><mi>l</mi><mi>t</mi><mi>i</mi><mi>n</mi><mi>C</mi><mi>o</mi><mi>m</mi><mi>m</mi><mi>a</mi><mi>n</mi><mi>d</mi><mi>s</mi></mrow><annotation encoding="application/x-tex">.doLoadProject(Main.scala:484)        at sbt.BuiltinCommands</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">.</span><span class="mord mathdefault">d</span><span class="mord mathdefault">o</span><span class="mord mathdefault">L</span><span class="mord mathdefault">o</span><span class="mord mathdefault">a</span><span class="mord mathdefault">d</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mord mathdefault">e</span><span class="mord mathdefault">c</span><span class="mord mathdefault">t</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault">a</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mord">.</span><span class="mord mathdefault">s</span><span class="mord mathdefault">c</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">4</span><span class="mord">8</span><span class="mord">4</span><span class="mclose">)</span><span class="mord mathdefault">a</span><span class="mord mathdefault">t</span><span class="mord mathdefault">s</span><span class="mord mathdefault">b</span><span class="mord mathdefault">t</span><span class="mord">.</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord mathdefault">u</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">t</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault">o</span><span class="mord mathdefault">m</span><span class="mord mathdefault">m</span><span class="mord mathdefault">a</span><span class="mord mathdefault">n</span><span class="mord mathdefault">d</span><span class="mord mathdefault">s</span></span></span></span><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mi>n</mi><mi>o</mi><mi>n</mi><mi>f</mi><mi>u</mi><mi>n</mi></mrow><annotation encoding="application/x-tex">anonfun</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">a</span><span class="mord mathdefault">n</span><span class="mord mathdefault">o</span><span class="mord mathdefault">n</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault">u</span><span class="mord mathdefault">n</span></span></span></span>loadProjectImpl<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>2.</mn><mi>a</mi><mi>p</mi><mi>p</mi><mi>l</mi><mi>y</mi><mo stretchy="false">(</mo><mi>M</mi><mi>a</mi><mi>i</mi><mi>n</mi><mi mathvariant="normal">.</mi><mi>s</mi><mi>c</mi><mi>a</mi><mi>l</mi><mi>a</mi><mo>:</mo><mn>475</mn><mo stretchy="false">)</mo><mi>a</mi><mi>t</mi><mi>s</mi><mi>b</mi><mi>t</mi><mi mathvariant="normal">.</mi><mi>B</mi><mi>u</mi><mi>i</mi><mi>l</mi><mi>t</mi><mi>i</mi><mi>n</mi><mi>C</mi><mi>o</mi><mi>m</mi><mi>m</mi><mi>a</mi><mi>n</mi><mi>d</mi><mi>s</mi></mrow><annotation encoding="application/x-tex">2.apply(Main.scala:475)        at sbt.BuiltinCommands</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mord">.</span><span class="mord mathdefault">a</span><span class="mord mathdefault">p</span><span class="mord mathdefault">p</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault">a</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mord">.</span><span class="mord mathdefault">s</span><span class="mord mathdefault">c</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">4</span><span class="mord">7</span><span class="mord">5</span><span class="mclose">)</span><span class="mord mathdefault">a</span><span class="mord mathdefault">t</span><span class="mord mathdefault">s</span><span class="mord mathdefault">b</span><span class="mord mathdefault">t</span><span class="mord">.</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord mathdefault">u</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">t</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault">o</span><span class="mord mathdefault">m</span><span class="mord mathdefault">m</span><span class="mord mathdefault">a</span><span class="mord mathdefault">n</span><span class="mord mathdefault">d</span><span class="mord mathdefault">s</span></span></span></span><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mi>n</mi><mi>o</mi><mi>n</mi><mi>f</mi><mi>u</mi><mi>n</mi></mrow><annotation encoding="application/x-tex">anonfun</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">a</span><span class="mord mathdefault">n</span><span class="mord mathdefault">o</span><span class="mord mathdefault">n</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault">u</span><span class="mord mathdefault">n</span></span></span></span>loadProjectImpl<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>2.</mn><mi>a</mi><mi>p</mi><mi>p</mi><mi>l</mi><mi>y</mi><mo stretchy="false">(</mo><mi>M</mi><mi>a</mi><mi>i</mi><mi>n</mi><mi mathvariant="normal">.</mi><mi>s</mi><mi>c</mi><mi>a</mi><mi>l</mi><mi>a</mi><mo>:</mo><mn>475</mn><mo stretchy="false">)</mo><mi>a</mi><mi>t</mi><mi>s</mi><mi>b</mi><mi>t</mi><mi mathvariant="normal">.</mi><mi>C</mi><mi>o</mi><mi>m</mi><mi>m</mi><mi>a</mi><mi>n</mi><mi>d</mi></mrow><annotation encoding="application/x-tex">2.apply(Main.scala:475)        at sbt.Command</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mord">.</span><span class="mord mathdefault">a</span><span class="mord mathdefault">p</span><span class="mord mathdefault">p</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault">a</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mord">.</span><span class="mord mathdefault">s</span><span class="mord mathdefault">c</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">4</span><span class="mord">7</span><span class="mord">5</span><span class="mclose">)</span><span class="mord mathdefault">a</span><span class="mord mathdefault">t</span><span class="mord mathdefault">s</span><span class="mord mathdefault">b</span><span class="mord mathdefault">t</span><span class="mord">.</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault">o</span><span class="mord mathdefault">m</span><span class="mord mathdefault">m</span><span class="mord mathdefault">a</span><span class="mord mathdefault">n</span><span class="mord mathdefault">d</span></span></span></span><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mi>n</mi><mi>o</mi><mi>n</mi><mi>f</mi><mi>u</mi><mi>n</mi></mrow><annotation encoding="application/x-tex">anonfun</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">a</span><span class="mord mathdefault">n</span><span class="mord mathdefault">o</span><span class="mord mathdefault">n</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault">u</span><span class="mord mathdefault">n</span></span></span></span>applyEffect<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn></mrow><annotation encoding="application/x-tex">1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mi>n</mi><mi>o</mi><mi>n</mi><mi>f</mi><mi>u</mi><mi>n</mi></mrow><annotation encoding="application/x-tex">anonfun</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">a</span><span class="mord mathdefault">n</span><span class="mord mathdefault">o</span><span class="mord mathdefault">n</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault">u</span><span class="mord mathdefault">n</span></span></span></span>apply<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>2.</mn><mi>a</mi><mi>p</mi><mi>p</mi><mi>l</mi><mi>y</mi><mo stretchy="false">(</mo><mi>C</mi><mi>o</mi><mi>m</mi><mi>m</mi><mi>a</mi><mi>n</mi><mi>d</mi><mi mathvariant="normal">.</mi><mi>s</mi><mi>c</mi><mi>a</mi><mi>l</mi><mi>a</mi><mo>:</mo><mn>59</mn><mo stretchy="false">)</mo><mi>a</mi><mi>t</mi><mi>s</mi><mi>b</mi><mi>t</mi><mi mathvariant="normal">.</mi><mi>C</mi><mi>o</mi><mi>m</mi><mi>m</mi><mi>a</mi><mi>n</mi><mi>d</mi></mrow><annotation encoding="application/x-tex">2.apply(Command.scala:59)        at sbt.Command</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mord">.</span><span class="mord mathdefault">a</span><span class="mord mathdefault">p</span><span class="mord mathdefault">p</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault">o</span><span class="mord mathdefault">m</span><span class="mord mathdefault">m</span><span class="mord mathdefault">a</span><span class="mord mathdefault">n</span><span class="mord mathdefault">d</span><span class="mord">.</span><span class="mord mathdefault">s</span><span class="mord mathdefault">c</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">5</span><span class="mord">9</span><span class="mclose">)</span><span class="mord mathdefault">a</span><span class="mord mathdefault">t</span><span class="mord mathdefault">s</span><span class="mord mathdefault">b</span><span class="mord mathdefault">t</span><span class="mord">.</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault">o</span><span class="mord mathdefault">m</span><span class="mord mathdefault">m</span><span class="mord mathdefault">a</span><span class="mord mathdefault">n</span><span class="mord mathdefault">d</span></span></span></span><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mi>n</mi><mi>o</mi><mi>n</mi><mi>f</mi><mi>u</mi><mi>n</mi></mrow><annotation encoding="application/x-tex">anonfun</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">a</span><span class="mord mathdefault">n</span><span class="mord mathdefault">o</span><span class="mord mathdefault">n</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault">u</span><span class="mord mathdefault">n</span></span></span></span>applyEffect<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn></mrow><annotation encoding="application/x-tex">1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mi>n</mi><mi>o</mi><mi>n</mi><mi>f</mi><mi>u</mi><mi>n</mi></mrow><annotation encoding="application/x-tex">anonfun</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">a</span><span class="mord mathdefault">n</span><span class="mord mathdefault">o</span><span class="mord mathdefault">n</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault">u</span><span class="mord mathdefault">n</span></span></span></span>apply<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>2.</mn><mi>a</mi><mi>p</mi><mi>p</mi><mi>l</mi><mi>y</mi><mo stretchy="false">(</mo><mi>C</mi><mi>o</mi><mi>m</mi><mi>m</mi><mi>a</mi><mi>n</mi><mi>d</mi><mi mathvariant="normal">.</mi><mi>s</mi><mi>c</mi><mi>a</mi><mi>l</mi><mi>a</mi><mo>:</mo><mn>59</mn><mo stretchy="false">)</mo><mi>a</mi><mi>t</mi><mi>s</mi><mi>b</mi><mi>t</mi><mi mathvariant="normal">.</mi><mi>C</mi><mi>o</mi><mi>m</mi><mi>m</mi><mi>a</mi><mi>n</mi><mi>d</mi></mrow><annotation encoding="application/x-tex">2.apply(Command.scala:59)        at sbt.Command</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mord">.</span><span class="mord mathdefault">a</span><span class="mord mathdefault">p</span><span class="mord mathdefault">p</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault">o</span><span class="mord mathdefault">m</span><span class="mord mathdefault">m</span><span class="mord mathdefault">a</span><span class="mord mathdefault">n</span><span class="mord mathdefault">d</span><span class="mord">.</span><span class="mord mathdefault">s</span><span class="mord mathdefault">c</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">5</span><span class="mord">9</span><span class="mclose">)</span><span class="mord mathdefault">a</span><span class="mord mathdefault">t</span><span class="mord mathdefault">s</span><span class="mord mathdefault">b</span><span class="mord mathdefault">t</span><span class="mord">.</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault">o</span><span class="mord mathdefault">m</span><span class="mord mathdefault">m</span><span class="mord mathdefault">a</span><span class="mord mathdefault">n</span><span class="mord mathdefault">d</span></span></span></span><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mi>n</mi><mi>o</mi><mi>n</mi><mi>f</mi><mi>u</mi><mi>n</mi></mrow><annotation encoding="application/x-tex">anonfun</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">a</span><span class="mord mathdefault">n</span><span class="mord mathdefault">o</span><span class="mord mathdefault">n</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault">u</span><span class="mord mathdefault">n</span></span></span></span>applyEffect<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>2</mn></mrow><annotation encoding="application/x-tex">2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span></span></span></span><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mi>n</mi><mi>o</mi><mi>n</mi><mi>f</mi><mi>u</mi><mi>n</mi></mrow><annotation encoding="application/x-tex">anonfun</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">a</span><span class="mord mathdefault">n</span><span class="mord mathdefault">o</span><span class="mord mathdefault">n</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault">u</span><span class="mord mathdefault">n</span></span></span></span>apply<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>3.</mn><mi>a</mi><mi>p</mi><mi>p</mi><mi>l</mi><mi>y</mi><mo stretchy="false">(</mo><mi>C</mi><mi>o</mi><mi>m</mi><mi>m</mi><mi>a</mi><mi>n</mi><mi>d</mi><mi mathvariant="normal">.</mi><mi>s</mi><mi>c</mi><mi>a</mi><mi>l</mi><mi>a</mi><mo>:</mo><mn>61</mn><mo stretchy="false">)</mo><mi>a</mi><mi>t</mi><mi>s</mi><mi>b</mi><mi>t</mi><mi mathvariant="normal">.</mi><mi>C</mi><mi>o</mi><mi>m</mi><mi>m</mi><mi>a</mi><mi>n</mi><mi>d</mi></mrow><annotation encoding="application/x-tex">3.apply(Command.scala:61)        at sbt.Command</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">3</span><span class="mord">.</span><span class="mord mathdefault">a</span><span class="mord mathdefault">p</span><span class="mord mathdefault">p</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault">o</span><span class="mord mathdefault">m</span><span class="mord mathdefault">m</span><span class="mord mathdefault">a</span><span class="mord mathdefault">n</span><span class="mord mathdefault">d</span><span class="mord">.</span><span class="mord mathdefault">s</span><span class="mord mathdefault">c</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">6</span><span class="mord">1</span><span class="mclose">)</span><span class="mord mathdefault">a</span><span class="mord mathdefault">t</span><span class="mord mathdefault">s</span><span class="mord mathdefault">b</span><span class="mord mathdefault">t</span><span class="mord">.</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault">o</span><span class="mord mathdefault">m</span><span class="mord mathdefault">m</span><span class="mord mathdefault">a</span><span class="mord mathdefault">n</span><span class="mord mathdefault">d</span></span></span></span><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mi>n</mi><mi>o</mi><mi>n</mi><mi>f</mi><mi>u</mi><mi>n</mi></mrow><annotation encoding="application/x-tex">anonfun</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">a</span><span class="mord mathdefault">n</span><span class="mord mathdefault">o</span><span class="mord mathdefault">n</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault">u</span><span class="mord mathdefault">n</span></span></span></span>applyEffect<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>2</mn></mrow><annotation encoding="application/x-tex">2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span></span></span></span><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mi>n</mi><mi>o</mi><mi>n</mi><mi>f</mi><mi>u</mi><mi>n</mi></mrow><annotation encoding="application/x-tex">anonfun</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">a</span><span class="mord mathdefault">n</span><span class="mord mathdefault">o</span><span class="mord mathdefault">n</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault">u</span><span class="mord mathdefault">n</span></span></span></span>apply<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>3.</mn><mi>a</mi><mi>p</mi><mi>p</mi><mi>l</mi><mi>y</mi><mo stretchy="false">(</mo><mi>C</mi><mi>o</mi><mi>m</mi><mi>m</mi><mi>a</mi><mi>n</mi><mi>d</mi><mi mathvariant="normal">.</mi><mi>s</mi><mi>c</mi><mi>a</mi><mi>l</mi><mi>a</mi><mo>:</mo><mn>61</mn><mo stretchy="false">)</mo><mi>a</mi><mi>t</mi><mi>s</mi><mi>b</mi><mi>t</mi><mi mathvariant="normal">.</mi><mi>C</mi><mi>o</mi><mi>m</mi><mi>m</mi><mi>a</mi><mi>n</mi><mi>d</mi></mrow><annotation encoding="application/x-tex">3.apply(Command.scala:61)        at sbt.Command</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">3</span><span class="mord">.</span><span class="mord mathdefault">a</span><span class="mord mathdefault">p</span><span class="mord mathdefault">p</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault">o</span><span class="mord mathdefault">m</span><span class="mord mathdefault">m</span><span class="mord mathdefault">a</span><span class="mord mathdefault">n</span><span class="mord mathdefault">d</span><span class="mord">.</span><span class="mord mathdefault">s</span><span class="mord mathdefault">c</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">6</span><span class="mord">1</span><span class="mclose">)</span><span class="mord mathdefault">a</span><span class="mord mathdefault">t</span><span class="mord mathdefault">s</span><span class="mord mathdefault">b</span><span class="mord mathdefault">t</span><span class="mord">.</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault">o</span><span class="mord mathdefault">m</span><span class="mord mathdefault">m</span><span class="mord mathdefault">a</span><span class="mord mathdefault">n</span><span class="mord mathdefault">d</span></span></span></span>.process(Command.scala:93)<br />at sbt.MainLoop$$anonfun<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn></mrow><annotation encoding="application/x-tex">1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mi>n</mi><mi>o</mi><mi>n</mi><mi>f</mi><mi>u</mi><mi>n</mi></mrow><annotation encoding="application/x-tex">anonfun</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">a</span><span class="mord mathdefault">n</span><span class="mord mathdefault">o</span><span class="mord mathdefault">n</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault">u</span><span class="mord mathdefault">n</span></span></span></span>apply<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1.</mn><mi>a</mi><mi>p</mi><mi>p</mi><mi>l</mi><mi>y</mi><mo stretchy="false">(</mo><mi>M</mi><mi>a</mi><mi>i</mi><mi>n</mi><mi>L</mi><mi>o</mi><mi>o</mi><mi>p</mi><mi mathvariant="normal">.</mi><mi>s</mi><mi>c</mi><mi>a</mi><mi>l</mi><mi>a</mi><mo>:</mo><mn>98</mn><mo stretchy="false">)</mo><mi>a</mi><mi>t</mi><mi>s</mi><mi>b</mi><mi>t</mi><mi mathvariant="normal">.</mi><mi>M</mi><mi>a</mi><mi>i</mi><mi>n</mi><mi>L</mi><mi>o</mi><mi>o</mi><mi>p</mi></mrow><annotation encoding="application/x-tex">1.apply(MainLoop.scala:98)        at sbt.MainLoop</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord">.</span><span class="mord mathdefault">a</span><span class="mord mathdefault">p</span><span class="mord mathdefault">p</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault">a</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mord mathdefault">L</span><span class="mord mathdefault">o</span><span class="mord mathdefault">o</span><span class="mord mathdefault">p</span><span class="mord">.</span><span class="mord mathdefault">s</span><span class="mord mathdefault">c</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">9</span><span class="mord">8</span><span class="mclose">)</span><span class="mord mathdefault">a</span><span class="mord mathdefault">t</span><span class="mord mathdefault">s</span><span class="mord mathdefault">b</span><span class="mord mathdefault">t</span><span class="mord">.</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault">a</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mord mathdefault">L</span><span class="mord mathdefault">o</span><span class="mord mathdefault">o</span><span class="mord mathdefault">p</span></span></span></span>$anonfun<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn></mrow><annotation encoding="application/x-tex">1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mi>n</mi><mi>o</mi><mi>n</mi><mi>f</mi><mi>u</mi><mi>n</mi></mrow><annotation encoding="application/x-tex">anonfun</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">a</span><span class="mord mathdefault">n</span><span class="mord mathdefault">o</span><span class="mord mathdefault">n</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault">u</span><span class="mord mathdefault">n</span></span></span></span>apply<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1.</mn><mi>a</mi><mi>p</mi><mi>p</mi><mi>l</mi><mi>y</mi><mo stretchy="false">(</mo><mi>M</mi><mi>a</mi><mi>i</mi><mi>n</mi><mi>L</mi><mi>o</mi><mi>o</mi><mi>p</mi><mi mathvariant="normal">.</mi><mi>s</mi><mi>c</mi><mi>a</mi><mi>l</mi><mi>a</mi><mo>:</mo><mn>98</mn><mo stretchy="false">)</mo><mi>a</mi><mi>t</mi><mi>s</mi><mi>b</mi><mi>t</mi><mi mathvariant="normal">.</mi><mi>S</mi><mi>t</mi><mi>a</mi><mi>t</mi><mi>e</mi></mrow><annotation encoding="application/x-tex">1.apply(MainLoop.scala:98)        at sbt.State</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord">.</span><span class="mord mathdefault">a</span><span class="mord mathdefault">p</span><span class="mord mathdefault">p</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault">a</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mord mathdefault">L</span><span class="mord mathdefault">o</span><span class="mord mathdefault">o</span><span class="mord mathdefault">p</span><span class="mord">.</span><span class="mord mathdefault">s</span><span class="mord mathdefault">c</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">9</span><span class="mord">8</span><span class="mclose">)</span><span class="mord mathdefault">a</span><span class="mord mathdefault">t</span><span class="mord mathdefault">s</span><span class="mord mathdefault">b</span><span class="mord mathdefault">t</span><span class="mord">.</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">t</span><span class="mord mathdefault">a</span><span class="mord mathdefault">t</span><span class="mord mathdefault">e</span></span></span></span>$anon<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1.</mn><mi>p</mi><mi>r</mi><mi>o</mi><mi>c</mi><mi>e</mi><mi>s</mi><mi>s</mi><mo stretchy="false">(</mo><mi>S</mi><mi>t</mi><mi>a</mi><mi>t</mi><mi>e</mi><mi mathvariant="normal">.</mi><mi>s</mi><mi>c</mi><mi>a</mi><mi>l</mi><mi>a</mi><mo>:</mo><mn>184</mn><mo stretchy="false">)</mo><mi>a</mi><mi>t</mi><mi>s</mi><mi>b</mi><mi>t</mi><mi mathvariant="normal">.</mi><mi>M</mi><mi>a</mi><mi>i</mi><mi>n</mi><mi>L</mi><mi>o</mi><mi>o</mi><mi>p</mi></mrow><annotation encoding="application/x-tex">1.process(State.scala:184)        at sbt.MainLoop</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord">.</span><span class="mord mathdefault">p</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">o</span><span class="mord mathdefault">c</span><span class="mord mathdefault">e</span><span class="mord mathdefault">s</span><span class="mord mathdefault">s</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">t</span><span class="mord mathdefault">a</span><span class="mord mathdefault">t</span><span class="mord mathdefault">e</span><span class="mord">.</span><span class="mord mathdefault">s</span><span class="mord mathdefault">c</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord">8</span><span class="mord">4</span><span class="mclose">)</span><span class="mord mathdefault">a</span><span class="mord mathdefault">t</span><span class="mord mathdefault">s</span><span class="mord mathdefault">b</span><span class="mord mathdefault">t</span><span class="mord">.</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault">a</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mord mathdefault">L</span><span class="mord mathdefault">o</span><span class="mord mathdefault">o</span><span class="mord mathdefault">p</span></span></span></span>$anonfun<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1.</mn><mi>a</mi><mi>p</mi><mi>p</mi><mi>l</mi><mi>y</mi><mo stretchy="false">(</mo><mi>M</mi><mi>a</mi><mi>i</mi><mi>n</mi><mi>L</mi><mi>o</mi><mi>o</mi><mi>p</mi><mi mathvariant="normal">.</mi><mi>s</mi><mi>c</mi><mi>a</mi><mi>l</mi><mi>a</mi><mo>:</mo><mn>98</mn><mo stretchy="false">)</mo><mi>a</mi><mi>t</mi><mi>s</mi><mi>b</mi><mi>t</mi><mi mathvariant="normal">.</mi><mi>M</mi><mi>a</mi><mi>i</mi><mi>n</mi><mi>L</mi><mi>o</mi><mi>o</mi><mi>p</mi></mrow><annotation encoding="application/x-tex">1.apply(MainLoop.scala:98)        at sbt.MainLoop</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord">.</span><span class="mord mathdefault">a</span><span class="mord mathdefault">p</span><span class="mord mathdefault">p</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault">a</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mord mathdefault">L</span><span class="mord mathdefault">o</span><span class="mord mathdefault">o</span><span class="mord mathdefault">p</span><span class="mord">.</span><span class="mord mathdefault">s</span><span class="mord mathdefault">c</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">9</span><span class="mord">8</span><span class="mclose">)</span><span class="mord mathdefault">a</span><span class="mord mathdefault">t</span><span class="mord mathdefault">s</span><span class="mord mathdefault">b</span><span class="mord mathdefault">t</span><span class="mord">.</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault">a</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mord mathdefault">L</span><span class="mord mathdefault">o</span><span class="mord mathdefault">o</span><span class="mord mathdefault">p</span></span></span></span>$anonfun<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1.</mn><mi>a</mi><mi>p</mi><mi>p</mi><mi>l</mi><mi>y</mi><mo stretchy="false">(</mo><mi>M</mi><mi>a</mi><mi>i</mi><mi>n</mi><mi>L</mi><mi>o</mi><mi>o</mi><mi>p</mi><mi mathvariant="normal">.</mi><mi>s</mi><mi>c</mi><mi>a</mi><mi>l</mi><mi>a</mi><mo>:</mo><mn>98</mn><mo stretchy="false">)</mo><mi>a</mi><mi>t</mi><mi>s</mi><mi>b</mi><mi>t</mi><mi mathvariant="normal">.</mi><mi>E</mi><mi>r</mi><mi>r</mi><mi>o</mi><mi>r</mi><mi>H</mi><mi>a</mi><mi>n</mi><mi>d</mi><mi>l</mi><mi>i</mi><mi>n</mi><mi>g</mi></mrow><annotation encoding="application/x-tex">1.apply(MainLoop.scala:98)        at sbt.ErrorHandling</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord">.</span><span class="mord mathdefault">a</span><span class="mord mathdefault">p</span><span class="mord mathdefault">p</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault">a</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mord mathdefault">L</span><span class="mord mathdefault">o</span><span class="mord mathdefault">o</span><span class="mord mathdefault">p</span><span class="mord">.</span><span class="mord mathdefault">s</span><span class="mord mathdefault">c</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">9</span><span class="mord">8</span><span class="mclose">)</span><span class="mord mathdefault">a</span><span class="mord mathdefault">t</span><span class="mord mathdefault">s</span><span class="mord mathdefault">b</span><span class="mord mathdefault">t</span><span class="mord">.</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mord mathdefault">a</span><span class="mord mathdefault">n</span><span class="mord mathdefault">d</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span></span></span></span>.wideConvert(ErrorHandling.scala:17)<br />at sbt.MainLoop<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">.</mi><mi>n</mi><mi>e</mi><mi>x</mi><mi>t</mi><mo stretchy="false">(</mo><mi>M</mi><mi>a</mi><mi>i</mi><mi>n</mi><mi>L</mi><mi>o</mi><mi>o</mi><mi>p</mi><mi mathvariant="normal">.</mi><mi>s</mi><mi>c</mi><mi>a</mi><mi>l</mi><mi>a</mi><mo>:</mo><mn>98</mn><mo stretchy="false">)</mo><mi>a</mi><mi>t</mi><mi>s</mi><mi>b</mi><mi>t</mi><mi mathvariant="normal">.</mi><mi>M</mi><mi>a</mi><mi>i</mi><mi>n</mi><mi>L</mi><mi>o</mi><mi>o</mi><mi>p</mi></mrow><annotation encoding="application/x-tex">.next(MainLoop.scala:98)        at sbt.MainLoop</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">.</span><span class="mord mathdefault">n</span><span class="mord mathdefault">e</span><span class="mord mathdefault">x</span><span class="mord mathdefault">t</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault">a</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mord mathdefault">L</span><span class="mord mathdefault">o</span><span class="mord mathdefault">o</span><span class="mord mathdefault">p</span><span class="mord">.</span><span class="mord mathdefault">s</span><span class="mord mathdefault">c</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">9</span><span class="mord">8</span><span class="mclose">)</span><span class="mord mathdefault">a</span><span class="mord mathdefault">t</span><span class="mord mathdefault">s</span><span class="mord mathdefault">b</span><span class="mord mathdefault">t</span><span class="mord">.</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault">a</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mord mathdefault">L</span><span class="mord mathdefault">o</span><span class="mord mathdefault">o</span><span class="mord mathdefault">p</span></span></span></span>.run(MainLoop.scala:91)<br />at sbt.MainLoop$$anonfun$runWithNewLog<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1.</mn><mi>a</mi><mi>p</mi><mi>p</mi><mi>l</mi><mi>y</mi><mo stretchy="false">(</mo><mi>M</mi><mi>a</mi><mi>i</mi><mi>n</mi><mi>L</mi><mi>o</mi><mi>o</mi><mi>p</mi><mi mathvariant="normal">.</mi><mi>s</mi><mi>c</mi><mi>a</mi><mi>l</mi><mi>a</mi><mo>:</mo><mn>70</mn><mo stretchy="false">)</mo><mi>a</mi><mi>t</mi><mi>s</mi><mi>b</mi><mi>t</mi><mi mathvariant="normal">.</mi><mi>M</mi><mi>a</mi><mi>i</mi><mi>n</mi><mi>L</mi><mi>o</mi><mi>o</mi><mi>p</mi></mrow><annotation encoding="application/x-tex">1.apply(MainLoop.scala:70)        at sbt.MainLoop</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord">.</span><span class="mord mathdefault">a</span><span class="mord mathdefault">p</span><span class="mord mathdefault">p</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault">a</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mord mathdefault">L</span><span class="mord mathdefault">o</span><span class="mord mathdefault">o</span><span class="mord mathdefault">p</span><span class="mord">.</span><span class="mord mathdefault">s</span><span class="mord mathdefault">c</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">7</span><span class="mord">0</span><span class="mclose">)</span><span class="mord mathdefault">a</span><span class="mord mathdefault">t</span><span class="mord mathdefault">s</span><span class="mord mathdefault">b</span><span class="mord mathdefault">t</span><span class="mord">.</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault">a</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mord mathdefault">L</span><span class="mord mathdefault">o</span><span class="mord mathdefault">o</span><span class="mord mathdefault">p</span></span></span></span><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mi>n</mi><mi>o</mi><mi>n</mi><mi>f</mi><mi>u</mi><mi>n</mi></mrow><annotation encoding="application/x-tex">anonfun</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">a</span><span class="mord mathdefault">n</span><span class="mord mathdefault">o</span><span class="mord mathdefault">n</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault">u</span><span class="mord mathdefault">n</span></span></span></span>runWithNewLog<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1.</mn><mi>a</mi><mi>p</mi><mi>p</mi><mi>l</mi><mi>y</mi><mo stretchy="false">(</mo><mi>M</mi><mi>a</mi><mi>i</mi><mi>n</mi><mi>L</mi><mi>o</mi><mi>o</mi><mi>p</mi><mi mathvariant="normal">.</mi><mi>s</mi><mi>c</mi><mi>a</mi><mi>l</mi><mi>a</mi><mo>:</mo><mn>65</mn><mo stretchy="false">)</mo><mi>a</mi><mi>t</mi><mi>s</mi><mi>b</mi><mi>t</mi><mi mathvariant="normal">.</mi><mi>U</mi><mi>s</mi><mi>i</mi><mi>n</mi><mi>g</mi><mi mathvariant="normal">.</mi><mi>a</mi><mi>p</mi><mi>p</mi><mi>l</mi><mi>y</mi><mo stretchy="false">(</mo><mi>U</mi><mi>s</mi><mi>i</mi><mi>n</mi><mi>g</mi><mi mathvariant="normal">.</mi><mi>s</mi><mi>c</mi><mi>a</mi><mi>l</mi><mi>a</mi><mo>:</mo><mn>24</mn><mo stretchy="false">)</mo><mi>a</mi><mi>t</mi><mi>s</mi><mi>b</mi><mi>t</mi><mi mathvariant="normal">.</mi><mi>M</mi><mi>a</mi><mi>i</mi><mi>n</mi><mi>L</mi><mi>o</mi><mi>o</mi><mi>p</mi></mrow><annotation encoding="application/x-tex">1.apply(MainLoop.scala:65)        at sbt.Using.apply(Using.scala:24)        at sbt.MainLoop</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord">.</span><span class="mord mathdefault">a</span><span class="mord mathdefault">p</span><span class="mord mathdefault">p</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault">a</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mord mathdefault">L</span><span class="mord mathdefault">o</span><span class="mord mathdefault">o</span><span class="mord mathdefault">p</span><span class="mord">.</span><span class="mord mathdefault">s</span><span class="mord mathdefault">c</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">6</span><span class="mord">5</span><span class="mclose">)</span><span class="mord mathdefault">a</span><span class="mord mathdefault">t</span><span class="mord mathdefault">s</span><span class="mord mathdefault">b</span><span class="mord mathdefault">t</span><span class="mord">.</span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="mord mathdefault">s</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord">.</span><span class="mord mathdefault">a</span><span class="mord mathdefault">p</span><span class="mord mathdefault">p</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="mord mathdefault">s</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord">.</span><span class="mord mathdefault">s</span><span class="mord mathdefault">c</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mord">4</span><span class="mclose">)</span><span class="mord mathdefault">a</span><span class="mord mathdefault">t</span><span class="mord mathdefault">s</span><span class="mord mathdefault">b</span><span class="mord mathdefault">t</span><span class="mord">.</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault">a</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mord mathdefault">L</span><span class="mord mathdefault">o</span><span class="mord mathdefault">o</span><span class="mord mathdefault">p</span></span></span></span>.runWithNewLog(MainLoop.scala:65)<br />at sbt.MainLoop<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">.</mi><mi>r</mi><mi>u</mi><mi>n</mi><mi>A</mi><mi>n</mi><mi>d</mi><mi>C</mi><mi>l</mi><mi>e</mi><mi>a</mi><mi>r</mi><mi>L</mi><mi>a</mi><mi>s</mi><mi>t</mi><mo stretchy="false">(</mo><mi>M</mi><mi>a</mi><mi>i</mi><mi>n</mi><mi>L</mi><mi>o</mi><mi>o</mi><mi>p</mi><mi mathvariant="normal">.</mi><mi>s</mi><mi>c</mi><mi>a</mi><mi>l</mi><mi>a</mi><mo>:</mo><mn>48</mn><mo stretchy="false">)</mo><mi>a</mi><mi>t</mi><mi>s</mi><mi>b</mi><mi>t</mi><mi mathvariant="normal">.</mi><mi>M</mi><mi>a</mi><mi>i</mi><mi>n</mi><mi>L</mi><mi>o</mi><mi>o</mi><mi>p</mi></mrow><annotation encoding="application/x-tex">.runAndClearLast(MainLoop.scala:48)        at sbt.MainLoop</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">.</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">u</span><span class="mord mathdefault">n</span><span class="mord mathdefault">A</span><span class="mord mathdefault">n</span><span class="mord mathdefault">d</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">e</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">L</span><span class="mord mathdefault">a</span><span class="mord mathdefault">s</span><span class="mord mathdefault">t</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault">a</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mord mathdefault">L</span><span class="mord mathdefault">o</span><span class="mord mathdefault">o</span><span class="mord mathdefault">p</span><span class="mord">.</span><span class="mord mathdefault">s</span><span class="mord mathdefault">c</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">4</span><span class="mord">8</span><span class="mclose">)</span><span class="mord mathdefault">a</span><span class="mord mathdefault">t</span><span class="mord mathdefault">s</span><span class="mord mathdefault">b</span><span class="mord mathdefault">t</span><span class="mord">.</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault">a</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mord mathdefault">L</span><span class="mord mathdefault">o</span><span class="mord mathdefault">o</span><span class="mord mathdefault">p</span></span></span></span>.runLoggedLoop(MainLoop.scala:32)<br />at sbt.MainLoop<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">.</mi><mi>r</mi><mi>u</mi><mi>n</mi><mi>L</mi><mi>o</mi><mi>g</mi><mi>g</mi><mi>e</mi><mi>d</mi><mo stretchy="false">(</mo><mi>M</mi><mi>a</mi><mi>i</mi><mi>n</mi><mi>L</mi><mi>o</mi><mi>o</mi><mi>p</mi><mi mathvariant="normal">.</mi><mi>s</mi><mi>c</mi><mi>a</mi><mi>l</mi><mi>a</mi><mo>:</mo><mn>24</mn><mo stretchy="false">)</mo><mi>a</mi><mi>t</mi><mi>s</mi><mi>b</mi><mi>t</mi><mi mathvariant="normal">.</mi><mi>S</mi><mi>t</mi><mi>a</mi><mi>n</mi><mi>d</mi><mi>a</mi><mi>r</mi><mi>d</mi><mi>M</mi><mi>a</mi><mi>i</mi><mi>n</mi></mrow><annotation encoding="application/x-tex">.runLogged(MainLoop.scala:24)        at sbt.StandardMain</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">.</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">u</span><span class="mord mathdefault">n</span><span class="mord mathdefault">L</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault">e</span><span class="mord mathdefault">d</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault">a</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mord mathdefault">L</span><span class="mord mathdefault">o</span><span class="mord mathdefault">o</span><span class="mord mathdefault">p</span><span class="mord">.</span><span class="mord mathdefault">s</span><span class="mord mathdefault">c</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mord">4</span><span class="mclose">)</span><span class="mord mathdefault">a</span><span class="mord mathdefault">t</span><span class="mord mathdefault">s</span><span class="mord mathdefault">b</span><span class="mord mathdefault">t</span><span class="mord">.</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">t</span><span class="mord mathdefault">a</span><span class="mord mathdefault">n</span><span class="mord mathdefault">d</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">d</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault">a</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span></span></span></span>.runManaged(Main.scala:53)<br />at sbt.xMain.run(Main.scala:28)<br />at xsbt.boot.Launch$$anonfun$run<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1.</mn><mi>a</mi><mi>p</mi><mi>p</mi><mi>l</mi><mi>y</mi><mo stretchy="false">(</mo><mi>L</mi><mi>a</mi><mi>u</mi><mi>n</mi><mi>c</mi><mi>h</mi><mi mathvariant="normal">.</mi><mi>s</mi><mi>c</mi><mi>a</mi><mi>l</mi><mi>a</mi><mo>:</mo><mn>109</mn><mo stretchy="false">)</mo><mi>a</mi><mi>t</mi><mi>x</mi><mi>s</mi><mi>b</mi><mi>t</mi><mi mathvariant="normal">.</mi><mi>b</mi><mi>o</mi><mi>o</mi><mi>t</mi><mi mathvariant="normal">.</mi><mi>L</mi><mi>a</mi><mi>u</mi><mi>n</mi><mi>c</mi><mi>h</mi></mrow><annotation encoding="application/x-tex">1.apply(Launch.scala:109)        at xsbt.boot.Launch</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord">.</span><span class="mord mathdefault">a</span><span class="mord mathdefault">p</span><span class="mord mathdefault">p</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mopen">(</span><span class="mord mathdefault">L</span><span class="mord mathdefault">a</span><span class="mord mathdefault">u</span><span class="mord mathdefault">n</span><span class="mord mathdefault">c</span><span class="mord mathdefault">h</span><span class="mord">.</span><span class="mord mathdefault">s</span><span class="mord mathdefault">c</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord">9</span><span class="mclose">)</span><span class="mord mathdefault">a</span><span class="mord mathdefault">t</span><span class="mord mathdefault">x</span><span class="mord mathdefault">s</span><span class="mord mathdefault">b</span><span class="mord mathdefault">t</span><span class="mord">.</span><span class="mord mathdefault">b</span><span class="mord mathdefault">o</span><span class="mord mathdefault">o</span><span class="mord mathdefault">t</span><span class="mord">.</span><span class="mord mathdefault">L</span><span class="mord mathdefault">a</span><span class="mord mathdefault">u</span><span class="mord mathdefault">n</span><span class="mord mathdefault">c</span><span class="mord mathdefault">h</span></span></span></span>.withContextLoader(Launch.scala:128)<br />at xsbt.boot.Launch<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">.</mi><mi>r</mi><mi>u</mi><mi>n</mi><mo stretchy="false">(</mo><mi>L</mi><mi>a</mi><mi>u</mi><mi>n</mi><mi>c</mi><mi>h</mi><mi mathvariant="normal">.</mi><mi>s</mi><mi>c</mi><mi>a</mi><mi>l</mi><mi>a</mi><mo>:</mo><mn>109</mn><mo stretchy="false">)</mo><mi>a</mi><mi>t</mi><mi>x</mi><mi>s</mi><mi>b</mi><mi>t</mi><mi mathvariant="normal">.</mi><mi>b</mi><mi>o</mi><mi>o</mi><mi>t</mi><mi mathvariant="normal">.</mi><mi>L</mi><mi>a</mi><mi>u</mi><mi>n</mi><mi>c</mi><mi>h</mi></mrow><annotation encoding="application/x-tex">.run(Launch.scala:109)        at xsbt.boot.Launch</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">.</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">u</span><span class="mord mathdefault">n</span><span class="mopen">(</span><span class="mord mathdefault">L</span><span class="mord mathdefault">a</span><span class="mord mathdefault">u</span><span class="mord mathdefault">n</span><span class="mord mathdefault">c</span><span class="mord mathdefault">h</span><span class="mord">.</span><span class="mord mathdefault">s</span><span class="mord mathdefault">c</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord">9</span><span class="mclose">)</span><span class="mord mathdefault">a</span><span class="mord mathdefault">t</span><span class="mord mathdefault">x</span><span class="mord mathdefault">s</span><span class="mord mathdefault">b</span><span class="mord mathdefault">t</span><span class="mord">.</span><span class="mord mathdefault">b</span><span class="mord mathdefault">o</span><span class="mord mathdefault">o</span><span class="mord mathdefault">t</span><span class="mord">.</span><span class="mord mathdefault">L</span><span class="mord mathdefault">a</span><span class="mord mathdefault">u</span><span class="mord mathdefault">n</span><span class="mord mathdefault">c</span><span class="mord mathdefault">h</span></span></span></span><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mi>n</mi><mi>o</mi><mi>n</mi><mi>f</mi><mi>u</mi><mi>n</mi></mrow><annotation encoding="application/x-tex">anonfun</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">a</span><span class="mord mathdefault">n</span><span class="mord mathdefault">o</span><span class="mord mathdefault">n</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault">u</span><span class="mord mathdefault">n</span></span></span></span>apply<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1.</mn><mi>a</mi><mi>p</mi><mi>p</mi><mi>l</mi><mi>y</mi><mo stretchy="false">(</mo><mi>L</mi><mi>a</mi><mi>u</mi><mi>n</mi><mi>c</mi><mi>h</mi><mi mathvariant="normal">.</mi><mi>s</mi><mi>c</mi><mi>a</mi><mi>l</mi><mi>a</mi><mo>:</mo><mn>35</mn><mo stretchy="false">)</mo><mi>a</mi><mi>t</mi><mi>x</mi><mi>s</mi><mi>b</mi><mi>t</mi><mi mathvariant="normal">.</mi><mi>b</mi><mi>o</mi><mi>o</mi><mi>t</mi><mi mathvariant="normal">.</mi><mi>L</mi><mi>a</mi><mi>u</mi><mi>n</mi><mi>c</mi><mi>h</mi></mrow><annotation encoding="application/x-tex">1.apply(Launch.scala:35)        at xsbt.boot.Launch</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord">.</span><span class="mord mathdefault">a</span><span class="mord mathdefault">p</span><span class="mord mathdefault">p</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mopen">(</span><span class="mord mathdefault">L</span><span class="mord mathdefault">a</span><span class="mord mathdefault">u</span><span class="mord mathdefault">n</span><span class="mord mathdefault">c</span><span class="mord mathdefault">h</span><span class="mord">.</span><span class="mord mathdefault">s</span><span class="mord mathdefault">c</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">3</span><span class="mord">5</span><span class="mclose">)</span><span class="mord mathdefault">a</span><span class="mord mathdefault">t</span><span class="mord mathdefault">x</span><span class="mord mathdefault">s</span><span class="mord mathdefault">b</span><span class="mord mathdefault">t</span><span class="mord">.</span><span class="mord mathdefault">b</span><span class="mord mathdefault">o</span><span class="mord mathdefault">o</span><span class="mord mathdefault">t</span><span class="mord">.</span><span class="mord mathdefault">L</span><span class="mord mathdefault">a</span><span class="mord mathdefault">u</span><span class="mord mathdefault">n</span><span class="mord mathdefault">c</span><span class="mord mathdefault">h</span></span></span></span>.launch(Launch.scala:117)<br />at xsbt.boot.Launch<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">.</mi><mi>a</mi><mi>p</mi><mi>p</mi><mi>l</mi><mi>y</mi><mo stretchy="false">(</mo><mi>L</mi><mi>a</mi><mi>u</mi><mi>n</mi><mi>c</mi><mi>h</mi><mi mathvariant="normal">.</mi><mi>s</mi><mi>c</mi><mi>a</mi><mi>l</mi><mi>a</mi><mo>:</mo><mn>18</mn><mo stretchy="false">)</mo><mi>a</mi><mi>t</mi><mi>x</mi><mi>s</mi><mi>b</mi><mi>t</mi><mi mathvariant="normal">.</mi><mi>b</mi><mi>o</mi><mi>o</mi><mi>t</mi><mi mathvariant="normal">.</mi><mi>B</mi><mi>o</mi><mi>o</mi><mi>t</mi></mrow><annotation encoding="application/x-tex">.apply(Launch.scala:18)        at xsbt.boot.Boot</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">.</span><span class="mord mathdefault">a</span><span class="mord mathdefault">p</span><span class="mord mathdefault">p</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mopen">(</span><span class="mord mathdefault">L</span><span class="mord mathdefault">a</span><span class="mord mathdefault">u</span><span class="mord mathdefault">n</span><span class="mord mathdefault">c</span><span class="mord mathdefault">h</span><span class="mord">.</span><span class="mord mathdefault">s</span><span class="mord mathdefault">c</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord">8</span><span class="mclose">)</span><span class="mord mathdefault">a</span><span class="mord mathdefault">t</span><span class="mord mathdefault">x</span><span class="mord mathdefault">s</span><span class="mord mathdefault">b</span><span class="mord mathdefault">t</span><span class="mord">.</span><span class="mord mathdefault">b</span><span class="mord mathdefault">o</span><span class="mord mathdefault">o</span><span class="mord mathdefault">t</span><span class="mord">.</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord mathdefault">o</span><span class="mord mathdefault">o</span><span class="mord mathdefault">t</span></span></span></span>.runImpl(Boot.scala:41)<br />at xsbt.boot.Boot$.main(Boot.scala:17)<br />at xsbt.boot.Boot.main(Boot.scala)<br />[error] java.lang.UnsupportedClassVersionError: com/typesafe/config/ConfigException : Unsupported major.minor version 52.0<br />[error] Use ‘last’ for the full log.<br />Project loading failed: ®etry, (q)uit, (l)ast, or (i)gnore? q</p><p>上述错误是因为版本检查不是 jdk8 更换为1.8 即可，</p>]]></content>
      
      
      <categories>
          
          <category> 大数据 </category>
          
          <category> kafka </category>
          
      </categories>
      
      
        <tags>
            
            <tag> kafka </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mongodb 安装使用-副本集+分片 架构部署 -2</title>
      <link href="2016/05/08/mongodb-install-deploy-2/"/>
      <url>2016/05/08/mongodb-install-deploy-2/</url>
      
        <content type="html"><![CDATA[<h2 id="文章介绍的不清楚安装有几处不合理新的参考文章mongodb3212-副本集-分片-完整安装"><a class="markdownIt-Anchor" href="#文章介绍的不清楚安装有几处不合理新的参考文章mongodb3212-副本集-分片-完整安装"></a> 文章介绍的不清楚，安装有几处不合理，新的参考文章：<a href="http://www.jsledd.cn/mongodb3-2-12-share/">Mongodb3.2.12 副本集 + 分片 完整安装</a></h2><p>由于最近的项目中使用到了mongodb,前两天安装完后一直在忙别的事情，<a href="http://www.jsledd.cn/mongodb-install-1/">mongodb 安装</a> ，今天配置一下副本集+分片。</p><h2 id="组件介绍"><a class="markdownIt-Anchor" href="#组件介绍"></a> 组件介绍</h2><p>四个组件：mongos、config server、shard、replica set。 <strong>mongos</strong>，数据库集群请求的入口，所有的请求都通过mongos进行协调，不需要在应用程序添加 一个路由选择器，mongos自己就是一个请求分发中心，它负责把对应的数据请求请求转发到对应的shard服务器上。在生产环境通常有多mongos作 为请求的入口，防止其中一个挂掉所有的mongodb请求都没有办法操作。 <strong>config server</strong>，顾名思义为配置服务器，存储所有数据库元信息（路由、分片）的配置。 mongos本身没有物理存储分片服务器和数据路由信息，只是缓存在内存里，配置服务器则实际存储这些数据。mongos第一次启动或者关掉重启就会从 config server 加载配置信息，以后如果配置服务器信息变化会通知到所有的 mongos 更新自己的状态，这样 mongos 就能继续准确路由。在生产环境通常有多个 config server 配置服务器，因为它存储了分片路由的元数据，这个可不能丢失！就算挂掉其中一台，只要还有存货， mongodb集群就不会挂掉。 <strong>shard</strong>，这就是传说中的分片了。举例说明：一台机器的一个数据表 Collection1 存储了 1T 数据，压力太大了！在分给4个机器后，每个机器都是256G，则分摊了集中在一台机器的压力。也许有人问一台机器硬盘加大一点不就可以了，为什么要分给四 台机器呢？不要光想到存储空间，实际运行的数据库还有硬盘的读写、网络的IO、CPU和内存的瓶颈。在mongodb集群只要设置好了分片规则，通过 mongos操作数据库就能自动把对应的数据操作请求转发到对应的分片机器上。在生产环境中分片的片键可要好好设置，这个影响到了怎么把数据均匀分到多个 分片机器上，不要出现其中一台机器分了1T，其他机器没有分到的情况，这样还不如不分片！ <strong>replica set</strong>，上两节已经详细讲过了这个东东，怎么这里又来凑热闹！其实上图4个分片如果 没有 replica set 是个不完整架构，假设其中的一个分片挂掉那四分之一的数据就丢失了，所以在高可用性的分片架构还需要对于每一个分片构建 replica set 副本集保证分片的可靠性。生产环境通常是 2个副本 + 1个仲裁。</p><h2 id="准备开始"><a class="markdownIt-Anchor" href="#准备开始"></a> 准备开始</h2><p>现在有3台机器，首先看一下集群的磁盘部署</p><p>[root@new-cdh18 ~]# df -h<br />Filesystem            Size  Used Avail Use% Mounted on<br />/dev/mapper/vg_newcdh3-lv_root<br />1011G  6.2G  953G   1% /<br />tmpfs                 3.9G     0  3.9G   0% /dev/shm<br />/dev/sdc1             477M   50M  402M  12% /boot<br />/dev/mapper/vg_newcdh3-lv_home<br />2.2T   73M  2.1T   1% /home<br />cm_processes          3.9G  824K  3.9G   1% /opt/cm-5.4.0/run/cloudera-scm-agent/process</p><p>发现大部分磁盘空间挂载在/home,于是决定把数据库放在/home下。 首先改变mongod 用户的home，把它挂载到 /home 下。</p><p>[root@new-cdh18 ~]# service mongod stop<br />Stopping mongod:                                           [  OK  ]<br />[root@new-cdh18 ~]# usermod -d  /home/mongod/ -u 478 mongod<br />[root@new-cdh18 ~]# cat /etc/passwd<br />root❌0:0:root:/root:/bin/bash<br />…<br />…<br />…<br />mongod❌478:477:mongod:/home/mongod/:/bin/false</p><h3 id="mongo-不建议使用root-用户进行操作以后准备使用mongod用户进行操作修改sh-和密码修改成-可使用的用户每台机器都修改"><a class="markdownIt-Anchor" href="#mongo-不建议使用root-用户进行操作以后准备使用mongod用户进行操作修改sh-和密码修改成-可使用的用户每台机器都修改"></a> mongo 不建议使用root 用户进行操作，以后准备使用mongod用户进行操作，修改sh 和密码，修改成 可使用的用户（每台机器都修改）</h3><p>[root@new-cdh20 ~]# chsh -s /bin/bash mongod<br />Changing shell for mongod.<br />Shell changed.<br />[root@new-cdh20 ~]# passwd mongod<br />[root@new-cdh20 ~]# su mongod<br />bash-4.1$ cat &gt; /home/mongod/.bashrc &lt;&lt;EOF<br />&gt; # .bashrc</p><blockquote></blockquote><p>&gt; # Source global definitions<br />&gt; if [ -f /etc/bashrc ]; then<br />&gt; . /etc/bashrc<br />&gt; fi</p><blockquote></blockquote><p>&gt; # User specific aliases and functions<br />&gt; EOF<br />bash-4.1$ cat &gt; /home/mongod/.bash_profile &lt;&lt;EOF<br />&gt; # .bash_profile</p><blockquote></blockquote><p>&gt; # Get the aliases and functions<br />&gt; if [ -f ~/.bashrc ]; then<br />&gt; . ~/.bashrc<br />&gt; fi</p><blockquote></blockquote><p>&gt; # User specific environment and startup programs</p><blockquote></blockquote><p>&gt; PATH=<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mi>A</mi><mi>T</mi><mi>H</mi><mo>:</mo></mrow><annotation encoding="application/x-tex">PATH:</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span></span></span>HOME/bin</p><blockquote></blockquote><p>&gt; export PATH<br />&gt; EOF<br />bash-4.1$ source /etc/profile<br />bash-4.1$ source .bash_profile<br />[mongod@new-cdh18 mongod]$ ll<br />total 24<br />drwxr-xr-x 3 mongod mongod 4096 May 9 10:23 config<br />drwxr-xr-x 8 mongod mongod 4096 May 9 10:59 mongodb<br />drwxr-xr-x 3 mongod mongod 4096 May 9 10:17 mongos<br />drwxr-xr-x 4 mongod mongod 4096 May 9 10:33 shard1<br />drwxr-xr-x 4 mongod mongod 4096 May 9 10:36 shard2<br />drwxr-xr-x 4 mongod mongod 4096 May 9 10:37 shard3</p><h3 id="系统配置"><a class="markdownIt-Anchor" href="#系统配置"></a> 系统配置</h3><p>软件环境： OS：Oracle Linux 6.7 MongoDB:mongodb3.2.6 配置hosts：追加到hosts</p><p>…<br />192.168.36.18 new-cdh18 mongo1<br />192.168.36.19 new-cdh19 mongo2<br />192.168.36.20 new-cdh20 mongo3</p><h2 id="开始部署"><a class="markdownIt-Anchor" href="#开始部署"></a> 开始部署</h2><h4 id="1-创建文件夹和配置文件"><a class="markdownIt-Anchor" href="#1-创建文件夹和配置文件"></a> 1、创建文件夹和配置文件。</h4><p><strong>mongo1:</strong></p><p>#创建数据节点<br />[mongod@new-cdh18 ~]# mkdir -p /home/mongod/mongodb/shard11<br />[mongod@new-cdh18 ~]# cat &gt; /home/mongod/mongodb/shard11/shard11.conf &lt;&lt;EOF<br />&gt; shardsvr=true<br />&gt; replSet=shard1<br />&gt; port=28017<br />&gt; dbpath=/home/mongod/mongodb/shard11<br />&gt; oplogSize=2048<br />&gt; logpath=/home/mongod/mongodb/shard11/shard11.log<br />&gt; logappend=true<br />&gt; fork=true<br />&gt; rest=true<br />&gt; httpinterface=true<br />&gt; nojournal = true<br />&gt; EOF<br />[mongod@new-cdh18 ~]# mkdir -p /home/mongod/mongodb/shard21<br />[mongod@new-cdh18 ~]# cat &gt; /home/mongod/mongodb/shard21/shard21.conf &lt;&lt;EOF<br />&gt; shardsvr=true<br />&gt; replSet=shard2<br />&gt; port=28018<br />&gt; dbpath=/home/mongod/mongodb/shard21<br />&gt; oplogSize=2048<br />&gt; logpath=/home/mongod/mongodb/shard21/shard21.log<br />&gt; logappend=true<br />&gt; fork=true<br />&gt; rest=true<br />&gt; httpinterface=true<br />&gt; nojournal = true<br />&gt; EOF</p><p>#创建仲裁节点<br />[mongod@new-cdh18 ~]# mkdir -p /home/mongod/mongodb/arbiter1<br />[mongod@new-cdh18 ~]# cat &gt; /home/mongod/mongodb/arbiter1/arbiter1.conf &lt;&lt;EOF<br />&gt; shardsvr=true<br />&gt; replSet=shard1<br />&gt; port=28031<br />&gt; dbpath=/home/mongod/mongodb/arbiter1<br />&gt; oplogSize=100<br />&gt; logpath=/home/mongod/mongodb/arbiter1/arbiter1.log<br />&gt; logappend=true<br />&gt; fork=true<br />&gt; rest=true<br />&gt; httpinterface=true<br />&gt; nojournal = true<br />&gt; EOF<br />[mongod@new-cdh18 ~]# mkdir -p /home/mongod/mongodb/arbiter2<br />[mongod@new-cdh18 ~]# cat &gt; /home/mongod/mongodb/arbiter2/arbiter2.conf &lt;&lt;EOF<br />&gt; shardsvr=true<br />&gt; replSet=shard2<br />&gt; port=28032<br />&gt; dbpath=/home/mongod/mongodb/arbiter2<br />&gt; oplogSize=100<br />&gt; logpath=/home/mongod/mongodb/arbiter2/arbiter2.log<br />&gt; logappend=true<br />&gt; fork=true<br />&gt; rest=true<br />&gt; httpinterface=true<br />&gt; nojournal = true<br />&gt; EOF</p><p>#创建配置节点<br />[mongod@new-cdh18 ~]# mkdir -p /home/mongod/mongodb/config/<br />[mongod@new-cdh18 ~]# cat &gt; /home/mongod/mongodb/config/config1.conf &lt;&lt;EOF<br />&gt; configsvr=true<br />&gt; dbpath=/home/mongod/mongodb/config/<br />&gt; port=20000<br />&gt; logpath=/home/mongod/mongodb/config/config1.log<br />&gt; logappend=true<br />&gt; fork=true<br />&gt; httpinterface=true<br />&gt; #nojournal=true<br />&gt; EOF</p><p>#创建路由节点<br />[mongod@new-cdh18 ~]# mkdir -p /home/mongod/mongodb/mongos<br />[mongod@new-cdh18 ~]# cat &gt; /home/mongod/mongodb/mongos/mongos1.conf &lt;&lt;EOF<br />&gt; configdb=mongo1:20000,mongo2:20000,mongo3:20000<br />&gt; port=28885<br />&gt; chunkSize=100<br />&gt; logpath=/home/mongod/mongodb/mongos/mongos1.log<br />&gt; logappend=true<br />&gt; fork=true<br />&gt; EOF<br />[mongod@new-cdh18 ~]#</p><p><strong>mongo2:</strong></p><p>#创建数据节点<br />[mongod@new-cdh19 ~]# mkdir -p /home/mongod/mongodb/shard12<br />[mongod@new-cdh19 ~]# cat &gt; /home/mongod/mongodb/shard12/shard12.conf &lt;&lt;EOF<br />&gt; shardsvr=true<br />&gt; replSet=shard1<br />&gt; port=28017<br />&gt; dbpath=/home/mongod/mongodb/shard12<br />&gt; oplogSize=2048<br />&gt; logpath=/home/mongod/mongodb/shard12/shard12.log<br />&gt; logappend=true<br />&gt; fork=true<br />&gt; rest=true<br />&gt; httpinterface=true<br />&gt; nojournal = true<br />&gt; EOF<br />[mongod@new-cdh19 ~]# mkdir -p /home/mongod/mongodb/shard22<br />[mongod@new-cdh19 ~]# cat &gt; /home/mongod/mongodb/shard22/shard22.conf &lt;&lt;EOF<br />&gt; shardsvr=true<br />&gt; replSet=shard2<br />&gt; port=28018<br />&gt; dbpath=/home/mongod/mongodb/shard22<br />&gt; oplogSize=2048<br />&gt; logpath=/home/mongod/mongodb/shard22/shard22.log<br />&gt; logappend=true<br />&gt; fork=true<br />&gt; rest=true<br />&gt; httpinterface=true<br />&gt; nojournal = true<br />&gt; EOF</p><p>#创建仲裁节点<br />[mongod@new-cdh19 ~]# mkdir -p /home/mongod/mongodb/arbiter1<br />[mongod@new-cdh19 ~]# cat &gt; /home/mongod/mongodb/arbiter1/arbiter1.conf&lt;&lt;EOF<br />&gt; shardsvr=true<br />&gt; replSet=shard1<br />&gt; port=28031<br />&gt; dbpath=/home/mongod/mongodb/arbiter1<br />&gt; oplogSize=100<br />&gt; logpath=/home/mongod/mongodb/arbiter1/arbiter1.log<br />&gt; logappend=true<br />&gt; fork=true<br />&gt; rest=true<br />&gt; httpinterface=true<br />&gt; nojournal = true<br />&gt; EOF<br />[mongod@new-cdh19 ~]# mkdir -p /home/mongod/mongodb/arbiter2<br />[momgod@new-cdh19 ~]# cat &gt; /home/mongod/mongodb/arbiter2/arbiter2.conf &lt;&lt;EOF<br />&gt; shardsvr=true<br />&gt; replSet=shard2<br />&gt; port=28032<br />&gt; dbpath=/home/mongod/mongodb/arbiter2<br />&gt; oplogSize=100<br />&gt; logpath=/home/mongod/mongodb/arbiter2/arbiter2.log<br />&gt; logappend=true<br />&gt; fork=true<br />&gt; rest=true<br />&gt; httpinterface=true<br />&gt; nojournal = true<br />&gt; EOF</p><p>#创建配置节点<br />[mongod@new-cdh19 ~]# mkdir -p /home/mongod/mongodb/config/<br />[mongod@new-cdh19 ~]# cat &gt; /home/mongod/mongodb/config/config2.conf &lt;&lt;EOF<br />&gt; configsvr=true<br />&gt; dbpath=/home/mongod/mongodb/config/<br />&gt; port=20000<br />&gt; logpath=/home/mongod/mongodb/config/config2.log<br />&gt; logappend=true<br />&gt; fork=true<br />&gt; #nojournal = true<br />&gt; EOF</p><p>#创建路由节点<br />[mongod@new-cdh19 ~]# mkdir -p /home/mongod/mongodb/mongos<br />[mongod@new-cdh19 ~]# cat &gt;/home/mongod/mongodb/mongos/mongos2.conf &lt;&lt;EOF<br />&gt; configdb=mongo1:20000,mongo2:20000,mongo3:20000<br />&gt; port=28885<br />&gt; chunkSize=100<br />&gt; logpath=/home/mongod/mongodb/mongos/mongos2.log<br />&gt; logappend=true<br />&gt; fork=true<br />&gt; EOF<br />[mongod@new-cdh19 ~]#</p><p><strong>mongo3:</strong></p><p>#创建数据节点<br />[mongod@new-cdh20 ~]# mkdir -p /home/mongod/mongodb/shard13<br />[mongod@new-cdh20 ~]# cat &gt; /home/mongod/mongodb/shard13/shard13.conf &lt;&lt;EOF<br />&gt; shardsvr=true<br />&gt; replSet=shard1<br />&gt; port=28017<br />&gt; dbpath=/home/mongod/mongodb/shard13<br />&gt; oplogSize=2048<br />&gt; logpath=/home/mongod/mongodb/shard13/shard13.log<br />&gt; logappend=true<br />&gt; fork=true<br />&gt; rest=true<br />&gt; httpinterface=true<br />&gt; nojournal = true<br />&gt; EOF<br />[mongod@new-cdh20 ~]# mkdir -p /home/mongod/mongodb/shard23<br />[mongod@new-cdh20 ~]# cat &gt; /home/mongod/mongodb/shard23/shard23.conf &lt;&lt;EOF<br />&gt; shardsvr=true<br />&gt; replSet=shard2<br />&gt; port=28018<br />&gt; dbpath=/home/mongod/mongodb/shard23<br />&gt; oplogSize=2048<br />&gt; logpath=/home/mongod/mongodb/shard23/shard23.log<br />&gt; logappend=true<br />&gt; fork=true<br />&gt; rest=true<br />&gt; httpinterface=true<br />&gt; nojournal = true<br />&gt; EOF</p><p>#创建仲裁节点<br />[mongod@new-cdh20 ~]# mkdir -p /home/mongod/mongodb/arbiter1<br />[mongod@new-cdh20 ~]# cat &gt; /home/mongod/mongodb/arbiter1/arbiter1.conf&lt;&lt;EOF<br />&gt; shardsvr=true<br />&gt; replSet=shard1<br />&gt; port=28031<br />&gt; dbpath=/home/mongod/mongodb/arbiter1<br />&gt; oplogSize=100<br />&gt; logpath=/home/mongod/mongodb/arbiter1/arbiter1.log<br />&gt; logappend=true<br />&gt; fork=true<br />&gt; rest=true<br />&gt; httpinterface=true<br />&gt; nojournal = true<br />&gt; EOF<br />[mongod@new-cdh20 ~]# mkdir -p /home/mongod/mongodb/arbiter2<br />[mongod@new-cdh20 ~]# cat &gt; /home/mongod/mongodb/arbiter2/arbiter2.conf &lt;&lt;EOF<br />&gt; shardsvr=true<br />&gt; replSet=shard2<br />&gt; port=28032<br />&gt; dbpath=/home/mongod/mongodb/arbiter2<br />&gt; oplogSize=100<br />&gt; logpath=/home/mongod/mongodb/arbiter2/arbiter2.log<br />&gt; logappend=true<br />&gt; fork=true<br />&gt; rest=true<br />&gt; httpinterface=true<br />&gt; nojournal = true<br />&gt; EOF</p><p>#创建配置节点<br />[mongod@new-cdh20 ~]# mkdir -p /home/mongod/mongodb/config/<br />[mongod@new-cdh20 ~]# cat &gt; /home/mongod/mongodb/config/config3.conf &lt;&lt;EOF<br />&gt; configsvr=true<br />&gt; dbpath=/home/mongod/mongodb/config/<br />&gt; port=20000<br />&gt; logpath=/home/mongod/mongodb/config/config3.log<br />&gt; logappend=true<br />&gt; fork=true<br />&gt; #nojournal = true<br />&gt; EOF</p><p>#创建路由节点<br />[mongod@new-cdh20 ~]# mkdir -p /home/mongod/mongodb/mongos<br />[mongod@new-cdh20 ~]# cat &gt;/home/mongod/mongodb/mongos/mongos3.conf &lt;&lt;EOF<br />&gt; configdb=mongo1:20000,mongo2:20000,mongo3:20000<br />&gt; port=28885<br />&gt; chunkSize=100<br />&gt; logpath=/home/mongod/mongodb/mongos/mongos3.log<br />&gt; logappend=true<br />&gt; fork=true<br />&gt; EOF<br />[root@new-cdh20 ~]#</p><h2 id="启动服务"><a class="markdownIt-Anchor" href="#启动服务"></a> 启动服务。</h2><p>在mongo1,mongo2,mongo3启动shard1、shard2、arbiter1、arbiter2服务 <strong>mongo1:</strong></p><p>[mongod@new-cdh18 ~]# mongod --config /home/mongod/mongodb/shard11/shard11.conf<br />about to fork child process, waiting until server is ready for connections.<br />forked process: 27178<br />child process started successfully, parent exiting<br />[mongod@new-cdh18 ~]# mongod --config /home/mongod/mongodb/shard21/shard21.conf<br />about to fork child process, waiting until server is ready for connections.<br />forked process: 27200<br />child process started successfully, parent exiting<br />[mongod@new-cdh18 ~]# mongod --config /home/mongod/mongodb/arbiter1/arbiter1.conf<br />about to fork child process, waiting until server is ready for connections.<br />forked process: 27221<br />child process started successfully, parent exiting<br />[mongod@new-cdh18 ~]# mongod --config /home/mongod/mongodb/arbiter2/arbiter2.conf<br />about to fork child process, waiting until server is ready for connections.<br />forked process: 27242<br />child process started successfully, parent exiting<br />[mongod@new-cdh18 ~]# mongod --config /home/mongod/mongodb/config/config1.conf<br />about to fork child process, waiting until server is ready for connections.<br />forked process: 27279<br />child process started successfully, parent exiting<br />[mongod@new-cdh18 ~]#</p><p><strong>mongo2:</strong></p><p>[mongod@new-cdh19 ~]# mongod --config /home/mongod/mongodb/shard12/shard12.conf<br />about to fork child process, waiting until server is ready for connections.<br />forked process: 27227<br />child process started successfully, parent exiting<br />[mongod@new-cdh19 ~]# mongod --config /home/mongod/mongodb/shard22/shard22.conf<br />about to fork child process, waiting until server is ready for connections.<br />forked process: 27264<br />child process started successfully, parent exiting<br />[mongod@new-cdh19 ~]# mongod --config /home/mongod/mongodb/arbiter1/arbiter1.conf<br />about to fork child process, waiting until server is ready for connections.<br />forked process: 27336<br />child process started successfully, parent exiting<br />[mongod@new-cdh19 ~]# mongod --config /home/mongod/mongodb/arbiter2/arbiter2.conf<br />about to fork child process, waiting until server is ready for connections.<br />forked process: 27357<br />child process started successfully, parent exiting<br />[mongod@new-cdh19 ~]# mongod --config /home/mongod/mongodb/config/config2.conf<br />about to fork child process, waiting until server is ready for connections.<br />forked process: 27378<br />child process started successfully, parent exiting<br />[mongod@new-cdh19 ~]#</p><p><strong>mongo3:</strong></p><p>[mongod@new-cdh20 ~]# mongod --config /home/mongod/mongodb/shard13/shard13.conf<br />about to fork child process, waiting until server is ready for connections.<br />forked process: 27249<br />child process started successfully, parent exiting<br />[mongod@new-cdh20 ~]# mongod --config /home/mongod/mongodb/shard23/shard23.conf<br />about to fork child process, waiting until server is ready for connections.<br />forked process: 27271<br />child process started successfully, parent exiting<br />[mongod@new-cdh20 ~]# mongod --config /home/mongod/mongodb/arbiter1/arbiter1.conf<br />about to fork child process, waiting until server is ready for connections.<br />forked process: 27292<br />child process started successfully, parent exiting<br />[mongod@new-cdh20 ~]# mongod --config /home/mongod/mongodb/arbiter2/arbiter2.conf<br />about to fork child process, waiting until server is ready for connections.<br />forked process: 27313<br />child process started successfully, parent exiting<br />[mongod@new-cdh20 ~]# mongod --config /home/mongod/mongodb/config/config3.conf<br />about to fork child process, waiting until server is ready for connections.<br />forked process: 27334<br />child process started successfully, parent exiting<br />[mongod@new-cdh20 ~]#</p><p>然后在mongo1、mongo2、mongo3上分别启动mongos服务 <strong>mongo1:</strong></p><p>[mongod@new-cdh18 ~]# mongos --config /home/mongod/mongodb/mongos/mongos1.conf<br />about to fork child process, waiting until server is ready for connections.<br />forked process: 27616<br />child process started successfully, parent exiting</p><p><strong>mongo2:</strong></p><p>[mongod@new-cdh19 ~]# mongos --config /home/mongod/mongodb/mongos/mongos2.conf<br />about to fork child process, waiting until server is ready for connections.<br />forked process: 27521<br />child process started successfully, parent exiting</p><p><strong>mongo3:</strong></p><p>[mongod@new-cdh20 ~]# mongos --config /home/mongod/mongodb/mongos/mongos3.conf<br />about to fork child process, waiting until server is ready for connections.<br />forked process: 27450<br />child process started successfully, parent exiting</p><h2 id="配置分片副本集"><a class="markdownIt-Anchor" href="#配置分片副本集"></a> 配置分片副本集</h2><p>任意登陆一个机器，比如登陆mongo1，连接mongodb</p><h4 id="创建第一个分片副本集"><a class="markdownIt-Anchor" href="#创建第一个分片副本集"></a> 创建第一个分片副本集</h4><p>[mongod@new-cdh18 mongod]$ mongo mongo1:28017/admin<br />MongoDB shell version: 3.2.6<br />connecting to: mongo1:28017/admin<br />&gt; config = {_id: “shard1”, members:[<br />…                      {_id: 0, host:“mongo1:28017”},<br />…                      {_id: 1, host:“mongo2:28017”},<br />…                      {_id: 2, host:“mongo3:28017”,slaveDelay : 7200, priority:0},<br />…                      {_id: 3, host:“mongo1:28031”, arbiterOnly : true},<br />…                      {_id: 4, host:“mongo2:28031”, arbiterOnly : true},<br />…                      {_id: 5, host:“mongo3:28031”, arbiterOnly : true}<br />…               ]<br />… };<br />{<br />“_id” : “shard1”,<br />“members” : [<br />{<br />“_id” : 0,<br />“host” : “mongo1:28017”<br />},<br />{<br />“_id” : 1,<br />“host” : “mongo2:28017”<br />},<br />{<br />“_id” : 2,<br />“host” : “mongo3:28017”,<br />“slaveDelay” : 7200,<br />“priority” : 0<br />},<br />{<br />“_id” : 3,<br />“host” : “mongo1:28031”,<br />“arbiterOnly” : true<br />},<br />{<br />“_id” : 4,<br />“host” : “mongo2:28031”,<br />“arbiterOnly” : true<br />},<br />{<br />“_id” : 5,<br />“host” : “mongo3:28031”,<br />“arbiterOnly” : true<br />}<br />]<br />}<br />&gt; rs.initiate(config);<br />{ “ok” : 1 }<br />shard1:OTHER&gt;<br />shard1:SECONDARY&gt;<br />shard1:PRIMARY&gt;<br />shard1:PRIMARY&gt;</p><h4 id="创建第二个分片副本集"><a class="markdownIt-Anchor" href="#创建第二个分片副本集"></a> 创建第二个分片副本集</h4><p>[mongod@new-cdh18 mongod]$ mongo mongo1:28018/admin<br />MongoDB shell version: 3.2.6<br />connecting to: mongo1:28018/admin<br />&gt; config = {_id: “shard2”, members:[<br />…                      {_id: 0, host:“mongo1:28018”},<br />…                      {_id: 1, host:“mongo2:28018”},<br />…                      {_id: 2, host:“mongo3:28018”,slaveDelay : 7200, priority:0},<br />…                      {_id: 3, host:“mongo1:28032”, arbiterOnly : true},<br />…                      {_id: 4, host:“mongo2:28032”, arbiterOnly : true},<br />…                      {_id: 5, host:“mongo3:28032”, arbiterOnly : true}<br />…               ]<br />… };<br />{<br />“_id” : “shard2”,<br />“members” : [<br />{<br />“_id” : 0,<br />“host” : “mongo1:28018”<br />},<br />{<br />“_id” : 1,<br />“host” : “mongo2:28018”<br />},<br />{<br />“_id” : 2,<br />“host” : “mongo3:28018”,<br />“slaveDelay” : 7200,<br />“priority” : 0<br />},<br />{<br />“_id” : 3,<br />“host” : “mongo1:28032”,<br />“arbiterOnly” : true<br />},<br />{<br />“_id” : 4,<br />“host” : “mongo2:28032”,<br />“arbiterOnly” : true<br />},<br />{<br />“_id” : 5,<br />“host” : “mongo3:28032”,<br />“arbiterOnly” : true<br />}<br />]<br />}<br />&gt; rs.initiate(config);<br />{ “ok” : 1 }<br />shard2:OTHER&gt;<br />shard2:SECONDARY&gt;<br />shard2:SECONDARY&gt;</p><h4 id="串联路由服务器与分配副本集"><a class="markdownIt-Anchor" href="#串联路由服务器与分配副本集"></a> 串联路由服务器与分配副本集</h4><p>[mongod@new-cdh18 mongod]$ mongo mongo2:28885/admin<br />MongoDB shell version: 3.2.6<br />connecting to: mongo2:28885/admin<br />mongos&gt; db.runCommand({“addshard” :“shard1/mongo1:28017,mongo2:28017”})<br />{ “shardAdded” : “shard1”, “ok” : 1 }<br />mongos&gt; db.runCommand({“addshard” :“shard2/mongo2:28018,mongo1:28018”})<br />{ “shardAdded” : “shard2”, “ok” : 1 }<br />mongos&gt;</p><p>因为mongo3:28017和mongo3:28018是延迟节点，所以不在副本集当中</p><h4 id="查看分片服务器的配置"><a class="markdownIt-Anchor" href="#查看分片服务器的配置"></a> 查看分片服务器的配置</h4><p>mongos&gt; db.runCommand( { listshards : 1 } );<br />{<br />“shards” : [<br />{<br />“_id” : “shard1”,<br />“host” : “shard1/mongo1:28017,mongo2:28017”<br />},<br />{<br />“_id” : “shard2”,<br />“host” : “shard2/mongo1:28018,mongo2:28018”<br />}<br />],<br />“ok” : 1<br />}<br />mongos&gt;</p><h2 id="测试分片副本集"><a class="markdownIt-Anchor" href="#测试分片副本集"></a> 测试分片副本集</h2><p>指定分片库、分片集合和片键</p><p>mongos&gt; db.runCommand( { “enablesharding”: “testdb”})<br />{ “ok” : 1 }<br />mongos&gt; db.runCommand( { shardcollection : “testdb.step”,key: {_id: 1} } )<br />{ “collectionsharded” : “testdb.step”, “ok” : 1 }<br />mongos&gt;</p><p>end</p>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
          <category> mongodb </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>稀疏数组</title>
      <link href="2016/05/08/sparsearray/"/>
      <url>2016/05/08/sparsearray/</url>
      
        <content type="html"><![CDATA[<p>​稀疏数组是对普通数组的压缩方法，当普通数组的重复元素占用绝大多数的时候，我们可以使用稀疏数组的方式存储，可以极大的节约内存，压缩存储可以提高IO效率。比如五子棋的棋盘，象棋的残局等。</p><h2 id="一-存储方式对比"><a class="markdownIt-Anchor" href="#一-存储方式对比"></a> 一、存储方式对比</h2><h3 id="普通数组"><a class="markdownIt-Anchor" href="#普通数组"></a> 普通数组</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">00000000</span><br><span class="line">00100000</span><br><span class="line">00020000</span><br><span class="line">00000000</span><br><span class="line">00000200</span><br><span class="line">00000000</span><br><span class="line">00000000</span><br><span class="line">00000000</span><br></pre></td></tr></table></figure><h3 id="稀疏数组"><a class="markdownIt-Anchor" href="#稀疏数组"></a> 稀疏数组</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">883</span><br><span class="line">121</span><br><span class="line">232</span><br><span class="line">452</span><br></pre></td></tr></table></figure><h2 id="二-稀疏数组"><a class="markdownIt-Anchor" href="#二-稀疏数组"></a> 二、稀疏数组</h2><p>​存储方法：</p><p>​第一行 记录有几行几列，有多少不同值。</p><p>​其余行记录每个不同值所在的行数、列数和值。</p><p>代码实现：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.jsledd.sparsearray;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Collections;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> 1.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span> : SparseArray</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span> : 稀疏数组</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> : JSLEDD</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span>: 2016-06-01 17:58</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SparseArray</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//创建一个简单的二维数组</span></span><br><span class="line">        <span class="keyword">int</span> array[][] = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">8</span>][<span class="number">8</span>];</span><br><span class="line">        array[<span class="number">1</span>][<span class="number">2</span>] = <span class="number">1</span>;</span><br><span class="line">        array[<span class="number">2</span>][<span class="number">3</span>] = <span class="number">2</span>;</span><br><span class="line">        array[<span class="number">4</span>][<span class="number">5</span>] = <span class="number">2</span>;</span><br><span class="line">        <span class="comment">// 输出原始的二维数组</span></span><br><span class="line">        System.out.println(<span class="string">&quot;原始的二维数组~~&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span>[] row : array) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> data : row) &#123;</span><br><span class="line">                System.out.printf(<span class="string">&quot;%d\t&quot;</span>, data);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//转换成稀疏数组</span></span><br><span class="line">        <span class="keyword">int</span>[][] sparseArray = convertToSparseArray(array);</span><br><span class="line">        <span class="comment">//打印转换后的稀疏数组</span></span><br><span class="line">        System.out.println(<span class="string">&quot;二维数组转成的稀疏数组~~&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span>[] row : sparseArray) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> data : row) &#123;</span><br><span class="line">                System.out.printf(<span class="string">&quot;%d\t&quot;</span>, data);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//稀疏数组还原成普通数组</span></span><br><span class="line">        System.out.println(<span class="string">&quot;稀疏数组还原成普通数组~~&quot;</span>);</span><br><span class="line">        <span class="keyword">int</span>[][] array2 = convertToArrayfromSparseArray(sparseArray);</span><br><span class="line">        <span class="comment">//打印转换后的稀疏数组</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span>[] row : array2) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> data : row) &#123;</span><br><span class="line">                System.out.printf(<span class="string">&quot;%d\t&quot;</span>, data);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> array 普通的数组</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> int[][]</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@description</span> 将普通的数组转换成稀疏数组</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> JSLEDD</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@date</span> 2016/1/1 18:42</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span>[][] convertToSparseArray(<span class="keyword">int</span>[][] array) &#123;</span><br><span class="line">        <span class="comment">//得到非0数据</span></span><br><span class="line">        <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; array.length; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; array[i].length; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (array[i][j] != <span class="number">0</span>) &#123;</span><br><span class="line">                    sum++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//创建稀疏数组</span></span><br><span class="line">        <span class="keyword">int</span>[][] sparseArray = <span class="keyword">new</span> <span class="keyword">int</span>[sum + <span class="number">1</span>][<span class="number">3</span>];</span><br><span class="line">        <span class="comment">//给稀疏数组赋值</span></span><br><span class="line">        sparseArray[<span class="number">0</span>][<span class="number">0</span>] = array.length;</span><br><span class="line">        sparseArray[<span class="number">0</span>][<span class="number">1</span>] = array[<span class="number">0</span>].length;</span><br><span class="line">        sparseArray[<span class="number">0</span>][<span class="number">2</span>] = sum;</span><br><span class="line">        <span class="comment">//将非0的数放入稀疏数组</span></span><br><span class="line">        <span class="comment">//count：标识第几个非0数</span></span><br><span class="line">        <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; array.length; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; array[i].length; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (array[i][j] != <span class="number">0</span>) &#123;</span><br><span class="line">                    count++;</span><br><span class="line">                    sparseArray[count][<span class="number">0</span>] = i;</span><br><span class="line">                    sparseArray[count][<span class="number">1</span>] = j;</span><br><span class="line">                    sparseArray[count][<span class="number">2</span>] = array[i][j];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> sparseArray;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> sparseArray  稀疏数组</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@description</span> 将稀疏数组还原成普通的数组</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> JSLEDD</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@date</span> 2016/1/1 19:36</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> int[][]</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span>[][] convertToArrayfromSparseArray(<span class="keyword">int</span>[][] sparseArray)&#123;</span><br><span class="line">        <span class="keyword">int</span> rowlength = sparseArray[<span class="number">0</span>][<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">int</span> collength = sparseArray[<span class="number">0</span>][<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">int</span> [][] array = <span class="keyword">new</span> <span class="keyword">int</span>[rowlength][collength];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; sparseArray.length; i++) &#123;</span><br><span class="line">            <span class="keyword">int</span> [] row = sparseArray[i];</span><br><span class="line">            array[row[<span class="number">0</span>]][row[<span class="number">1</span>]] = row[<span class="number">2</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> array;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数据结构与算法 </category>
          
          <category> 数组 </category>
          
          <category> 稀疏数组 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数组 </tag>
            
            <tag> 数据结构与算法 </tag>
            
            <tag> 稀疏数组 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Google Guava 在scala 的使用-字符串的使用</title>
      <link href="2016/05/06/google-guava-scala-string-1/"/>
      <url>2016/05/06/google-guava-scala-string-1/</url>
      
        <content type="html"><![CDATA[<p>很久没有使用过 Google Guava的,在这里做一个总结，准备做一个系列。能想到哪里就写到哪里吧。先写一下对字符串的处理。开始~~~~</p><p>package com.cmcc.family.utils</p><p>import com.google.common.base.Strings<br />import com.google.common.base.Splitter<br />import com.google.common.base.Joiner<br />import com.google.common.base.CharMatcher<br />/**<br />* Guava 字符串操作举例<br />* @author jingshuai<br />* @date 2016-05-06<br />*/<br />object GuavaString {<br />//字符串处理<br />def stringIsNullOrEmpty {<br />println(Strings.isNullOrEmpty(“jingshuai”)); //false<br />println(Strings.isNullOrEmpty(&quot;&quot;)); //true<br />println(Strings.isNullOrEmpty(null)); //true<br />}<br />//截取相同 前缀 和后缀<br />def stringCommonPrefixOrSuffix {<br />val a = “hi,小菜鸟,<a href="http://www.jsledd.cn">www.jsledd.cn</a>”<br />val b = “hi,diudiu,<a href="http://www.jsledd.cn">www.jsledd.cn</a>”<br />println(“前缀：” + Strings.commonPrefix(a, b)); //hi,<br />println(“后缀：” + Strings.commonSuffix(a, b)); //,<a href="http://www.jsledd.cn">www.jsledd.cn</a><br />}<br />//字符串补全<br />def stringPad {<br />val minLength = 5<br />println(“123前补足0,共5位：” + Strings.padStart(“123”, minLength, ‘0’))<br />println(“123后补足0,共5位：” + Strings.padEnd(“123”, minLength, ‘0’))<br />}<br />//拆分字符串<br />def stringSplitter {<br />import scala.collection.JavaConverters._<br />//拆分成string<br />Splitter.onPattern(&quot;[,，]&quot;)<br />.trimResults()<br />.omitEmptyStrings()<br />.split(“diudiu,DIUDIU,丢丢，小菜鸟，<a href="http://www.jsledd.cn">www.jsledd.cn</a>”).asScala<br />.foreach((x: String) =&gt; println(x + “;”))<br />//拆分成元组<br />Splitter.onPattern(&quot;[,，]&quot;)<br />.trimResults()<br />.omitEmptyStrings()<br />.withKeyValueSeparator(&quot;=&quot;)<br />.split(“name1=diudiu,name2=DIUDIU,name3=丢丢，name4=小菜鸟，<a href="http://web=www.jsledd.cn">web=www.jsledd.cn</a>”).asScala<br />.foreach((x: (String, String)) =&gt; println(x._1 + “=” + x._2))<br />}<br />//合并字符串<br />def stringJoin {<br />//合并string<br />println(Joiner.on(&quot;,&quot;).join(“diudiu,DIUDIU”,“丢丢”,“小菜鸟”,“<a href="http://www.jsledd.cn">www.jsledd.cn</a>”))<br />Map(“name1” -&gt; “diudiu”,“name2” -&gt; “DIUDIU”,“web” -&gt; “<a href="http://www.jsledd.cn">www.jsledd.cn</a>”)<br />import scala.collection.JavaConversions.mapAsJavaMap<br />val map = Map(“name1” -&gt; “diudiu”,“name2” -&gt; “DIUDIU”,“web” -&gt; “<a href="http://www.jsledd.cn">www.jsledd.cn</a>”)<br />println(Joiner.on(&quot;,&quot;).withKeyValueSeparator(&quot;=&quot;).join(map))<br />}<br />def stringRepeat {<br />println(Strings.repeat(“name=diudiu,”, 3))<br />}<br />def main(args: Array[String]): Unit = {<br />//stringIsNullOrEmpty<br />//stringCommonPrefixOrSuffix<br />//stringPad<br />//stringSplitter<br />//stringJoin<br />stringRepeat<br />}<br />}</p>]]></content>
      
      
      <categories>
          
          <category> 开发语言与技巧 </category>
          
          <category> scala </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Google </tag>
            
            <tag> Guava </tag>
            
            <tag> scala </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用apache 作为yum 源</title>
      <link href="2016/05/04/apache-yum/"/>
      <url>2016/05/04/apache-yum/</url>
      
        <content type="html"><![CDATA[<p>昨天在安装完mongodb后，启动遇到点问题，网上一查发现是openssl 的类库比较老，不能兼容新版本，准备使用yum update 一下，但是突然想起来不能联网。而且我们最近安装的集群 系统版本比较低，综合考虑了一下，决定安装一个apache 的yum 源，方便以后安装和更新操作。</p><h5 id="1-首先下载下来-centos-的安装包和更新包等"><a class="markdownIt-Anchor" href="#1-首先下载下来-centos-的安装包和更新包等"></a> 1、首先下载下来 centos 的安装包，和更新包等</h5><p>去官网查询了一下 发现只有6.7版本以上 还在维护，于是决定更新到6.7版本。</p><p>wget -r -p -np -k -P ~/ <a href="http://mirror.centos.org/centos-6/6.7/">http://mirror.centos.org/centos-6/6.7/</a></p><p>备注：本来想使用aliyun 镜像站，但是aliyun 有限制，不能使用wget 下载目录。</p><h5 id="2-安装apache并且拷贝下载下来的文件-略"><a class="markdownIt-Anchor" href="#2-安装apache并且拷贝下载下来的文件-略"></a> 2、安装apache，并且拷贝下载下来的文件 (略)</h5><h5 id="3-修改-etcyumreposdcentos-baserepo"><a class="markdownIt-Anchor" href="#3-修改-etcyumreposdcentos-baserepo"></a> 3、修改 /etc/yum.repos.d/CentOS-Base.repo</h5><p>首先备份一下。</p><p>[root@new-cdh1 ~]# mv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.back</p><p>然后修改文件 /etc/yum.repos.d/CentOS-Base.repo</p><p>[base]<br />name=CentOS-6.7 - Base - 192.168.66.14<br />failovermethod=priority<br />baseurl=http://192.168.66.14/centos/6.7/os/<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>b</mi><mi>a</mi><mi>s</mi><mi>e</mi><mi>a</mi><mi>r</mi><mi>c</mi><mi>h</mi><mi mathvariant="normal">/</mi><mi>h</mi><mi>t</mi><mi>t</mi><mi>p</mi><mo>:</mo><mi mathvariant="normal">/</mi><mi mathvariant="normal">/</mi><mi>m</mi><mi>i</mi><mi>r</mi><mi>r</mi><mi>o</mi><mi>r</mi><mi>s</mi><mi mathvariant="normal">.</mi><mi>a</mi><mi>l</mi><mi>i</mi><mi>y</mi><mi>u</mi><mi>n</mi><mi>c</mi><mi>s</mi><mi mathvariant="normal">.</mi><mi>c</mi><mi>o</mi><mi>m</mi><mi mathvariant="normal">/</mi><mi>c</mi><mi>e</mi><mi>n</mi><mi>t</mi><mi>o</mi><mi>s</mi><mi mathvariant="normal">/</mi><mn>6.7</mn><mi mathvariant="normal">/</mi><mi>o</mi><mi>s</mi><mi mathvariant="normal">/</mi></mrow><annotation encoding="application/x-tex">basearch/        http://mirrors.aliyuncs.com/centos/6.7/os/</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">b</span><span class="mord mathdefault">a</span><span class="mord mathdefault">s</span><span class="mord mathdefault">e</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">c</span><span class="mord mathdefault">h</span><span class="mord">/</span><span class="mord mathdefault">h</span><span class="mord mathdefault">t</span><span class="mord mathdefault">t</span><span class="mord mathdefault">p</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">/</span><span class="mord">/</span><span class="mord mathdefault">m</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">s</span><span class="mord">.</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mord mathdefault">u</span><span class="mord mathdefault">n</span><span class="mord mathdefault">c</span><span class="mord mathdefault">s</span><span class="mord">.</span><span class="mord mathdefault">c</span><span class="mord mathdefault">o</span><span class="mord mathdefault">m</span><span class="mord">/</span><span class="mord mathdefault">c</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mord mathdefault">t</span><span class="mord mathdefault">o</span><span class="mord mathdefault">s</span><span class="mord">/</span><span class="mord">6</span><span class="mord">.</span><span class="mord">7</span><span class="mord">/</span><span class="mord mathdefault">o</span><span class="mord mathdefault">s</span><span class="mord">/</span></span></span></span>basearch/<br />#mirrorlist=http://mirrorlist.centos.org/?release=6.7&amp;arch=$basearch&amp;repo=os<br />gpgcheck=1<br />gpgkey=http://192.168.66.14/centos/RPM-GPG-KEY-CentOS-6</p><p>#released updates<br />[updates]<br />name=CentOS-6.7 - Updates - 192.168.66.14<br />failovermethod=priority<br />baseurl=http://192.168.66.14/centos/6.7/updates/<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>b</mi><mi>a</mi><mi>s</mi><mi>e</mi><mi>a</mi><mi>r</mi><mi>c</mi><mi>h</mi><mi mathvariant="normal">/</mi><mi>h</mi><mi>t</mi><mi>t</mi><mi>p</mi><mo>:</mo><mi mathvariant="normal">/</mi><mi mathvariant="normal">/</mi><mi>m</mi><mi>i</mi><mi>r</mi><mi>r</mi><mi>o</mi><mi>r</mi><mi>s</mi><mi mathvariant="normal">.</mi><mi>a</mi><mi>l</mi><mi>i</mi><mi>y</mi><mi>u</mi><mi>n</mi><mi>c</mi><mi>s</mi><mi mathvariant="normal">.</mi><mi>c</mi><mi>o</mi><mi>m</mi><mi mathvariant="normal">/</mi><mi>c</mi><mi>e</mi><mi>n</mi><mi>t</mi><mi>o</mi><mi>s</mi><mi mathvariant="normal">/</mi><mn>6.7</mn><mi mathvariant="normal">/</mi><mi>u</mi><mi>p</mi><mi>d</mi><mi>a</mi><mi>t</mi><mi>e</mi><mi>s</mi><mi mathvariant="normal">/</mi></mrow><annotation encoding="application/x-tex">basearch/        http://mirrors.aliyuncs.com/centos/6.7/updates/</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">b</span><span class="mord mathdefault">a</span><span class="mord mathdefault">s</span><span class="mord mathdefault">e</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">c</span><span class="mord mathdefault">h</span><span class="mord">/</span><span class="mord mathdefault">h</span><span class="mord mathdefault">t</span><span class="mord mathdefault">t</span><span class="mord mathdefault">p</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">/</span><span class="mord">/</span><span class="mord mathdefault">m</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">s</span><span class="mord">.</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mord mathdefault">u</span><span class="mord mathdefault">n</span><span class="mord mathdefault">c</span><span class="mord mathdefault">s</span><span class="mord">.</span><span class="mord mathdefault">c</span><span class="mord mathdefault">o</span><span class="mord mathdefault">m</span><span class="mord">/</span><span class="mord mathdefault">c</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mord mathdefault">t</span><span class="mord mathdefault">o</span><span class="mord mathdefault">s</span><span class="mord">/</span><span class="mord">6</span><span class="mord">.</span><span class="mord">7</span><span class="mord">/</span><span class="mord mathdefault">u</span><span class="mord mathdefault">p</span><span class="mord mathdefault">d</span><span class="mord mathdefault">a</span><span class="mord mathdefault">t</span><span class="mord mathdefault">e</span><span class="mord mathdefault">s</span><span class="mord">/</span></span></span></span>basearch/<br />#mirrorlist=http://mirrorlist.centos.org/?release=6.7&amp;arch=$basearch&amp;repo=updates<br />gpgcheck=1<br />gpgkey=http://192.168.66.14/centos/RPM-GPG-KEY-CentOS-6</p><p>#additional packages that may be useful<br />[extras]<br />name=CentOS-6.7 - Extras - 192.168.66.14<br />failovermethod=priority<br />baseurl=http://192.168.66.14/centos/6.7/extras/<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>b</mi><mi>a</mi><mi>s</mi><mi>e</mi><mi>a</mi><mi>r</mi><mi>c</mi><mi>h</mi><mi mathvariant="normal">/</mi><mi>h</mi><mi>t</mi><mi>t</mi><mi>p</mi><mo>:</mo><mi mathvariant="normal">/</mi><mi mathvariant="normal">/</mi><mi>m</mi><mi>i</mi><mi>r</mi><mi>r</mi><mi>o</mi><mi>r</mi><mi>s</mi><mi mathvariant="normal">.</mi><mi>a</mi><mi>l</mi><mi>i</mi><mi>y</mi><mi>u</mi><mi>n</mi><mi>c</mi><mi>s</mi><mi mathvariant="normal">.</mi><mi>c</mi><mi>o</mi><mi>m</mi><mi mathvariant="normal">/</mi><mi>c</mi><mi>e</mi><mi>n</mi><mi>t</mi><mi>o</mi><mi>s</mi><mi mathvariant="normal">/</mi><mn>6.7</mn><mi mathvariant="normal">/</mi><mi>e</mi><mi>x</mi><mi>t</mi><mi>r</mi><mi>a</mi><mi>s</mi><mi mathvariant="normal">/</mi></mrow><annotation encoding="application/x-tex">basearch/        http://mirrors.aliyuncs.com/centos/6.7/extras/</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">b</span><span class="mord mathdefault">a</span><span class="mord mathdefault">s</span><span class="mord mathdefault">e</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">c</span><span class="mord mathdefault">h</span><span class="mord">/</span><span class="mord mathdefault">h</span><span class="mord mathdefault">t</span><span class="mord mathdefault">t</span><span class="mord mathdefault">p</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">/</span><span class="mord">/</span><span class="mord mathdefault">m</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">s</span><span class="mord">.</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mord mathdefault">u</span><span class="mord mathdefault">n</span><span class="mord mathdefault">c</span><span class="mord mathdefault">s</span><span class="mord">.</span><span class="mord mathdefault">c</span><span class="mord mathdefault">o</span><span class="mord mathdefault">m</span><span class="mord">/</span><span class="mord mathdefault">c</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mord mathdefault">t</span><span class="mord mathdefault">o</span><span class="mord mathdefault">s</span><span class="mord">/</span><span class="mord">6</span><span class="mord">.</span><span class="mord">7</span><span class="mord">/</span><span class="mord mathdefault">e</span><span class="mord mathdefault">x</span><span class="mord mathdefault">t</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">a</span><span class="mord mathdefault">s</span><span class="mord">/</span></span></span></span>basearch/<br />#mirrorlist=http://mirrorlist.centos.org/?release=6.7&amp;arch=$basearch&amp;repo=extras<br />gpgcheck=1<br />gpgkey=http://192.168.66.14/centos/RPM-GPG-KEY-CentOS-6</p><p>#additional packages that extend functionality of existing packages<br />[centosplus]<br />name=CentOS-6.7 - Plus - 192.168.66.14<br />failovermethod=priority<br />baseurl=http://192.168.66.14/centos/6.7/centosplus/<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>b</mi><mi>a</mi><mi>s</mi><mi>e</mi><mi>a</mi><mi>r</mi><mi>c</mi><mi>h</mi><mi mathvariant="normal">/</mi><mi>h</mi><mi>t</mi><mi>t</mi><mi>p</mi><mo>:</mo><mi mathvariant="normal">/</mi><mi mathvariant="normal">/</mi><mi>m</mi><mi>i</mi><mi>r</mi><mi>r</mi><mi>o</mi><mi>r</mi><mi>s</mi><mi mathvariant="normal">.</mi><mi>a</mi><mi>l</mi><mi>i</mi><mi>y</mi><mi>u</mi><mi>n</mi><mi>c</mi><mi>s</mi><mi mathvariant="normal">.</mi><mi>c</mi><mi>o</mi><mi>m</mi><mi mathvariant="normal">/</mi><mi>c</mi><mi>e</mi><mi>n</mi><mi>t</mi><mi>o</mi><mi>s</mi><mi mathvariant="normal">/</mi><mn>6.7</mn><mi mathvariant="normal">/</mi><mi>c</mi><mi>e</mi><mi>n</mi><mi>t</mi><mi>o</mi><mi>s</mi><mi>p</mi><mi>l</mi><mi>u</mi><mi>s</mi><mi mathvariant="normal">/</mi></mrow><annotation encoding="application/x-tex">basearch/        http://mirrors.aliyuncs.com/centos/6.7/centosplus/</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">b</span><span class="mord mathdefault">a</span><span class="mord mathdefault">s</span><span class="mord mathdefault">e</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">c</span><span class="mord mathdefault">h</span><span class="mord">/</span><span class="mord mathdefault">h</span><span class="mord mathdefault">t</span><span class="mord mathdefault">t</span><span class="mord mathdefault">p</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">/</span><span class="mord">/</span><span class="mord mathdefault">m</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">s</span><span class="mord">.</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mord mathdefault">u</span><span class="mord mathdefault">n</span><span class="mord mathdefault">c</span><span class="mord mathdefault">s</span><span class="mord">.</span><span class="mord mathdefault">c</span><span class="mord mathdefault">o</span><span class="mord mathdefault">m</span><span class="mord">/</span><span class="mord mathdefault">c</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mord mathdefault">t</span><span class="mord mathdefault">o</span><span class="mord mathdefault">s</span><span class="mord">/</span><span class="mord">6</span><span class="mord">.</span><span class="mord">7</span><span class="mord">/</span><span class="mord mathdefault">c</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mord mathdefault">t</span><span class="mord mathdefault">o</span><span class="mord mathdefault">s</span><span class="mord mathdefault">p</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">u</span><span class="mord mathdefault">s</span><span class="mord">/</span></span></span></span>basearch/<br />#mirrorlist=http://mirrorlist.centos.org/?release=6.7&amp;arch=$basearch&amp;repo=centosplus<br />gpgcheck=1<br />enabled=0<br />gpgkey=http://192.168.66.14/centos/RPM-GPG-KEY-CentOS-6</p><p>#contrib - packages by Centos Users<br />[contrib]<br />name=CentOS-6.7 - Contrib - 192.168.66.14<br />failovermethod=priority<br />baseurl=http://192.168.66.14/centos/6.7/contrib/<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>b</mi><mi>a</mi><mi>s</mi><mi>e</mi><mi>a</mi><mi>r</mi><mi>c</mi><mi>h</mi><mi mathvariant="normal">/</mi><mi>h</mi><mi>t</mi><mi>t</mi><mi>p</mi><mo>:</mo><mi mathvariant="normal">/</mi><mi mathvariant="normal">/</mi><mi>m</mi><mi>i</mi><mi>r</mi><mi>r</mi><mi>o</mi><mi>r</mi><mi>s</mi><mi mathvariant="normal">.</mi><mi>a</mi><mi>l</mi><mi>i</mi><mi>y</mi><mi>u</mi><mi>n</mi><mi>c</mi><mi>s</mi><mi mathvariant="normal">.</mi><mi>c</mi><mi>o</mi><mi>m</mi><mi mathvariant="normal">/</mi><mi>c</mi><mi>e</mi><mi>n</mi><mi>t</mi><mi>o</mi><mi>s</mi><mi mathvariant="normal">/</mi><mn>6.7</mn><mi mathvariant="normal">/</mi><mi>c</mi><mi>o</mi><mi>n</mi><mi>t</mi><mi>r</mi><mi>i</mi><mi>b</mi><mi mathvariant="normal">/</mi></mrow><annotation encoding="application/x-tex">basearch/        http://mirrors.aliyuncs.com/centos/6.7/contrib/</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">b</span><span class="mord mathdefault">a</span><span class="mord mathdefault">s</span><span class="mord mathdefault">e</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">c</span><span class="mord mathdefault">h</span><span class="mord">/</span><span class="mord mathdefault">h</span><span class="mord mathdefault">t</span><span class="mord mathdefault">t</span><span class="mord mathdefault">p</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">/</span><span class="mord">/</span><span class="mord mathdefault">m</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">s</span><span class="mord">.</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mord mathdefault">u</span><span class="mord mathdefault">n</span><span class="mord mathdefault">c</span><span class="mord mathdefault">s</span><span class="mord">.</span><span class="mord mathdefault">c</span><span class="mord mathdefault">o</span><span class="mord mathdefault">m</span><span class="mord">/</span><span class="mord mathdefault">c</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mord mathdefault">t</span><span class="mord mathdefault">o</span><span class="mord mathdefault">s</span><span class="mord">/</span><span class="mord">6</span><span class="mord">.</span><span class="mord">7</span><span class="mord">/</span><span class="mord mathdefault">c</span><span class="mord mathdefault">o</span><span class="mord mathdefault">n</span><span class="mord mathdefault">t</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">i</span><span class="mord mathdefault">b</span><span class="mord">/</span></span></span></span>basearch/<br />#mirrorlist=http://mirrorlist.centos.org/?release=6.7&amp;arch=$basearch&amp;repo=contrib<br />gpgcheck=1<br />enabled=0<br />gpgkey=http://192.168.66.14/centos/RPM-GPG-KEY-CentOS-6</p><h5 id="4-测试yum"><a class="markdownIt-Anchor" href="#4-测试yum"></a> 4、测试yum</h5><p>[root@new-cdh1 ~]# yum update<br />…<br />…<br />…<br />Installed:<br />kernel.x86_64 0:2.6.32-573.22.1.el6</p><p>Dependency Installed:<br />libtasn1.x86_64 0:2.3-6.el6_5       make.x86_64 1:3.81-20.el6       p11-kit.x86_64 0:0.18.5-2.el6_5.2       p11-kit-trust.x86_64 0:0.18.5-2.el6_5.2       pkgconfig.x86_64 1:0.23-9.1.el6       shared-mime-info.x86_64 0:0.70-6.el6</p><p>Updated:<br />audit.x86_64 0:2.3.7-5.el6                                 audit-libs.x86_64 0:2.3.7-5.el6                              authconfig.x86_64 0:6.1.12-23.el6                        b43-openfwwf.noarch 0:5.2-10.el6<br />bash.x86_64 0:4.1.2-33.el6_7.1                             binutils.x86_64 0:2.20.51.0.2-5.43.el6                       ca-certificates.noarch 0:2015.2.6-65.0.1.el6_7           centos-release.x86_64 0:6-7.el6.centos.12.3<br />chkconfig.x86_64 0:1.3.49.3-5.el6_7.2                      coreutils.x86_64 0:8.4-37.el6_7.3                            coreutils-libs.x86_64 0:8.4-37.el6_7.3                   cpio.x86_64 0:2.10-12.el6_5<br />cronie.x86_64 0:1.4.4-15.el6_7.1                           cronie-anacron.x86_64 0:1.4.4-15.el6_7.1                     cryptsetup-luks.x86_64 0:1.2.0-11.el6                    cryptsetup-luks-libs.x86_64 0:1.2.0-11.el6<br />curl.x86_64 0:7.19.7-46.el6                                cyrus-sasl.x86_64 0:2.1.23-15.el6_6.2                        cyrus-sasl-lib.x86_64 0:2.1.23-15.el6_6.2                db4.x86_64 0:4.7.25-20.el6_7<br />db4-utils.x86_64 0:4.7.25-20.el6_7                         dbus-glib.x86_64 0:0.86-6.el6                                dbus-libs.x86_64 1:1.2.24-8.el6_6                        device-mapper.x86_64 0:1.02.95-3.el6_7.4<br />device-mapper-event.x86_64 0:1.02.95-3.el6_7.4             device-mapper-event-libs.x86_64 0:1.02.95-3.el6_7.4          device-mapper-libs.x86_64 0:1.02.95-3.el6_7.4            device-mapper-multipath.x86_64 0:0.4.9-87.el6<br />device-mapper-multipath-libs.x86_64 0:0.4.9-87.el6         device-mapper-persistent-data.x86_64 0:0.3.2-1.el6           dhclient.x86_64 12:4.1.1-49.P1.el6.centos                dhcp-common.x86_64 12:4.1.1-49.P1.el6.centos<br />dracut.noarch 0:004-388.el6                                dracut-kernel.noarch 0:004-388.el6                           e2fsprogs.x86_64 0:1.41.12-22.el6                        e2fsprogs-libs.x86_64 0:1.41.12-22.el6<br />efibootmgr.x86_64 0:0.5.4-13.el6                           elfutils-libelf.x86_64 0:0.161-3.el6                         ethtool.x86_64 2:3.5-6.el6                               file.x86_64 0:5.04-21.el6<br />file-libs.x86_64 0:5.04-21.el6                             gawk.x86_64 0:3.1.7-10.el6_7.3                               gdbm.x86_64 0:1.8.0-38.el6                               glib2.x86_64 0:2.28.8-4.el6<br />glibc.x86_64 0:2.12-1.166.el6_7.7                          glibc-common.x86_64 0:2.12-1.166.el6_7.7                     gnupg2.x86_64 0:2.0.14-8.el6                             grep.x86_64 0:2.20-3.el6_7.1<br />grub.x86_64 1:0.97-94.el6_7.1                              grubby.x86_64 0:7.0.15-7.el6                                 gzip.x86_64 0:1.3.12-22.el6                              hwdata.noarch 0:0.233-14.1.el6<br />initscripts.x86_64 0:9.03.49-1.el6.centos.4                iproute.x86_64 0:2.6.32-45.el6                               iptables.x86_64 0:1.4.7-16.el6                           iptables-ipv6.x86_64 0:1.4.7-16.el6<br />iputils.x86_64 0:20071127-20.el6                           iscsi-initiator-utils.x86_64 0:6.2.0.873-14.el6              kernel-firmware.noarch 0:2.6.32-573.22.1.el6             keyutils-libs.x86_64 0:1.4-5.el6<br />kpartx.x86_64 0:0.4.9-87.el6                               krb5-libs.x86_64 0:1.10.3-42z1.el6_7                         less.x86_64 0:436-13.el6                                 libblkid.x86_64 0:2.17.2-12.18.el6<br />libcom_err.x86_64 0:1.41.12-22.el6                         libcurl.x86_64 0:7.19.7-46.el6                               libdrm.x86_64 0:2.4.59-2.el6                             libgcc.x86_64 0:4.4.7-16.el6<br />libgcrypt.x86_64 0:1.4.5-11.el6_4                          libpciaccess.x86_64 0:0.13.3-0.1.el6                         libselinux.x86_64 0:2.0.94-5.8.el6                       libselinux-utils.x86_64 0:2.0.94-5.8.el6<br />libsemanage.x86_64 0:2.0.43-5.1.el6                        libss.x86_64 0:1.41.12-22.el6                                libssh2.x86_64 0:1.4.2-2.el6_7.1                         libstdc++.x86_64 0:4.4.7-16.el6<br />libudev.x86_64 0:147-2.63.el6_7.1                          libuser.x86_64 0:0.56.13-8.el6_7                             libuuid.x86_64 0:2.17.2-12.18.el6                        libxml2.x86_64 0:2.7.6-20.el6_7.1<br />logrotate.x86_64 0:3.7.8-26.el6_7                          lvm2.x86_64 0:2.02.118-3.el6_7.4                             lvm2-libs.x86_64 0:2.02.118-3.el6_7.4                    mdadm.x86_64 0:3.3.2-5.el6<br />module-init-tools.x86_64 0:3.9-25.el6                      mysql-libs.x86_64 0:5.1.73-5.el6_7.1                         ncurses.x86_64 0:5.7-4.20090207.el6                      ncurses-base.x86_64 0:5.7-4.20090207.el6<br />ncurses-libs.x86_64 0:5.7-4.20090207.el6                   nspr.x86_64 0:4.11.0-0.1.el6_7                               nss.x86_64 0:3.21.0-0.3.el6_7                            nss-softokn.x86_64 0:3.14.3-23.el6_7<br />nss-softokn-freebl.x86_64 0:3.14.3-23.el6_7                nss-sysinit.x86_64 0:3.21.0-0.3.el6_7                        nss-tools.x86_64 0:3.21.0-0.3.el6_7                      nss-util.x86_64 0:3.21.0-0.3.el6_7<br />openldap.x86_64 0:2.4.40-7.el6_7                           openssh.x86_64 0:5.3p1-114.el6_7                             openssh-clients.x86_64 0:5.3p1-114.el6_7                 openssh-server.x86_64 0:5.3p1-114.el6_7<br />openssl.x86_64 0:1.0.1e-42.el6_7.4                         pam.x86_64 0:1.1.1-20.el6_7.1                                pciutils-libs.x86_64 0:3.1.10-4.el6                      pcre.x86_64 0:7.8-7.el6<br />pinentry.x86_64 0:0.7.6-8.el6                              plymouth.x86_64 0:0.8.3-27.el6.centos.1                      plymouth-core-libs.x86_64 0:0.8.3-27.el6.centos.1        plymouth-scripts.x86_64 0:0.8.3-27.el6.centos.1<br />policycoreutils.x86_64 0:2.0.83-24.el6                     postfix.x86_64 2:2.6.6-6.el6_7.1                             procps.x86_64 0:3.2.8-35.el6_7                           psmisc.x86_64 0:22.6-19.el6_5<br />python.x86_64 0:2.6.6-64.el6                               python-libs.x86_64 0:2.6.6-64.el6                            python-urlgrabber.noarch 0:3.9.1-9.el6                   rpm.x86_64 0:4.8.0-47.el6<br />rpm-libs.x86_64 0:4.8.0-47.el6                             rpm-python.x86_64 0:4.8.0-47.el6                             rsyslog.x86_64 0:5.8.10-10.el6_6                         selinux-policy.noarch 0:3.7.19-279.el6_7.9<br />selinux-policy-targeted.noarch 0:3.7.19-279.el6_7.9        setup.noarch 0:2.8.14-20.el6_4.1                             shadow-utils.x86_64 2:4.1.4.2-19.el6_6.1                 sqlite.x86_64 0:3.6.20-1.el6_7.2<br />sudo.x86_64 0:1.8.6p3-20.el6_7                             system-config-firewall-base.noarch 0:1.2.27-7.2.el6_6        sysvinit-tools.x86_64 0:2.87-6.dsf.el6                   tar.x86_64 2:1.23-13.el6<br />tzdata.noarch 0:2016d-1.el6                                udev.x86_64 0:147-2.63.el6_7.1                               upstart.x86_64 0:0.6.5-13.el6_5.3                        util-linux-ng.x86_64 0:2.17.2-12.18.el6<br />vim-minimal.x86_64 2:7.4.629-5.el6                         xfsprogs.x86_64 0:3.1.1-16.el6                               xz-libs.x86_64 0:4.999.9-0.5.beta.20091007git.el6        yum.noarch 0:3.2.29-69.el6.centos<br />yum-plugin-fastestmirror.noarch 0:1.1.30-30.el6</p><p>Complete!</p><p>打完收工。</p>]]></content>
      
      
      <categories>
          
          <category> 系统与服务 </category>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> apache </tag>
            
            <tag> centos </tag>
            
            <tag> httpd </tag>
            
            <tag> yum </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mongodb 安装使用-安装和卸载-1</title>
      <link href="2016/05/03/mongodb-install-1/"/>
      <url>2016/05/03/mongodb-install-1/</url>
      
        <content type="html"><![CDATA[<p>最近公司使用到了 mongodb ，很久没有使用过了，记录一下安装步骤吧，方便以后安装使用。</p><h2 id="安装包说明"><a class="markdownIt-Anchor" href="#安装包说明"></a> <strong><strong>安装包说明：</strong></strong></h2><p>mongodb-org</p><p>完整包，包含下面4个安装包</p><p>mongodb-org-server</p><p>包含mongod的进程，启动配置和初始化脚本</p><p>mongodb-org-mongos</p><p>包含mongod的进程.</p><p>mongodb-org-shell</p><p>Mongo shell</p><p>mongodb-org-tools</p><p>MongoDB tools: <a href="https://docs.mongodb.org/manual/reference/program/mongoimport/#bin.mongoimport" title="mongoimport">mongoimport</a> <a href="https://docs.mongodb.org/manual/reference/program/bsondump/#bin.bsondump" title="bsondump">bsondump</a>, <a href="https://docs.mongodb.org/manual/reference/program/mongodump/#bin.mongodump" title="mongodump">mongodump</a>,<a href="https://docs.mongodb.org/manual/reference/program/mongoexport/#bin.mongoexport" title="mongoexport">mongoexport</a>, <a href="https://docs.mongodb.org/manual/reference/program/mongofiles/#bin.mongofiles" title="mongofiles">mongofiles</a>, <a href="https://docs.mongodb.org/manual/reference/program/mongooplog/#bin.mongooplog" title="mongooplog">mongooplog</a>, <a href="https://docs.mongodb.org/manual/reference/program/mongoperf/#bin.mongoperf" title="mongoperf">mongoperf</a>, <a href="https://docs.mongodb.org/manual/reference/program/mongorestore/#bin.mongorestore" title="mongorestore">mongorestore</a>, <a href="https://docs.mongodb.org/manual/reference/program/mongostat/#bin.mongostat" title="mongostat">mongostat</a>, and <a href="https://docs.mongodb.org/manual/reference/program/mongotop/#bin.mongotop" title="mongotop">mongotop</a>.</p><h2 id="mongodb-安装使用说明"><a class="markdownIt-Anchor" href="#mongodb-安装使用说明"></a> <strong><strong>Mongodb 安装使用说明：</strong></strong></h2><h3 id="1-创建一个yum-源"><a class="markdownIt-Anchor" href="#1-创建一个yum-源"></a> **1、**<strong><strong>创建一个yum 源</strong></strong></h3><p>vi /etc/yum.repos.d/mongodb-org-3.2.repo</p><p>在repo 文件中添加</p><p>[mongodb-org-3.2]<br />name=MongoDB Repository<br />baseurl=https://repo.mongodb.org/yum/redhat/$releasever/mongodb-org/3.2/x86_64<br />gpgcheck=1<br />enabled=1<br />gpgkey=https://www.mongodb.org/static/pgp/server-3.2.asc</p><h3 id="2-安装yum"><a class="markdownIt-Anchor" href="#2-安装yum"></a> <strong>2、安装</strong>****yum ****</h3><p>sudo yum install -y mongodb-org</p><p>如果需要指定版本，也可以这么安装</p><p>sudo yum install -y mongodb-org-3.2.6 mongodb-org-server-3.2.6 mongodb-org-shell-3.2.6 mongodb-org-mongos-3.2.6 mongodb-org-tools-3.2.6</p><p>由于公司的网络一直有问题，最后选择了 rpm 包安装。</p><p>[root@new-cdh1 mongodbsoft]# rpm -ivh mongodb-org-*<br />warning: mongodb-org-3.2.6-1.el6.x86_64.rpm: Header V3 RSA/SHA1 Signature, key ID ea312927: NOKEY<br />Preparing… ########################################### [100%]<br />1:mongodb-org-tools ########################################### [ 20%]<br />2:mongodb-org-shell ########################################### [ 40%]<br />3:mongodb-org-server ########################################### [ 60%]<br />4:mongodb-org-mongos ########################################### [ 80%]<br />5:mongodb-org ########################################### [100%]</p><h3 id="3-启动-mongodb"><a class="markdownIt-Anchor" href="#3-启动-mongodb"></a> <strong>3、启动 mongodb</strong></h3><p>sudo service mongod start<br />[root@new-cdh1 mongo]# service mongod start<br />Starting mongod: [ OK ]<br />[root@new-cdh1 mongo]#</p><h3 id="4-添加开机启动"><a class="markdownIt-Anchor" href="#4-添加开机启动"></a> 4、添加开机启动</h3><p>[root@new-cdh1 mongo]# chkconfig mongod on</p><h2 id="完全卸载mongod"><a class="markdownIt-Anchor" href="#完全卸载mongod"></a> 完全卸载mongod</h2><h3 id="1-停止mongod"><a class="markdownIt-Anchor" href="#1-停止mongod"></a> 1、停止mongod</h3><p>[root@new-cdh1 ~]# service mongod stop<br />Stopping mongod:                                           [  OK  ]<br />[root@new-cdh1 ~]# chkconfig mongod off</p><h3 id="2-卸载安装包"><a class="markdownIt-Anchor" href="#2-卸载安装包"></a> 2、卸载安装包</h3><p>[root@new-cdh1 ~]# yum erase $(rpm -qa | grep mongodb-org)<br />Loaded plugins: fastestmirror<br />Setting up Remove Process<br />Resolving Dependencies<br />–&gt; Running transaction check<br />—&gt; Package mongodb-org.x86_64 0:3.2.6-1.el6 will be erased<br />—&gt; Package mongodb-org-mongos.x86_64 0:3.2.6-1.el6 will be erased<br />—&gt; Package mongodb-org-server.x86_64 0:3.2.6-1.el6 will be erased<br />—&gt; Package mongodb-org-shell.x86_64 0:3.2.6-1.el6 will be erased<br />—&gt; Package mongodb-org-tools.x86_64 0:3.2.6-1.el6 will be erased<br />–&gt; Finished Dependency Resolution</p><p>Dependencies Resolved</p><h1 id="package-arch-version-repository-size"><a class="markdownIt-Anchor" href="#package-arch-version-repository-size"></a> ============================================================================================================================================================================================================================================<br />Package                                                         Arch                                                Version                                                   Repository                                              Size</h1><p>Removing:<br />mongodb-org                                                     x86_64                                              3.2.6-1.el6                                               installed                                              0.0<br />mongodb-org-mongos                                              x86_64                                              3.2.6-1.el6                                               installed                                               16 M<br />mongodb-org-server                                              x86_64                                              3.2.6-1.el6                                               installed                                               34 M<br />mongodb-org-shell                                               x86_64                                              3.2.6-1.el6                                               installed                                               20 M<br />mongodb-org-tools                                               x86_64                                              3.2.6-1.el6                                               installed                                              136 M</p><h1 id="transaction-summary"><a class="markdownIt-Anchor" href="#transaction-summary"></a> Transaction Summary</h1><p>Remove        5 Package(s)</p><p>Installed size: 206 M<br />Is this ok [y/N]: y<br />Downloading Packages:<br />Running rpm_check_debug<br />Running Transaction Test<br />Transaction Test Succeeded<br />Running Transaction<br />Erasing    : mongodb-org-3.2.6-1.el6.x86_64                                                                                                                                                                                           1/5<br />Erasing    : mongodb-org-server-3.2.6-1.el6.x86_64                                                                                                                                                                                    2/5<br />warning: /var/log/mongodb/mongod.log saved as /var/log/mongodb/mongod.log.rpmsave<br />warning: /etc/mongod.conf saved as /etc/mongod.conf.rpmsave<br />Erasing    : mongodb-org-shell-3.2.6-1.el6.x86_64                                                                                                                                                                                     3/5<br />Erasing    : mongodb-org-mongos-3.2.6-1.el6.x86_64                                                                                                                                                                                    4/5<br />Erasing    : mongodb-org-tools-3.2.6-1.el6.x86_64                                                                                                                                                                                     5/5<br />Verifying  : mongodb-org-shell-3.2.6-1.el6.x86_64                                                                                                                                                                                     1/5<br />Verifying  : mongodb-org-tools-3.2.6-1.el6.x86_64                                                                                                                                                                                     2/5<br />Verifying  : mongodb-org-mongos-3.2.6-1.el6.x86_64                                                                                                                                                                                    3/5<br />Verifying  : mongodb-org-server-3.2.6-1.el6.x86_64                                                                                                                                                                                    4/5<br />Verifying  : mongodb-org-3.2.6-1.el6.x86_64                                                                                                                                                                                           5/5</p><p>Removed:<br />mongodb-org.x86_64 0:3.2.6-1.el6         mongodb-org-mongos.x86_64 0:3.2.6-1.el6         mongodb-org-server.x86_64 0:3.2.6-1.el6         mongodb-org-shell.x86_64 0:3.2.6-1.el6         mongodb-org-tools.x86_64 0:3.2.6-1.el6</p><p>Complete!<br />[root@new-cdh1 ~]#</p><h3 id="2-删除垃圾数据data目录和log-目录"><a class="markdownIt-Anchor" href="#2-删除垃圾数据data目录和log-目录"></a> 2、删除垃圾数据（data目录和log 目录）</h3><p>[root@new-cdh1 ~]# rm -rf /var/log/mongodb<br />[root@new-cdh1 ~]# rm -rf /var/lib/mongo</p><p>END</p>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
          <category> mongodb </category>
          
      </categories>
      
      
        <tags>
            
            <tag> install </tag>
            
            <tag> mongo </tag>
            
            <tag> mongodb </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【转】mongodb 入门教程</title>
      <link href="2016/04/26/mongodb-teach/"/>
      <url>2016/04/26/mongodb-teach/</url>
      
        <content type="html"><![CDATA[<p><strong>1.Kafka独特设计在什么地方？</strong> <strong>2.Kafka如何搭建及创建topic、发送消息、消费消息？</strong> <strong>3.如何书写Kafka程序？</strong> <strong>4.数据传输的事务定义有哪三种？</strong> <strong>5.Kafka判断一个节点是否活着有哪两个条件？</strong> <strong>6.producer是否直接将数据发送到broker的leader(主节点)？</strong> <strong>7.Kafa consumer是否可以消费指定分区消息？</strong> <strong>8.Kafka消息是采用Pull模式，还是Push模式？</strong> <strong>9.Procuder API有哪两种？</strong> <strong>10.Kafka存储在硬盘上的消息格式是什么？</strong> <img src="http://www.aboutyun.com/static/image/hrline/4.gif" alt="" /> <strong>一、基本概念</strong>  <strong>介绍</strong>  Kafka是一个分布式的、可分区的、可复制的消息系统。它提供了普通消息系统的功能，但具有自己独特的设计。 这个独特的设计是什么样的呢？ 首先让我们看几个基本的消息系统术语： Kafka将消息以topic为单位进行归纳。 将向Kafka topic发布消息的程序成为producers. 将预订topics并消费消息的程序成为consumer. Kafka以集群的方式运行，可以由一个或多个服务组成，每个服务叫做一个broker. producers通过网络将消息发送到Kafka集群，集群向消费者提供消息，如下图所示： <img src="http://www.aboutyun.com/data/attachment/forum/201505/02/225851j2s4eq67aq9llaol.png" alt="" /> 客户端和服务端通过TCP协议通信。Kafka提供了Java客户端，并且对多种语言都提供了支持。 <strong>Topics 和Logs</strong> 先来看一下Kafka提供的一个抽象概念:topic. 一个topic是对一组消息的归纳。对每个topic，Kafka 对它的日志进行了分区，如下图所示： <img src="http://www.aboutyun.com/data/attachment/forum/201505/02/225851kqq1pnqbq81kblln.png" alt="" /> 每个分区都由一系列有序的、不可变的消息组成，这些消息被连续的追加到分区中。分区中的每个消息都有一个连续的序列号叫做offset,用来在分区中唯一的标识这个消息。 在一个可配置的时间段内，Kafka集群保留所有发布的消息，不管这些消息有没有被消费。比如，如果消息的保存策略被设置为2天，那么在一个消息被发布的两天时间内，它都是可以被消费的。之后它将被丢弃以释放空间。Kafka的性能是和数据量无关的常量级的，所以保留太多的数据并不是问题。 实际上每个consumer唯一需要维护的数据是消息在日志中的位置，也就是offset.这个offset有consumer来维护：一般情况下随着consumer不断的读取消息，这offset的值不断增加，但其实consumer可以以任意的顺序读取消息，比如它可以将offset设置成为一个旧的值来重读之前的消息。 以上特点的结合，使Kafka consumers非常的轻量级：它们可以在不对集群和其他consumer造成影响的情况下读取消息。你可以使用命令行来&quot;tail&quot;消息而不会对其他正在消费消息的consumer造成影响。 将日志分区可以达到以下目的：首先这使得每个日志的数量不会太大，可以在单个服务上保存。另外每个分区可以单独发布和消费，为并发操作topic提供了一种可能。 <strong>分布式</strong> 每个分区在Kafka集群的若干服务中都有副本，这样这些持有副本的服务可以共同处理数据和请求，副本数量是可以配置的。副本使Kafka具备了容错能力。 每个分区都由一个服务器作为“leader”，零或若干服务器作为“followers”,leader负责处理消息的读和写，followers则去复制leader.如果leader down了，followers中的一台则会自动成为leader。集群中的每个服务都会同时扮演两个角色：作为它所持有的一部分分区的leader，同时作为其他分区的followers，这样集群就会据有较好的负载均衡。 <strong>Producers</strong> Producer将消息发布到它指定的topic中,并负责决定发布到哪个分区。通常简单的由负载均衡机制随机选择分区，但也可以通过特定的分区函数选择分区。使用的更多的是第二种。 <strong>Consumers</strong> 发布消息通常有两种模式：队列模式（queuing）和发布-订阅模式(publish-subscribe)。队列模式中，consumers可以同时从服务端读取消息，每个消息只被其中一个consumer读到；发布-订阅模式中消息被广播到所有的consumer中。Consumers可以加入一个consumer 组，共同竞争一个topic，topic中的消息将被分发到组中的一个成员中。同一组中的consumer可以在不同的程序中，也可以在不同的机器上。如果所有的consumer都在一个组中，这就成为了传统的队列模式，在各consumer中实现负载均衡。如果所有的consumer都不在不同的组中，这就成为了发布-订阅模式，所有的消息都被分发到所有的consumer中。更常见的是，每个topic都有若干数量的consumer组，每个组都是一个逻辑上的“订阅者”，为了容错和更好的稳定性，每个组由若干consumer组成。这其实就是一个发布-订阅模式，只不过订阅者是个组而不是单个consumer。 <img src="http://www.aboutyun.com/data/attachment/forum/201505/02/225852ng3ur3gmtc9v489o.png" alt="" /> 由两个机器组成的集群拥有4个分区 (P0-P3) 2个consumer组. A组有两个consumerB组有4个 相比传统的消息系统，Kafka可以很好的保证有序性。 传统的队列在服务器上保存有序的消息，如果多个consumers同时从这个服务器消费消息，服务器就会以消息存储的顺序向consumer分发消息。虽然服务器按顺序发布消息，但是消息是被异步的分发到各consumer上，所以当消息到达时可能已经失去了原来的顺序，这意味着并发消费将导致顺序错乱。为了避免故障，这样的消息系统通常使用“专用consumer”的概念，其实就是只允许一个消费者消费消息，当然这就意味着失去了并发性。 在这方面Kafka做的更好，通过分区的概念，Kafka可以在多个consumer组并发的情况下提供较好的有序性和负载均衡。将每个分区分只分发给一个consumer组，这样一个分区就只被这个组的一个consumer消费，就可以顺序的消费这个分区的消息。因为有多个分区，依然可以在多个consumer组之间进行负载均衡。注意consumer组的数量不能多于分区的数量，也就是有多少分区就允许多少并发消费。 Kafka只能保证一个分区之内消息的有序性，在不同的分区之间是不可以的，这已经可以满足大部分应用的需求。如果需要topic中所有消息的有序性，那就只能让这个topic只有一个分区，当然也就只有一个consumer组消费它。 ########################################### <strong>二、环境搭建</strong> <strong>Step 1: 下载Kafka</strong> 点击下载最新的版本并解压.</p><p>&gt; tar -xzf kafka_2.9.2-0.8.1.1.tgz<br />&gt; cd kafka_2.9.2-0.8.1.1</p><p><strong>Step 2: 启动服务</strong> Kafka用到了Zookeeper，所有首先启动Zookper，下面简单的启用一个单实例的Zookkeeper服务。可以在命令的结尾加个&amp;符号，这样就可以启动后离开控制台。</p><p>&gt; bin/zookeeper-server-start.sh config/zookeeper.properties &amp;<br />[2013-04-22 15:01:37,495] INFO Reading configuration from: config/zookeeper.properties (org.apache.zookeeper.server.quorum.QuorumPeerConfig)<br />…</p><p>现在启动Kafka:</p><p>&gt; bin/kafka-server-start.sh config/server.properties<br />[2013-04-22 15:01:47,028] INFO Verifying properties (kafka.utils.VerifiableProperties)<br />[2013-04-22 15:01:47,051] INFO Property socket.send.buffer.bytes is overridden to 1048576 (kafka.utils.VerifiableProperties)<br />…</p><p><strong>Step 3: 创建 topic</strong> 创建一个叫做“test”的topic，它只有一个分区，一个副本。</p><p>&gt; bin/kafka-topics.sh --create --zookeeper localhost:2181 --replication-factor 1 --partitions 1 --topic test</p><p>可以通过list命令查看创建的topic:</p><p>&gt; bin/kafka-topics.sh --list --zookeeper localhost:2181<br />test</p><p>除了手动创建topic，还可以配置broker让它自动创建topic. <strong>Step 4:发送消息.</strong> Kafka 使用一个简单的命令行producer，从文件中或者从 标准输入中读取消息并发送到服务端。默认的每条命令将发送一条消息。 运行producer并在控制台中输一些消息，这些消息将被发送到服务端：</p><p>&gt; bin/kafka-console-producer.sh --broker-list localhost:9092 --topic test<br />This is a messageThis is another message</p><p>ctrl+c可以退出发送。 <strong>Step 5: 启动consumer</strong> Kafka also has a command line consumer that will dump out messages to standard output. Kafka也有一个命令行consumer可以读取消息并输出到标准输出：</p><p>&gt; bin/kafka-console-consumer.sh --zookeeper localhost:2181 --topic test --from-beginning<br />This is a message<br />This is another message</p><p>你在一个终端中运行consumer命令行，另一个终端中运行producer命令行，就可以在一个终端输入消息，另一个终端读取消息。 这两个命令都有自己的可选参数，可以在运行的时候不加任何参数可以看到帮助信息。 <strong>Step 6: 搭建一个多个broker的集群</strong> 刚才只是启动了单个broker，现在启动有3个broker组成的集群，这些broker节点也都是在本机上的： 首先为每个节点编写配置文件：</p><p>&gt; cp config/server.properties config/server-1.properties<br />&gt; cp config/server.properties config/server-2.properties</p><p>在拷贝出的新文件中添加以下参数：</p><p>config/server-1.properties:<br />broker.id=1<br />port=9093<br />log.dir=/tmp/kafka-logs-1</p><p>config/server-2.properties:<br />broker.id=2<br />port=9094<br />log.dir=/tmp/kafka-logs-2</p><p>broker.id在集群中唯一的标注一个节点，因为在同一个机器上，所以必须制定不同的端口和日志文件，避免数据被覆盖。 We already have Zookeeper and our single node started, so we just need to start the two new nodes: 刚才已经启动可Zookeeper和一个节点，现在启动另外两个节点：</p><p>&gt; bin/kafka-server-start.sh config/server-1.properties &amp;<br />…<br />&gt; bin/kafka-server-start.sh config/server-2.properties &amp;<br />…</p><p>创建一个拥有3个副本的topic:</p><p>&gt; bin/kafka-topics.sh --create --zookeeper localhost:2181 --replication-factor 3 --partitions 1 --topic my-replicated-topic</p><p>现在我们搭建了一个集群，怎么知道每个节点的信息呢？运行“&quot;describe topics”命令就可以了：</p><p>&gt; bin/kafka-topics.sh --describe --zookeeper localhost:2181 --topic my-replicated-topic</p><p>Topic:my-replicated-topic PartitionCount:1 ReplicationFactor:3 Configs:<br />Topic: my-replicated-topic Partition: 0 Leader: 1 Replicas: 1,2,0 Isr: 1,2,0</p><p>下面解释一下这些输出。第一行是对所有分区的一个描述，然后每个分区都会对应一行，因为我们只有一个分区所以下面就只加了一行。 leader：负责处理消息的读和写，leader是从所有节点中随机选择的. replicas：列出了所有的副本节点，不管节点是否在服务中. isr：是正在服务中的节点. 在我们的例子中，节点1是作为leader运行。 向topic发送消息：</p><p>&gt; bin/kafka-console-producer.sh --broker-list localhost:9092 --topic my-replicated-topic</p><p>…<br />my test message 1my test message 2^C</p><p>消费这些消息：</p><p>&gt; bin/kafka-console-consumer.sh --zookeeper localhost:2181 --from-beginning --topic my-replicated-topic</p><p>…<br />my test message 1<br />my test message 2<br />^C</p><p>测试一下容错能力.Broker 1作为leader运行，现在我们kill掉它：</p><p>&gt; ps | grep server-1.properties7564 ttys002 0:15.91 /System/Library/Frameworks/JavaVM.framework/Versions/1.6/Home/bin/java…<br />&gt; kill -9 7564</p><p>另外一个节点被选做了leader,node 1 不再出现在 in-sync 副本列表中：</p><p>&gt; bin/kafka-topics.sh --describe --zookeeper localhost:218192 --topic my-replicated-topic<br />Topic:my-replicated-topic PartitionCount:1 ReplicationFactor:3 Configs:<br />Topic: my-replicated-topic Partition: 0 Leader: 2 Replicas: 1,2,0 Isr: 2,0</p><p>虽然最初负责续写消息的leader down掉了，但之前的消息还是可以消费的：</p><p>&gt; bin/kafka-console-consumer.sh --zookeeper localhost:2181 --from-beginning --topic my-replicated-topic<br />…<br />my test message 1<br />my test message 2</p><p>看来Kafka的容错机制还是不错的。 ################################################ <strong>三、搭建Kafka开发环境</strong> 我们搭建了kafka的服务器，并可以使用Kafka的命令行工具创建topic，发送和接收消息。下面我们来搭建kafka的开发环境。 添加依赖 搭建开发环境需要引入kafka的jar包，一种方式是将Kafka安装包中lib下的jar包加入到项目的classpath中，这种比较简单了。不过我们使用另一种更加流行的方式：使用maven管理jar包依赖。 创建好maven项目后，在pom.xml中添加以下依赖：</p><dependency> <groupId> org.apache.kafka</groupId > <artifactId> kafka_2.10</artifactId > <version> 0.8.0</ version></dependency><p>添加依赖后你会发现有两个jar包的依赖找不到。没关系我都帮你想好了，点击这里下载这两个jar包，解压后你有两种选择，第一种是使用mvn的install命令将jar包安装到本地仓库，另一种是直接将解压后的文件夹拷贝到mvn本地仓库的com文件夹下，比如我的本地仓库是d:\mvn,完成后我的目录结构是这样的： <img src="http://www.aboutyun.com/data/attachment/forum/201505/02/232344k5dtdoo51zjozn6z.png" alt="" /> **配置程序 ** 首先是一个充当配置文件作用的接口,配置了Kafka的各种连接参数：</p><p>package com.sohu.kafkademon;<br />public interface KafkaProperties<br />{<br />final static String zkConnect = “10.22.10.139:2181”;<br />final static String groupId = “group1”;<br />final static String topic = “topic1”;<br />final static String kafkaServerURL = “10.22.10.139”;<br />final static int kafkaServerPort = 9092;<br />final static int kafkaProducerBufferSize = 64 * 1024;<br />final static int connectionTimeOut = 20000;<br />final static int reconnectInterval = 10000;<br />final static String topic2 = “topic2”;<br />final static String topic3 = “topic3”;<br />final static String clientId = “SimpleConsumerDemoClient”;<br />}</p><p><strong>producer</strong></p><p>package com.sohu.kafkademon;<br />import java.util.Properties;<br />import kafka.producer.KeyedMessage;<br />import kafka.producer.ProducerConfig;<br />/**<br />* @author leicui <a href="mailto:bourne_cui@163.com">bourne_cui@163.com</a><br />*/<br />public class KafkaProducer extends Thread<br />{<br />private final kafka.javaapi.producer.Producer&lt;Integer, String&gt; producer;<br />private final String topic;<br />private final Properties props = new Properties();<br />public KafkaProducer(String topic)<br />{<br />props.put(“serializer.class”, “kafka.serializer.StringEncoder”);<br />props.put(“metadata.broker.list”, “10.22.10.139:9092”);<br />producer = new kafka.javaapi.producer.Producer&lt;Integer, String&gt;(new ProducerConfig(props));<br />this.topic = topic;<br />}<br />@Override<br />public void run() {<br />int messageNo = 1;<br />while (true)<br />{<br />String messageStr = new String(“Message_” + messageNo);<br />System.out.println(“Send:” + messageStr);<br />producer.send(new KeyedMessage&lt;Integer, String&gt;(topic, messageStr));<br />messageNo++;<br />try {<br />sleep(3000);<br />} catch (InterruptedException e) {<br />// TODO Auto-generated catch block<br />e.printStackTrace();<br />}<br />}<br />}<br />}</p><p><strong>consumer</strong></p><p>package com.sohu.kafkademon;<br />import java.util.HashMap;<br />import java.util.List;<br />import java.util.Map;<br />import java.util.Properties;<br />import kafka.consumer.ConsumerConfig;<br />import kafka.consumer.ConsumerIterator;<br />import kafka.consumer.KafkaStream;<br />import kafka.javaapi.consumer.ConsumerConnector;<br />/**<br />* @author leicui <a href="mailto:bourne_cui@163.com">bourne_cui@163.com</a><br />*/<br />public class KafkaConsumer extends Thread<br />{<br />private final ConsumerConnector consumer;<br />private final String topic;<br />public KafkaConsumer(String topic)<br />{<br />consumer = kafka.consumer.Consumer.createJavaConsumerConnector(<br />createConsumerConfig());<br />this.topic = topic;<br />}<br />private static ConsumerConfig createConsumerConfig()<br />{<br />Properties props = new Properties();<br />props.put(“zookeeper.connect”, KafkaProperties.zkConnect);<br />props.put(“<a href="http://group.id">group.id</a>”, KafkaProperties.groupId);<br />props.put(“<a href="http://zookeeper.session.timeout.ms">zookeeper.session.timeout.ms</a>”, “40000”);<br />props.put(“<a href="http://zookeeper.sync.time.ms">zookeeper.sync.time.ms</a>”, “200”);<br />props.put(“<a href="http://auto.commit.interval.ms">auto.commit.interval.ms</a>”, “1000”);<br />return new ConsumerConfig(props);<br />}<br />@Override<br />public void run() {<br />Map&lt;String, Integer&gt; topicCountMap = new HashMap&lt;String, Integer&gt;();<br />topicCountMap.put(topic, new Integer(1));<br />Map&lt;String, List&lt;KafkaStream&lt;byte[], byte[]&gt;&gt;&gt; consumerMap = consumer.createMessageStreams(topicCountMap);<br />KafkaStream&lt;byte[], byte[]&gt; stream = consumerMap.get(topic).get(0);<br />ConsumerIterator&lt;byte[], byte[]&gt; it = stream.iterator();<br />while (it.hasNext()) {<br />System.out.println(“receive：” + new String(it.next().message()));<br />try {<br />sleep(3000);<br />} catch (InterruptedException e) {<br />e.printStackTrace();<br />}<br />}<br />}<br />}</p><p><strong>简单的发送接收</strong> 运行下面这个程序，就可以进行简单的发送接收消息了：</p><p>package com.sohu.kafkademon;<br />/**<br />* @author leicui <a href="mailto:bourne_cui@163.com">bourne_cui@163.com</a><br />*/<br />public class KafkaConsumerProducerDemo<br />{<br />public static void main(String[] args)<br />{<br />KafkaProducer producerThread = new KafkaProducer(KafkaProperties.topic);<br />producerThread.start();<br />KafkaConsumer consumerThread = new KafkaConsumer(KafkaProperties.topic);<br />consumerThread.start();<br />}<br />}</p><p><strong>高级别的consumer</strong> 下面是比较负载的发送接收的程序：</p><p>package com.sohu.kafkademon;<br />import java.util.HashMap;<br />import java.util.List;<br />import java.util.Map;<br />import java.util.Properties;<br />import kafka.consumer.ConsumerConfig;<br />import kafka.consumer.ConsumerIterator;<br />import kafka.consumer.KafkaStream;<br />import kafka.javaapi.consumer.ConsumerConnector;<br />/**<br />* @author leicui <a href="mailto:bourne_cui@163.com">bourne_cui@163.com</a><br />*/<br />public class KafkaConsumer extends Thread<br />{<br />private final ConsumerConnector consumer;<br />private final String topic;<br />public KafkaConsumer(String topic)<br />{<br />consumer = kafka.consumer.Consumer.createJavaConsumerConnector(<br />createConsumerConfig());<br />this.topic = topic;<br />}<br />private static ConsumerConfig createConsumerConfig()<br />{<br />Properties props = new Properties();<br />props.put(“zookeeper.connect”, KafkaProperties.zkConnect);<br />props.put(“<a href="http://group.id">group.id</a>”, KafkaProperties.groupId);<br />props.put(“<a href="http://zookeeper.session.timeout.ms">zookeeper.session.timeout.ms</a>”, “40000”);<br />props.put(“<a href="http://zookeeper.sync.time.ms">zookeeper.sync.time.ms</a>”, “200”);<br />props.put(“<a href="http://auto.commit.interval.ms">auto.commit.interval.ms</a>”, “1000”);<br />return new ConsumerConfig(props);<br />}<br />@Override<br />public void run() {<br />Map&lt;String, Integer&gt; topicCountMap = new HashMap&lt;String, Integer&gt;();<br />topicCountMap.put(topic, new Integer(1));<br />Map&lt;String, List&lt;KafkaStream&lt;byte[], byte[]&gt;&gt;&gt; consumerMap = consumer.createMessageStreams(topicCountMap);<br />KafkaStream&lt;byte[], byte[]&gt; stream = consumerMap.get(topic).get(0);<br />ConsumerIterator&lt;byte[], byte[]&gt; it = stream.iterator();<br />while (it.hasNext()) {<br />System.out.println(“receive：” + new String(it.next().message()));<br />try {<br />sleep(3000);<br />} catch (InterruptedException e) {<br />e.printStackTrace();<br />}<br />}<br />}<br />}</p><p>############################################################ <strong>四、数据持久化</strong> <strong>不要畏惧文件系统!</strong> Kafka大量依赖文件系统去存储和缓存消息。对于硬盘有个传统的观念是硬盘总是很慢，这使很多人怀疑基于文件系统的架构能否提供优异的性能。实际上硬盘的快慢完全取决于使用它的方式。设计良好的硬盘架构可以和内存一样快。 在6块7200转的SATA RAID-5磁盘阵列的线性写速度差不多是600MB/s，但是随即写的速度却是100k/s，差了差不多6000倍。现代的操作系统都对次做了大量的优化，使用了 read-ahead 和 write-behind的技巧，读取的时候成块的预读取数据，写的时候将各种微小琐碎的逻辑写入组织合并成一次较大的物理写入。对此的深入讨论可以查看这里，它们发现线性的访问磁盘，很多时候比随机的内存访问快得多。 为了提高性能，现代操作系统往往使用内存作为磁盘的缓存，现代操作系统乐于把所有空闲内存用作磁盘缓存，虽然这可能在缓存回收和重新分配时牺牲一些性能。所有的磁盘读写操作都会经过这个缓存，这不太可能被绕开除非直接使用I/O。所以虽然每个程序都在自己的线程里只缓存了一份数据，但在操作系统的缓存里还有一份，这等于存了两份数据。 另外再来讨论一下JVM,以下两个事实是众所周知的： •Java对象占用空间是非常大的，差不多是要存储的数据的两倍甚至更高。 •随着堆中数据量的增加，垃圾回收回变的越来越困难。 基于以上分析，如果把数据缓存在内存里，因为需要存储两份，不得不使用两倍的内存空间，Kafka基于JVM，又不得不将空间再次加倍,再加上要避免GC带来的性能影响，在一个32G内存的机器上，不得不使用到28-30G的内存空间。并且当系统重启的时候，又必须要将数据刷到内存中（ 10GB 内存差不多要用10分钟），就算使用冷刷新（不是一次性刷进内存，而是在使用数据的时候没有就刷到内存）也会导致最初的时候新能非常慢。但是使用文件系统，即使系统重启了，也不需要刷新数据。使用文件系统也简化了维护数据一致性的逻辑。 所以与传统的将数据缓存在内存中然后刷到硬盘的设计不同，Kafka直接将数据写到了文件系统的日志中。 <strong>常量时间的操作效率</strong> 在大多数的消息系统中，数据持久化的机制往往是为每个cosumer提供一个B树或者其他的随机读写的数据结构。B树当然是很棒的，但是也带了一些代价：比如B树的复杂度是O(log N)，O(log N)通常被认为就是常量复杂度了，但对于硬盘操作来说并非如此。磁盘进行一次搜索需要10ms，每个硬盘在同一时间只能进行一次搜索，这样并发处理就成了问题。虽然存储系统使用缓存进行了大量优化，但是对于树结构的性能的观察结果却表明，它的性能往往随着数据的增长而线性下降，数据增长一倍，速度就会降低一倍。 直观的讲，对于主要用于日志处理的消息系统，数据的持久化可以简单的通过将数据追加到文件中实现，读的时候从文件中读就好了。这样做的好处是读和写都是 O(1) 的，并且读操作不会阻塞写操作和其他操作。这样带来的性能优势是很明显的，因为性能和数据的大小没有关系了。 既然可以使用几乎没有容量限制（相对于内存来说）的硬盘空间建立消息系统，就可以在没有性能损失的情况下提供一些一般消息系统不具备的特性。比如，一般的消息系统都是在消息被消费后立即删除，Kafka却可以将消息保存一段时间（比如一星期），这给consumer提供了很好的机动性和灵活性，这点在今后的文章中会有详述。 ############################################################ <strong>五、消息传输的事务定义</strong> 之前讨论了consumer和producer是怎么工作的，现在来讨论一下数据传输方面。数据传输的事务定义通常有以下三种级别：</p><ul><li>最多一次: 消息不会被重复发送，最多被传输一次，但也有可能一次不传输。</li><li>最少一次: 消息不会被漏发送，最少被传输一次，但也有可能被重复传输.</li><li>精确的一次（Exactly once）: 不会漏传输也不会重复传输,每个消息都传输被一次而且仅仅被传输一次，这是大家所期望的。</li></ul><p>大多数消息系统声称可以做到“精确的一次”，但是仔细阅读它们的的文档可以看到里面存在误导，比如没有说明当consumer或producer失败时怎么样，或者当有多个consumer并行时怎么样，或写入硬盘的数据丢失时又会怎么样。kafka的做法要更先进一些。当发布消息时，Kafka有一个“committed”的概念，一旦消息被提交了，只要消息被写入的分区的所在的副本broker是活动的，数据就不会丢失。关于副本的活动的概念，下节文档会讨论。现在假设broker是不会down的。 如果producer发布消息时发生了网络错误，但又不确定实在提交之前发生的还是提交之后发生的，这种情况虽然不常见，但是必须考虑进去，现在Kafka版本还没有解决这个问题，将来的版本正在努力尝试解决。 并不是所有的情况都需要“精确的一次”这样高的级别，Kafka允许producer灵活的指定级别。比如producer可以指定必须等待消息被提交的通知，或者完全的异步发送消息而不等待任何通知，或者仅仅等待leader声明它拿到了消息（followers没有必要）。 现在从consumer的方面考虑这个问题，所有的副本都有相同的日志文件和相同的offset，consumer维护自己消费的消息的offset，如果consumer不会崩溃当然可以在内存中保存这个值，当然谁也不能保证这点。如果consumer崩溃了，会有另外一个consumer接着消费消息，它需要从一个合适的offset继续处理。这种情况下可以有以下选择：</p><ul><li>consumer可以先读取消息，然后将offset写入日志文件中，然后再处理消息。这存在一种可能就是在存储offset后还没处理消息就crash了，新的consumer继续从这个offset处理，那么就会有些消息永远不会被处理，这就是上面说的“最多一次”。</li><li>consumer可以先读取消息，处理消息，最后记录offset，当然如果在记录offset之前就crash了，新的consumer会重复的消费一些消息，这就是上面说的“最少一次”。</li><li>“精确一次”可以通过将提交分为两个阶段来解决：保存了offset后提交一次，消息处理成功之后再提交一次。但是还有个更简单的做法：将消息的offset和消息被处理后的结果保存在一起。比如用Hadoop ETL处理消息时，将处理后的结果和offset同时保存在HDFS中，这样就能保证消息和offser同时被处理了。</li></ul><p>############################################################ <strong>六、性能优化</strong> Kafka在提高效率方面做了很大努力。Kafka的一个主要使用场景是处理网站活动日志，吞吐量是非常大的，每个页面都会产生好多次写操作。读方面，假设每个消息只被消费一次，读的量的也是很大的，Kafka也尽量使读的操作更轻量化。 我们之前讨论了磁盘的性能问题，线性读写的情况下影响磁盘性能问题大约有两个方面：太多的琐碎的I/O操作和太多的字节拷贝。I/O问题发生在客户端和服务端之间，也发生在服务端内部的持久化的操作中。 <strong>消息集（message set）</strong> 为了避免这些问题，Kafka建立了“消息集（message set）”的概念，将消息组织到一起，作为处理的单位。以消息集为单位处理消息，比以单个的消息为单位处理，会提升不少性能。Producer把消息集一块发送给服务端，而不是一条条的发送；服务端把消息集一次性的追加到日志文件中，这样减少了琐碎的I/O操作。consumer也可以一次性的请求一个消息集。 另外一个性能优化是在字节拷贝方面。在低负载的情况下这不是问题，但是在高负载的情况下它的影响还是很大的。为了避免这个问题，Kafka使用了标准的二进制消息格式，这个格式可以在producer,broker和producer之间共享而无需做任何改动。 <strong>zero copy</strong> Broker维护的消息日志仅仅是一些目录文件，消息集以固定队的格式写入到日志文件中，这个格式producer和consumer是共享的，这使得Kafka可以一个很重要的点进行优化：消息在网络上的传递。现代的unix操作系统提供了高性能的将数据从页面缓存发送到socket的系统函数，在linux中，这个函数是sendfile. 为了更好的理解sendfile的好处，我们先来看下一般将数据从文件发送到socket的数据流向：</p><ul><li>操作系统把数据从文件拷贝内核中的页缓存中</li><li>应用程序从页缓存从把数据拷贝自己的内存缓存中</li><li>应用程序将数据写入到内核中socket缓存中</li><li>操作系统把数据从socket缓存中拷贝到网卡接口缓存，从这里发送到网络上。</li></ul><p>这显然是低效率的，有4次拷贝和2次系统调用。Sendfile通过直接将数据从页面缓存发送网卡接口缓存，避免了重复拷贝，大大的优化了性能。 在一个多consumers的场景里，数据仅仅被拷贝到页面缓存一次而不是每次消费消息的时候都重复的进行拷贝。这使得消息以近乎网络带宽的速率发送出去。这样在磁盘层面你几乎看不到任何的读操作，因为数据都是从页面缓存中直接发送到网络上去了。 <a href="https://www.ibm.com/developerworks/linux/library/j-zerocopy/">这篇文章</a>详细介绍了sendfile和zero-copy技术在Java方面的应用。 <strong>数据压缩</strong> 很多时候，性能的瓶颈并非CPU或者硬盘而是网络带宽，对于需要在数据中心之间传送大量数据的应用更是如此。当然用户可以在没有Kafka支持的情况下各自压缩自己的消息，但是这将导致较低的压缩率，因为相比于将消息单独压缩，将大量文件压缩在一起才能起到最好的压缩效果。 Kafka采用了端到端的压缩：因为有“消息集”的概念，客户端的消息可以一起被压缩后送到服务端，并以压缩后的格式写入日志文件，以压缩的格式发送到consumer，消息从producer发出到consumer拿到都被是压缩的，只有在consumer使用的时候才被解压缩，所以叫做“端到端的压缩”。 Kafka支持GZIP和Snappy压缩协议。更详细的内容可以查看<a href="https://cwiki.apache.org/confluence/display/KAFKA/Compression">这里</a>。 ########################################################## <strong>七、Producer和Consumer</strong> <strong>Kafka Producer****消息发送</strong> producer直接将数据发送到broker的leader(主节点)，不需要在多个节点进行分发。为了帮助producer做到这点，所有的Kafka节点都可以及时的告知:哪些节点是活动的，目标topic目标分区的leader在哪。这样producer就可以直接将消息发送到目的地了。 客户端控制消息将被分发到哪个分区。可以通过负载均衡随机的选择，或者使用分区函数。Kafka允许用户实现分区函数，指定分区的key，将消息hash到不同的分区上(当然有需要的话，也可以覆盖这个分区函数自己实现逻辑).比如如果你指定的key是user id，那么同一个用户发送的消息都被发送到同一个分区上。经过分区之后，consumer就可以有目的的消费某个分区的消息。 <strong>异步发送</strong> 批量发送可以很有效的提高发送效率。Kafka producer的异步发送模式允许进行批量发送，先将消息缓存在内存中，然后一次请求批量发送出去。这个策略可以配置的，比如可以指定缓存的消息达到某个量的时候就发出去，或者缓存了固定的时间后就发送出去（比如100条消息就发送，或者每5秒发送一次）。这种策略将大大减少服务端的I/O次数。 既然缓存是在producer端进行的，那么当producer崩溃时，这些消息就会丢失。Kafka0.8.1的异步发送模式还不支持回调，就不能在发送出错时进行处理。Kafka 0.9可能会增加这样的回调函数。见<a href="https://cwiki.apache.org/confluence/display/KAFKA/Client+Rewrite#ClientRewrite-ProposedProducerAPI">Proposed Producer API</a>. <strong>Kafka Consumer</strong> Kafa consumer消费消息时，向broker发出&quot;fetch&quot;请求去消费特定分区的消息。consumer指定消息在日志中的偏移量（offset），就可以消费从这个位置开始的消息。customer拥有了offset的控制权，可以向后回滚去重新消费之前的消息，这是很有意义的。 <strong>推还是拉？</strong> Kafka最初考虑的问题是，customer应该从brokes拉取消息还是brokers将消息推送到consumer，也就是pull还push。在这方面，Kafka遵循了一种大部分消息系统共同的传统的设计：producer将消息推送到broker，consumer从broker拉取消息。 一些消息系统比如Scribe和Apache Flume采用了push模式，将消息推送到下游的consumer。这样做有好处也有坏处：由broker决定消息推送的速率，对于不同消费速率的consumer就不太好处理了。消息系统都致力于让consumer以最大的速率最快速的消费消息，但不幸的是，push模式下，当broker推送的速率远大于consumer消费的速率时，consumer恐怕就要崩溃了。最终Kafka还是选取了传统的pull模式。 Pull模式的另外一个好处是consumer可以自主决定是否批量的从broker拉取数据。Push模式必须在不知道下游consumer消费能力和消费策略的情况下决定是立即推送每条消息还是缓存之后批量推送。如果为了避免consumer崩溃而采用较低的推送速率，将可能导致一次只推送较少的消息而造成浪费。Pull模式下，consumer就可以根据自己的消费能力去决定这些策略。 Pull有个缺点是，如果broker没有可供消费的消息，将导致consumer不断在循环中轮询，直到新消息到t达。为了避免这点，Kafka有个参数可以让consumer阻塞知道新消息到达(当然也可以阻塞知道消息的数量达到某个特定的量这样就可以批量发送)。 <strong>消费状态跟踪</strong> 对消费消息状态的记录也是很重要的。 大部分消息系统在broker端的维护消息被消费的记录：一个消息被分发到consumer后broker就马上进行标记或者等待customer的通知后进行标记。这样也可以在消息在消费后立马就删除以减少空间占用。 但是这样会不会有什么问题呢？如果一条消息发送出去之后就立即被标记为消费过的，一旦consumer处理消息时失败了（比如程序崩溃）消息就丢失了。为了解决这个问题，很多消息系统提供了另外一个个功能：当消息被发送出去之后仅仅被标记为已发送状态，当接到consumer已经消费成功的通知后才标记为已被消费的状态。这虽然解决了消息丢失的问题，但产生了新问题，首先如果consumer处理消息成功了但是向broker发送响应时失败了，这条消息将被消费两次。第二个问题时，broker必须维护每条消息的状态，并且每次都要先锁住消息然后更改状态然后释放锁。这样麻烦又来了，且不说要维护大量的状态数据，比如如果消息发送出去但没有收到消费成功的通知，这条消息将一直处于被锁定的状态， Kafka采用了不同的策略。Topic被分成了若干分区，每个分区在同一时间只被一个consumer消费。这意味着每个分区被消费的消息在日志中的位置仅仅是一个简单的整数：offset。这样就很容易标记每个分区消费状态就很容易了，仅仅需要一个整数而已。这样消费状态的跟踪就很简单了。 这带来了另外一个好处：consumer可以把offset调成一个较老的值，去重新消费老的消息。这对传统的消息系统来说看起来有些不可思议，但确实是非常有用的，谁规定了一条消息只能被消费一次呢？consumer发现解析数据的程序有bug，在修改bug后再来解析一次消息，看起来是很合理的额呀！ <strong>离线处理消息</strong> 高级的数据持久化允许consumer每个隔一段时间批量的将数据加载到线下系统中比如<a href="http://www.linuxidc.com/topicnews.aspx?tid=13">Hadoop</a>或者数据仓库。这种情况下，Hadoop可以将加载任务分拆，拆成每个broker或每个topic或每个分区一个加载任务。Hadoop具有任务管理功能，当一个任务失败了就可以重启而不用担心数据被重新加载，只要从上次加载的位置继续加载消息就可以了。 ######################################################### <strong>八、主从同步</strong> Kafka允许topic的分区拥有若干副本，这个数量是可以配置的，你可以为每个topci配置副本的数量。Kafka会自动在每个个副本上备份数据，所以当一个节点down掉时数据依然是可用的。 Kafka的副本功能不是必须的，你可以配置只有一个副本，这样其实就相当于只有一份数据。 创建副本的单位是topic的分区，每个分区都有一个leader和零或多个followers.所有的读写操作都由leader处理，一般分区的数量都比broker的数量多的多，各分区的leader均匀的分布在brokers中。所有的followers都复制leader的日志，日志中的消息和顺序都和leader中的一致。flowers向普通的consumer那样从leader那里拉取消息并保存在自己的日志文件中。 许多分布式的消息系统自动的处理失败的请求，它们对一个节点是否 着（alive）”有着清晰的定义。Kafka判断一个节点是否活着有两个条件：</p><ul><li>节点必须可以维护和ZooKeeper的连接，Zookeeper通过心跳机制检查每个节点的连接。</li><li>如果节点是个follower,他必须能及时的同步leader的写操作，延时不能太久。</li></ul><p>符合以上条件的节点准确的说应该是“同步中的（in sync）”，而不是模糊的说是“活着的”或是“失败的”。Leader会追踪所有“同步中”的节点，一旦一个down掉了，或是卡住了，或是延时太久，leader就会把它移除。至于延时多久算是“太久”，是由参数replica.lag.max.messages决定的，怎样算是卡住了，怎是由参数replica.lag.time.max.ms决定的。 只有当消息被所有的副本加入到日志中时，才算是“committed”，只有committed的消息才会发送给consumer，这样就不用担心一旦leader down掉了消息会丢失。Producer也可以选择是否等待消息被提交的通知，这个是由参数request.required.acks决定的。 Kafka保证只要有一个“同步中”的节点，“committed”的消息就不会丢失。 <strong>Leader的选择</strong> Kafka的核心是日志文件，日志文件在集群中的同步是分布式数据系统最基础的要素。 如果leaders永远不会down的话我们就不需要followers了！一旦leader down掉了，需要在followers中选择一个新的leader.但是followers本身有可能延时太久或者crash，所以必须选择高质量的follower作为leader.必须保证，一旦一个消息被提交了，但是leader down掉了，新选出的leader必须可以提供这条消息。大部分的分布式系统采用了多数投票法则选择新的leader,对于多数投票法则，就是根据所有副本节点的状况动态的选择最适合的作为leader.Kafka并不是使用这种方法。 Kafaka动态维护了一个同步状态的副本的集合（a set of in-sync replicas），简称ISR，在这个集合中的节点都是和leader保持高度一致的，任何一条消息必须被这个集合中的每个节点读取并追加到日志中了，才回通知外部这个消息已经被提交了。因此这个集合中的任何一个节点随时都可以被选为leader.ISR在ZooKeeper中维护。ISR中有f+1个节点，就可以允许在f个节点down掉的情况下不会丢失消息并正常提供服。ISR的成员是动态的，如果一个节点被淘汰了，当它重新达到“同步中”的状态时，他可以重新加入ISR.这种leader的选择方式是非常快速的，适合kafka的应用场景。 一个邪恶的想法：如果所有节点都down掉了怎么办？Kafka对于数据不会丢失的保证，是基于至少一个节点是存活的，一旦所有节点都down了，这个就不能保证了。 实际应用中，当所有的副本都down掉时，必须及时作出反应。可以有以下两种选择:</p><ul><li>等待ISR中的任何一个节点恢复并担任leader。</li><li>选择所有节点中（不只是ISR）第一个恢复的节点作为leader.</li></ul><p>这是一个在可用性和连续性之间的权衡。如果等待ISR中的节点恢复，一旦ISR中的节点起不起来或者数据都是了，那集群就永远恢复不了了。如果等待ISR意外的节点恢复，这个节点的数据就会被作为线上数据，有可能和真实的数据有所出入，因为有些数据它可能还没同步到。Kafka目前选择了第二种策略，在未来的版本中将使这个策略的选择可配置，可以根据场景灵活的选择。 这种窘境不只Kafka会遇到，几乎所有的分布式数据系统都会遇到。 <strong>副本管理</strong> 以上仅仅以一个topic一个分区为例子进行了讨论，但实际上一个Kafka将会管理成千上万的topic分区.Kafka尽量的使所有分区均匀的分布到集群所有的节点上而不是集中在某些节点上，另外主从关系也尽量均衡这样每个几点都会担任一定比例的分区的leader. 优化leader的选择过程也是很重要的，它决定了系统发生故障时的空窗期有多久。Kafka选择一个节点作为“controller”,当发现有节点down掉的时候它负责在游泳分区的所有节点中选择新的leader,这使得Kafka可以批量的高效的管理所有分区节点的主从关系。如果controller down掉了，活着的节点中的一个会备切换为新的controller. ################################################### <strong>九、客户端API</strong> <strong>Kafka Producer APIs</strong> Procuder API有两种：kafka.producer.SyncProducer和kafka.producer.async.AsyncProducer.它们都实现了同一个接口：</p><p>class Producer {<br />/* 将消息发送到指定分区 */<br />publicvoid send(kafka.javaapi.producer.ProducerData&lt;K,V&gt; producerData);<br />/* 批量发送一批消息 */<br />publicvoid send(java.util.List&lt;kafka.javaapi.producer.ProducerData&lt;K,V&gt;&gt; producerData);<br />/* 关闭producer */<br />publicvoid close();<br />}</p><p>Producer API提供了以下功能：</p><ul><li>可以将多个消息缓存到本地队列里，然后异步的批量发送到broker，可以通过参数producer.type=async做到。缓存的大小可以通过一些参数指定：queue.time和batch.size。一个后台线程（(kafka.producer.async.ProducerSendThread）从队列中取出数据并让kafka.producer.EventHandler将消息发送到broker，也可以通过参数event.handler定制handler，在producer端处理数据的不同的阶段注册处理器，比如可以对这一过程进行日志追踪，或进行一些监控。只需实现kafka.producer.async.CallbackHandler接口，并在callback.handler中配置。</li><li>自己编写Encoder来序列化消息，只需实现下面这个接口。默认的Encoder是kafka.serializer.DefaultEncoder。<ul><li>interface Encoder<T> {</li><li>public Message toMessage(T data);</li><li>}</li></ul></li><li>提供了基于Zookeeper的broker自动感知能力，可以通过参数zk.connect实现。如果不使用Zookeeper，也可以使用broker.list参数指定一个静态的brokers列表，这样消息将被随机的发送到一个broker上，一旦选中的broker失败了，消息发送也就失败了。</li><li>通过分区函数kafka.producer.Partitioner类对消息分区。<ul><li>interface Partitioner<T> {</li><li>int partition(T key, int numPartitions);</li><li>}分区函数有两个参数：key和可用的分区数量，从分区列表中选择一个分区并返回id。默认的分区策略是hash(key)%numPartitions.如果key是null,就随机的选择一个。可以通过参数partitioner.class定制分区函数。</li></ul></li></ul><p><strong>KafKa Consumer APIs</strong> Consumer API有两个级别。低级别的和一个指定的broker保持连接，并在接收完消息后关闭连接，这个级别是无状态的，每次读取消息都带着offset。 高级别的API隐藏了和brokers连接的细节，在不必关心服务端架构的情况下和服务端通信。还可以自己维护消费状态，并可以通过一些条件指定订阅特定的topic,比如白名单黑名单或者正则表达式。 <strong>低级别的API</strong></p><p>class SimpleConsumer {<br />/*向一个broker发送读取请求并得到消息集 */<br />public ByteBufferMessageSet fetch(FetchRequest request);<br />/*向一个broker发送读取请求并得到一个相应集 */<br />public MultiFetchResponse multifetch(List<FetchRequest> fetches);<br />/**<br />* 得到指定时间之前的offsets<br />* 返回值是offsets列表，以倒序排序<br />* @param time: 时间，毫秒,<br />* 如果指定为OffsetRequest<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">.</mi><mi>M</mi><mi>O</mi><mi>D</mi><mi>U</mi><mi>L</mi><mi>E</mi></mrow><annotation encoding="application/x-tex">.MODULE</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">.</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="mord mathdefault">L</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span></span></span></span>.LATIEST_TIME(), 得到最新的offset.<br />* 如果指定为OffsetRequest<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">.</mi><mi>M</mi><mi>O</mi><mi>D</mi><mi>U</mi><mi>L</mi><mi>E</mi></mrow><annotation encoding="application/x-tex">.MODULE</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">.</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="mord mathdefault">L</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span></span></span></span>.EARLIEST_TIME(),得到最老的offset.<br />*/<br />publiclong[] getOffsetsBefore(String topic, int partition, long time, int maxNumOffsets);<br />}</p><p>低级别的API是高级别API实现的基础，也是为了一些对维持消费状态有特殊需求的场景，比如<a href="http://www.linuxidc.com/topicnews.aspx?tid=13">Hadoop</a> consumer这样的离线consumer。 <strong>高级别的API</strong></p><p>/* 创建连接 */<br />ConsumerConnector connector = Consumer.create(consumerConfig);<br />interface ConsumerConnector {<br />/**<br />* 这个方法可以得到一个流的列表，每个流都是MessageAndMetadata的迭代，通过MessageAndMetadata可以拿到消息和其他的元数据（目前之后topic）<br />* Input: a map of &lt;topic, #streams&gt;<br />* Output: a map of &lt;topic, list of message streams&gt;<br />*/<br />public Map&lt;String,List<KafkaStream>&gt; createMessageStreams(Map&lt;String,Int&gt; topicCountMap);<br />/**<br />* 你也可以得到一个流的列表，它包含了符合TopicFiler的消息的迭代，<br />* 一个TopicFilter是一个封装了白名单或黑名单的正则表达式。<br />*/<br />public List<KafkaStream> createMessageStreamsByFilter(<br />TopicFilter topicFilter, int numStreams);<br />/* 提交目前消费到的offset */<br />public commitOffsets()<br />/* 关闭连接 */<br />public shutdown()<br />}</p><p>这个API围绕着由KafkaStream实现的迭代器展开，每个流代表一系列从一个或多个分区多和broker上汇聚来的消息，每个流由一个线程处理，所以客户端可以在创建的时候通过参数指定想要几个流。一个流是多个分区多个broker的合并，但是每个分区的消息只会流向一个流。 每调用一次createMessageStreams都会将consumer注册到topic上，这样consumer和brokers之间的负载均衡就会进行调整。API鼓励每次调用创建更多的topic流以减少这种调整。createMessageStreamsByFilter方法注册监听可以感知新的符合filter的tipic。 ####################################################### <strong>十、消息和日志</strong> 消息由一个固定长度的头部和可变长度的字节数组组成。头部包含了一个版本号和CRC32校验码。</p><p>/**<br />* 具有N个字节的消息的格式如下<br />*<br />* 如果版本号是0<br />*<br />* 1. 1个字节的 “magic” 标记<br />*<br />* 2. 4个字节的CRC32校验码<br />*<br />* 3. N - 5个字节的具体信息<br />*<br />* 如果版本号是1<br />*<br />* 1. 1个字节的 “magic” 标记<br />*<br />* 2.1个字节的参数允许标注一些附加的信息比如是否压缩了，解码类型等<br />*<br />* 3.4个字节的CRC32校验码<br />*<br />* 4. N - 6 个字节的具体信息<br />*<br />*/</p><p><strong>日志</strong>一个叫做“my_topic”且有两个分区的的topic,它的日志有两个文件夹组成，my_topic_0和my_topic_1,每个文件夹里放着具体的数据文件，每个数据文件都是一系列的日志实体，每个日志实体有一个4个字节的整数N标注消息的长度，后边跟着N个字节的消息。每个消息都可以由一个64位的整数offset标注，offset标注了这条消息在发送到这个分区的消息流中的起始位置。每个日志文件的名称都是这个文件第一条日志的offset.所以第一个日志文件的名字就是00000000000.kafka.所以每相邻的两个文件名字的差就是一个数字S,S差不多就是配置文件中指定的日志文件的最大容量。 消息的格式都由一个统一的接口维护，所以消息可以在producer,broker和consumer之间无缝的传递。存储在硬盘上的消息格式如下所示：</p><ul><li>消息长度: 4 bytes (value: 1+4+n)</li><li>版本号: 1 byte</li><li>CRC校验码: 4 bytes</li><li>具体的消息: n bytes</li></ul><p><img src="http://www.aboutyun.com/data/attachment/forum/201505/03/000751s9xnzlj99b3j2rms.png" alt="" /> <strong>写操作</strong>消息被不断的追加到最后一个日志的末尾，当日志的大小达到一个指定的值时就会产生一个新的文件。对于写操作有两个参数，一个规定了消息的数量达到这个值时必须将数据刷新到硬盘上，另外一个规定了刷新到硬盘的时间间隔，这对数据的持久性是个保证，在系统崩溃的时候只会丢失一定数量的消息或者一个时间段的消息。 <strong>读操作</strong> 读操作需要两个参数：一个64位的offset和一个S字节的最大读取量。S通常比单个消息的大小要大，但在一些个别消息比较大的情况下，S会小于单个消息的大小。这种情况下读操作会不断重试，每次重试都会将读取量加倍，直到读取到一个完整的消息。可以配置单个消息的最大值，这样服务器就会拒绝大小超过这个值的消息。也可以给客户端指定一个尝试读取的最大上限，避免为了读到一个完整的消息而无限次的重试。 在实际执行读取操纵时，首先需要定位数据所在的日志文件，然后根据offset计算出在这个日志中的offset(前面的的offset是整个分区的offset),然后在这个offset的位置进行读取。定位操作是由二分查找法完成的，Kafka在内存中为每个文件维护了offset的范围。 下面是发送给consumer的结果的格式：</p><p>MessageSetSend (fetch result)</p><p>total length : 4 bytes<br />error code : 2 bytes<br />message 1 : x bytes<br />…<br />message n : x bytes<br />MultiMessageSetSend (multiFetch result)</p><p>total length : 4 bytes<br />error code : 2 bytes<br />messageSetSend 1<br />…<br />messageSetSend n</p><p><strong>删除</strong> 日志管理器允许定制删除策略。目前的策略是删除修改时间在N天之前的日志（按时间删除），也可以使用另外一个策略：保留最后的N GB数据的策略(按大小删除)。为了避免在删除时阻塞读操作，采用了copy-on-write形式的实现，删除操作进行时，读取操作的二分查找功能实际是在一个静态的快照副本上进行的，这类似于Java的CopyOnWriteArrayList。 <strong>可靠性保证</strong> 日志文件有一个可配置的参数M，缓存超过这个数量的消息将被强行刷新到硬盘。一个日志矫正线程将循环检查最新的日志文件中的消息确认每个消息都是合法的。合法的标准为：所有文件的大小的和最大的offset小于日志文件的大小，并且消息的CRC32校验码与存储在消息实体中的校验码一致。如果在某个offset发现不合法的消息，从这个offset到下一个合法的offset之间的内容将被移除。 有两种情况必须考虑： 1，当发生崩溃时有些数据块未能写入。 2，写入了一些空白数据块。第二种情况的原因是，对于每个文件，操作系统都有一个inode（inode是指在许多“类Unix文件系统”中的一种数据结构。每个inode保存了文件系统中的一个文件系统对象,包括文件、目录、大小、设备文件、socket、管道, 等等），但无法保证更新inode和写入数据的顺序，当inode保存的大小信息被更新了，但写入数据时发生了崩溃，就产生了空白数据块。CRC校验码可以检查这些块并移除，当然因为崩溃而未写入的数据块也就丢失了。</p>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
          <category> mongodb </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
